{"version":3,"sources":["src/assets/logo/logo.png","src/assets/backgrounds/Background.jpg","src/constants/Animations.js","src/constants/env.js","src/constants/colors.js","src/constants/Models.js","src/constants/StorageToken.js","src/constants/Images.js","src/components/Badge/index.js","src/services/FontsLoader.js","src/translations/index.js","src/stores/User/UserType.js","src/stores/User/UserReducers.js","src/stores/Settings/SettingsType.js","src/stores/Settings/SettingsReducers.js","src/stores/Items/ItemsType.js","src/stores/Items/ItemsReducers.js","src/stores/Categories/CategoriesType.js","src/stores/Categories/CategoriesReducers.js","src/stores/Orders/OrdersType.js","src/stores/Orders/OrdersReducers.js","src/stores/rootReducer.js","src/stores/store.js","src/stores/User/UserActions.js","src/stores/Settings/SettingsActions.js","src/stores/Items/ItemsActions.js","src/stores/Categories/CategoriesActions.js","src/stores/Orders/OrdersActions.js","src/services/LocaleLoader.js","src/services/apis.js","src/services/WishList.js","src/services/Basket.js","src/services/TranslationsMethods.js","src/services/BasketClass.js","src/components/TextBanner/TextBanner.js","src/components/Cards/DetailCard.js","src/components/Cards/CardSpecial.js","src/components/Cards/CardNormal.js","src/components/Cards/CardCheckout.js","src/components/Headers/HeaderNav.js","src/views/Home/components/TopNavigation.js","src/views/Home/components/ItemsCollection.js","src/views/Home/components/AdsDisplay.js","src/views/Home/components/CategoriesItemsList.js","src/views/Home/components/CategoriesList.js","src/views/Home/Home.js","src/views/Loading/styles.js","src/views/Loading/Loading.js","src/views/Intro/IntroMain/IntroMain.js","src/views/Intro/Auth/Login.js","src/views/Intro/Auth/Register.js","src/views/AdShow/AdShow.js","src/views/Category/components/SubCategoriesList.js","src/views/Category/components/ItemsList.js","src/views/Category/Category.js","src/views/Item/components/ItemImages.js","src/views/Item/components/ItemPanel.js","src/views/Item/components/ItemDetails.js","src/views/Item/components/DeepDetails.js","src/views/Item/components/Actions.js","src/views/Item/components/RelatedItems.js","src/views/Item/Item.js","src/views/ItemsShow/ItemsShow.js","src/views/Orders/Components/HeaderNav.js","src/views/Orders/Components/OrderBox.js","src/views/Orders/Orders.js","src/views/OrderShow/Components/OrderDetails.js","src/views/OrderShow/Components/ItemBox.js","src/views/OrderShow/Components/ItemsShow.js","src/views/OrderShow/Components/StatusDetails.js","src/views/OrderShow/index.js","src/views/Wishlist/HeaderNav.js","src/views/Wishlist/index.js","src/views/Search/index.js","src/views/Checkout/components/Shipping.js","src/views/Checkout/components/AddressesContainer.js","src/views/Checkout/components/PaymentMethod.js","src/views/Checkout/components/Pay.js","src/views/Checkout/index.js","src/views/Checkout/CheckoutDone.js","src/navigation/OrdersNavigation.js","src/views/Settings/Contents/EditUser.js","src/views/Settings/Contents/Notifications.js","src/views/Settings/Contents/Language.js","src/views/Settings/SettingsMain/components/HeaderNav.js","src/views/Settings/SettingsMain/index.js","src/views/Settings/Addresses/AddressBox.js","src/views/Settings/Addresses/AddAddress.js","src/views/Settings/Addresses/index.js","src/navigation/SettingsNavigation.js","src/navigation/HomeNavigation.js","src/navigation/BottomTapNavigation.js","src/views/InternalAuth/InternalLogin.js","src/views/InternalAuth/InternalRegister.js","src/views/Home/CheckoutWithBottom.js","src/navigation/MainNavigation.js","src/navigation/IntroNavigation.js","src/Router.js","src/Root.js","App.js","src/assets/logo/raccoon.png","assets/fonts/SpaceMono-Regular.ttf","assets/fonts/OpenSans-Regular.ttf","assets/fonts/OpenSans-Bold.ttf","assets/fonts/Cairo-Regular.ttf","assets/fonts/Cairo-Bold.ttf","src/assets/backgrounds/loading.png"],"names":["module","exports","Animations","screenOptions","headerShown","gestureEnabled","gestureDirection","cardStyleInterpolator","CardStyleInterpolators","forFadeFromBottomAndroid","transitionSpec","open","animation","config","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","close","duration","easing","Easing","linear","screenOptionsHome","env","server","dev","itemImageSource","categoryImageSource","subCategoriesImageSource","colors","primary","success","info","basic","moreWhite","Dimensions","get","StorageToken","width","height","localeToken","firstTime","userToken","notificationToken","wishList","require","count","size","theme","useTheme","cs","color","styles","StyleSheet","create","box","position","left","top","borderRadius","overflow","View","style","LinearGradient","justifyContent","alignItems","fontSize","textAlign","fontFamily","FontsLoader","a","async","Font","Ionicons","font","translationGetters","ar","en","translate","memoize","key","i18n","t","JSON","stringify","setI18nConfig","lang","isRTL","AsyncStorage","setItem","I18nManager","forceRTL","translations","locale","SetFirstTime","changeLanguage","Updates","UserType","SET_USER","SET_ADDRESSES","SET_ORDERS","SET_LOGOUT","SET_NOTIFICATION_TOKEN","intintalState","user","auth","addresses","orders","reducer","state","action","type","payload","SettingsType","SET_LOCALE","rtl","ItemsType","SET_SELECT_FOR_YOU_ITEMS_FIRST","SET_SELECT_FOR_YOU_ITEMS_SECOND","SET_NEW_ITEMS","SET_CATEGORIES_WITH_ITEMS","SET_WISHLIST_ITEMS","SET_ADS","selectForYouItemsFirst","selectForYouItemsSecond","newItems","categoriesWithItems","wishListItems","ads","CategoriesType","SET_CATEGORIES","categories","OrdersType","SET_ORDERS_ITEMS","SET_SELECTED_ADDRESS","SET_ORDER_DISCOUNT_CODE","RESET_ORDERS","orderItems","address","city","area","lat","long","ID","orderDiscountCode","rootReducer","combineReducers","UserReducers","settings","SettingsReducers","items","ItemsReducers","CategoriesReducers","OrdersReducers","store","createStore","setUser","item","setAddresses","setOrders","setLogout","setNotificationToken","setLocale","setSelectForYouItemsFirst","setSelectForYouItemsSecond","setNewItems","setCategoriesWithItems","setWishListItems","setAds","setCategories","setOrderItems","setSelectedAddress","setOrderDiscountCode","resetOrders","dispatch","SettingsActions","LocaleLoader","getItem","apis","login","data","onSuccess","onError","axios","post","then","res","catch","err","register","token","headers","Authorization","update","main","index","showItem","id","indexCategory","page","loadMoreCategory","indexSubCategoriesItems","search","text","adIndexItems","indexItemsWithIDS","indexAllItems","StoreNotificationToken","UpdateNotificationToken","storeAddress","indexAddress","removeAddress","storeOrder","showOrder","checkDiscountCode","code","user_id","storeWishList","destroyWishList","setWishListItem","ItemsActions","WishList","StoreInStorage","_wishListItems","StoreWishListItem","ItemID","states","getState","includes","push","IndexWishListItems","parse","CheckIsInWishList","RemoveItemFromWishList","forEach","trg","splice","RemoveAllItems","OrdersActions","Basket","ChangeQty","itemID","qty","storagesItems","AddToBasket","_item","hasCategory","category","title","hasItem","RemoveItemFromBasket","inx","length","CheckItemInBasket","has","TranslationsMethods","ReturnValue","col","standerValue","value","column_name","ReturnIconArrowNav","ReturnIconArrowSettings","ReturnFont","fontType","ReturnBottomTitle","BasketClass","ref","setRef","getRef","console","log","openBottom","snapTo","closeBottom","onPress","children","TouchableOpacity","paddingVertical","paddingHorizontal","flexDirection","valueStyle","valueSubTitle","valueSubTitleStyle","valueSize","titleSize","moreValueStyle","moreSubTitleValue","React","useState","valueWidth","setValueWidth","onLayout","event","nativeEvent","layout","bottom","connect","props","navigation","useNavigation","inWishList","setInWishList","added","setAdded","setQty","animatedAddButton","useRef","Animated","Value","current","TryAnimated","Toast","show","text1","text2","visibilityTime","timing","toValue","useNativeDriver","start","setTimeout","useFocusEffect","useCallback","installBasketChecker","ChangeQtyLocal","padding","backgroundColor","marginHorizontal","borderWidth","borderColor","level","flex","navigate","Image","source","uri","image","resizeMode","paddingLeft","Pressable","name","paddingTop","DetailCard","original_price","toFixed","textDecorationStyle","textDecorationLine","textDecorationColor","price","transform","scaleX","status","borderTopLeftRadius","borderBottomLeftRadius","evaProps","borderTopRightRadius","borderBottomRightRadius","disabled","discount","new","imageContainer","imageBox","marginTop","qtyBox","qtyText","actionsPanel","priceText","addButton","plusIcon","heartIconBox","right","heartIcon","fill","hasCart","BackIcon","accessoryRight","number","Badge","BadgeView","accessoryLeft","goBack","icon","openCategoriesList","stander","openCheckoutList","constants","iconSize","imageSize","imageSource","SearchView","marginBottom","ImageView","SimpleLineIcons","scope","hasShowAll","TextBanner","ScrollView","showsHorizontalScrollIndicator","horizontal","map","ad","setAd","useEffect","randAd","Math","floor","random","install","adID","marginVertical","categoryID","container","zIndex","closePanel","CategoryBox","paddingBottom","borderBottomColor","borderBottomWidth","showsVerticalScrollIndicator","categoriesList","checkoutList","shows","setShows","translateY","opacityFade","CategoriesListAnimation","toggleCategoriesList","scrollEventThrottle","onScroll","e","y","contentOffset","ItemsCollection","opacity","translateX","alignContent","imageCard","pt30","UserActions","CategoriesActions","installer","End","AuthCheck","authSuccess","authError","wishlist","autoHide","ImageBackground","useForm","control","handleSubmit","errors","contentContainerStyle","render","onChange","onBlur","keyboardType","onChangeText","placeholder","textStyle","placeholderTextColor","phone","caption","defaultValue","rules","required","secureTextEntry","password","onHide","response","error","message","role_id","route","params","setItems","adItems","flexWrap","subCategories","ChangeSubCategories","setPage","load","setLoad","subCategoryID","setSubCategoryID","getType","setGetType","justItems","setJustItems","isLoadMore","setIsLoadMore","selectForYouItems","setData","SubCategoriesList","layoutMeasurement","contentSize","isCloseToBottom","loadMoreData","Entypo","marginLeft","description","DetailsList","MaterialCommunityIcons","weight","packing","isLoad","setIsLoad","setItemStorageCount","relatedItems","setRelatedItems","allItemCounts","ItemImages","ItemPanel","DeepDetails","RelatedItems","_data","loadMore","MaterialIcons","ListView","bold","fontWeight","orderID","CreatedAt","total","note","OrdersFilter","paymentTotal","successOrdersTotal","ordersTotal","pendingOrdersList","setPendingOrdersList","_pendingOrders","_order","PendingOrders","margin","OrderBox","AntDesign","order","orderDetailsBox","flex1","orderDetailsText","payment_method","detailsBox","ItemBox","detailBox","DiverBox","DetailBox","value2","setOrder","OrderDetails","StatusDetails","itemsList","setItemsList","ids","BillTotal","TotalOriginalPrice","setStatus","results","setResults","setText","HoldContent","SearchingHolder","NoResults","ResultsContent","returnKeyType","val","onEndEditing","ship","setShip","lastAddress","TakeMyLocation","Location","location","coords","latitude","longitude","label","openBottomSheet","apt","closeBottomSheet","AddressBox","PaymentCard","paymentType","PressPaymentType","selectedPaymentType","discountCode","setDiscountCode","GetTotal","itemTotal","fixedDiscountValue","TaxValue","TotalBeforeTax","totalAfterDiscount","TaxValueFull","TaxValueWithDiscount","ReturnTotal","parseFloat","Order","address_id","discount_id","_orderItemsList","item_id","order_items","bottomSheetRef","initialSnap","snapPoints","renderContent","enabledInnerScrolling","Stack","createStackNavigator","OrdersNavigation","Navigator","headerMode","initialRouteName","Screen","component","Orders","OrderShow","allNotification","setAllNotification","orderNotification","setOrderNotification","all_notification","orders_notification","checked","setType","ListItem","Language","removeItem","accessory","reset","cityRef","areaRef","addressRef","noteRef","setLat","setLong","keyboardShouldPersistTaps","keyboardDismissMode","autoCorrect","inputAccessoryViewID","InputAccessoryView","nativeID","focus","BottomSheetRef","_addresses","HeaderNav","SettingsMain","Addresses","MainNavigation","useMemo","Home","AdShow","Category","ItemsShow","Search","Tab","AnimatedTabBarNavigator","tabBarIcon","focused","Feather","iconName","tabBarOptions","activeTintColor","inactiveTintColor","showLabel","appearance","floating","activeTabBackgrounds","HomeNavigation","Wishlist","SettingsNavigation","CategoryTitleView","CategoryTotal","ItemTotal","ItemsCount","PTotal","TotalOriginal","p","CardCheckout","BottomTapNavigation","Item","Checkout","CheckoutDone","InternalRegister","InternalLogin","IntroNavigation","Intro","IntroMain","Login","Register","icons","EvaIconsPack","eva","customMapping","mapping","SafeAreaView","StatusBar","NavigationContainer","Loading","Root","Router","App","isLoadingComplete","setLoadingComplete","SplashScreen","skipLoadingScreen"],"mappings":"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","file":"static/js/app.3772b292.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5ef2d5d6.png\";","module.exports = __webpack_public_path__ + \"static/media/Background.5d928713.jpg\";","import { Easing } from \"react-native\";\r\nimport { CardStyleInterpolators} from \"@react-navigation/stack\";\r\n\r\nlet Animations = {\r\n  screenOptions: {\r\n    headerShown: false,\r\n    gestureEnabled: true,\r\n    gestureDirection: \"horizontal\",\r\n    cardStyleInterpolator: CardStyleInterpolators.forFadeFromBottomAndroid,\r\n    transitionSpec: {\r\n      open: {\r\n        animation: \"spring\",\r\n        config: {\r\n          stiffness: 1000,\r\n          damping: 300,\r\n          mass: 3,\r\n          overshootClamping: false,\r\n          restDisplacementThreshold: 0.01,\r\n          restSpeedThreshold: 0.01,\r\n        },\r\n      },\r\n      close: {\r\n        animation: \"timing\",\r\n        config: {\r\n          duration: 100,\r\n          easing: Easing.linear,\r\n        },\r\n      },\r\n    },\r\n  },\r\n  screenOptionsHome:{\r\n    headerShown: false,\r\n    gestureEnabled: false,\r\n    gestureDirection: \"horizontal\",\r\n    cardStyleInterpolator: CardStyleInterpolators.forFadeFromBottomAndroid,\r\n    transitionSpec: {\r\n      open: {\r\n        animation: \"spring\",\r\n        config: {\r\n          stiffness: 1000,\r\n          damping: 300,\r\n          mass: 3,\r\n          overshootClamping: false,\r\n          restDisplacementThreshold: 0.01,\r\n          restSpeedThreshold: 0.01,\r\n        },\r\n      },\r\n      close: {\r\n        animation: \"timing\",\r\n        config: {\r\n          duration: 100,\r\n          easing: Easing.linear,\r\n        },\r\n      },\r\n    },\r\n  }\r\n};\r\n\r\nexport default Animations;","// Envs\r\nlet dev = false;\r\nlet devserver = \"http://192.168.1.108:8082/\";\r\nlet deploy = \"http://35.188.10.200:8082/\";\r\n\r\n\r\nlet env = {\r\n  server:dev?devserver:deploy,\r\n  dev:dev,\r\n  itemImageSource:'public/items/',\r\n  categoryImageSource:'public/categories/',\r\n  subCategoriesImageSource:'public/subCategories/'\r\n\r\n};\r\n\r\nexport default env;","\r\nlet colors = {\r\n    primary:\"#98ded9\",\r\n    success:\"#c7ffd8\",\r\n    info:\"#161d6f\",\r\n    basic:\"#f6f6f6\",\r\n    moreWhite:\"#f7f9fc\"\r\n}\r\n\r\nexport default colors;","import { Dimensions } from \"react-native\";\r\n\r\n// Width,Height\r\nlet { width, height } = Dimensions.get(\"window\");\r\n\r\n// Models\r\nlet Models = {\r\n  window: {\r\n    width: width,\r\n    height: height,\r\n  },\r\n  header: {\r\n    svgHeight: height * 0.4,\r\n    ltrSpace: 70,\r\n    rtlSpace: 300,\r\n  },\r\n  iconSize:{\r\n    width:width / 3,\r\n    height:height / 3\r\n  },\r\n  imageSize:{\r\n    width:width/2.25 ,\r\n    height:height / 4.5\r\n  },\r\n  iconSimple:{\r\n    width:32,\r\n    height:32\r\n  }\r\n};\r\n\r\nexport default Models;\r\n","\r\n\r\nlet StorageToken = {\r\n    localeToken:'@ecommarce_locale',\r\n    firstTime:\"@ecommarce_first_time\",\r\n    userToken:\"@ecommarce_user_token\",\r\n    notificationToken:\"@ecommarce_notification_token\",\r\n    wishList:\"@ecommarce_wishlist\"\r\n};\r\n\r\nexport default StorageToken;","\r\n\r\nlet Images = {\r\n    raccoon:require('../assets/logo/raccoon.png')\r\n};\r\n\r\nexport default Images;","import React from \"react\";\r\nimport { View, StyleSheet } from \"react-native\";\r\nimport { useTheme, Text } from \"@ui-kitten/components\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nexport default ({count,size = \"default\"}) => {\r\n  let theme = useTheme();\r\n  let cs = {\r\n    size: size == \"default\" ? 22:16,\r\n    color: theme[\"color-primary-500\"],\r\n  };\r\n\r\n  let styles = StyleSheet.create({\r\n    box: {\r\n      position: \"absolute\",\r\n      left: -15,\r\n      top: -5,\r\n      borderRadius: cs.size / 2,\r\n      overflow:'hidden'\r\n    },\r\n  });\r\n  return (\r\n  <View style={styles.box}>\r\n      <LinearGradient colors={[theme['color-success-500'], theme['color-primary-500']]} style={{width:cs.size,height:cs.size,justifyContent:'center',alignItems:'center'}}>\r\n    <Text style={{fontSize:size == \"default\"?12:10,textAlign:'center',alignItems:'center',fontFamily:'CairoBold'}}>{count}</Text>\r\n    </LinearGradient>\r\n  </View>\r\n  );\r\n};\r\n","/** FontLoader */\r\n\r\nimport React from 'react';\r\n\r\nimport * as Font from \"expo-font\"; // Expo Fonts\r\nimport { Ionicons } from \"@expo/vector-icons\"; // Vector Icons Register\r\n\r\nlet FontsLoader = async () => {\r\n        await Font.loadAsync({\r\n          ...Ionicons.font,\r\n          \"space-mono\": require(\"../../assets/fonts/SpaceMono-Regular.ttf\"),\r\n          \"OpenSans\":require(\"../../assets/fonts/OpenSans-Regular.ttf\"),\r\n          \"openSansBold\":require(\"../../assets/fonts/OpenSans-Bold.ttf\"),\r\n          \"Cairo\":require('../../assets/fonts/Cairo-Regular.ttf'),\r\n          \"CairoBold\":require('../../assets/fonts/Cairo-Bold.ttf')\r\n        });\r\n    }\r\n\r\n\r\nexport default FontsLoader;","import i18n from \"i18n-js\";\nimport memoize from \"lodash.memoize\"; \nimport {I18nManager} from 'react-native';\n\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Updates from \"expo-updates\";\n\n\n// Constants\nimport {StorageToken} from '../constants'\n\nconst translationGetters = {\n  ar: () => require('./ar.json'),\n  en: () => require('./en.json'),\n};\n\nexport const translate = memoize(\n  (key, config) => i18n.t(key, config),\n  (key, config) => (config ? key + JSON.stringify(config) : key)\n);\n\nexport const setI18nConfig = async(lang,isRTL) => {\n\n  // Set lang in AsyncStorage => string 'en','ar'\n  await AsyncStorage.setItem(StorageToken.localeToken, lang);\n  // check if is rtl \n  I18nManager.forceRTL(isRTL);\n  // Set TRanslations\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  // Set Locale in i18n\n  i18n.locale = lang;\n  // Set store disppatch to locale in settings locale\n  return \"Done\";\n};\n\nexport const SetFirstTime = async (lang, isRTL) => {\n  await AsyncStorage.setItem(StorageToken.localeToken, lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n  \n   // Set store disppatch to locale in settings locale\n  return 'Done';\n};\n\nexport const changeLanguage = async(lang,isRTL) => {\n  await AsyncStorage.setItem(StorageToken.localeToken, lang);\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = { [lang]: translationGetters[lang]() };\n  i18n.locale = lang;\n   // Set store disppatch to locale in settings locale\n  Updates.reloadAsync();\n}","let UserType = {\r\n  SET_USER:\"SET_USER\",\r\n  SET_ADDRESSES:\"SET_ADDRESSES\",\r\n  SET_ORDERS:\"SET_ORDERS\",\r\n  SET_LOGOUT:\"SET_LOGOUT\",\r\n  SET_NOTIFICATION_TOKEN:\"SET_NOTIFICATION_TOKEN\"\r\n};\r\n\r\nexport default UserType;\r\n","import UserType from \"./UserType\";\r\n\r\nconst intintalState = {\r\n  user: {},\r\n  auth: false,\r\n  addresses:[],\r\n  orders:[],\r\n  notificationToken:{}\r\n};\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case UserType.SET_USER:\r\n      return { ...state, user: action.payload, auth: true };\r\n      case UserType.SET_ADDRESSES:\r\n      return { ...state, addresses: action.payload };\r\n      case UserType.SET_ORDERS:\r\n      return { ...state, orders: action.payload };\r\n      case UserType.SET_NOTIFICATION_TOKEN:\r\n      return { ...state, notificationToken:action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","let SettingsType = {\r\n  SET_LOCALE:\"SET_LOCALE\",\r\n}\r\n\r\nexport default SettingsType;","import SettingsType from './SettingsType'\r\n\r\nconst intintalState = {\r\n  locale:{\r\n    lang:'',\r\n    rtl:false\r\n  },\r\n};\r\n\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case SettingsType.SET_LOCALE:\r\n      return {...state,locale:action.payload}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","let ItemsType = {\r\n    SET_SELECT_FOR_YOU_ITEMS_FIRST:\"SET_SELECT_FOR_YOU_ITEMS_FIRST\",\r\n    SET_SELECT_FOR_YOU_ITEMS_SECOND:\"SET_SELECT_FOR_YOU_ITEMS_SECOND\",\r\n    SET_NEW_ITEMS:\"SET_NEW_ITEMS\",\r\n    SET_CATEGORIES_WITH_ITEMS:\"SET_CATEGORIES_WITH_ITEMS\",\r\n    SET_WISHLIST_ITEMS:\"SET_WISHLIST_ITEMS\",\r\n    SET_ADS:\"SET_ADS\"\r\n  }\r\n  \r\n  export default ItemsType;","import ItemsType from \"./ItemsType\";\r\n\r\nconst intintalState = {\r\n  selectForYouItemsFirst: [],\r\n  selectForYouItemsSecond: [],\r\n  newItems: [],\r\n  categoriesWithItems: [],\r\n  wishListItems: [],\r\n  ads:[]\r\n};\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case ItemsType.SET_SELECT_FOR_YOU_ITEMS_FIRST:\r\n      return { ...state, selectForYouItemsFirst: action.payload };\r\n\r\n    case ItemsType.SET_SELECT_FOR_YOU_ITEMS_SECOND:\r\n      return { ...state, selectForYouItemsSecond: action.payload };\r\n\r\n    case ItemsType.SET_NEW_ITEMS:\r\n      return { ...state, newItems: action.payload };\r\n\r\n    case ItemsType.SET_CATEGORIES_WITH_ITEMS:\r\n      return { ...state, categoriesWithItems: action.payload };\r\n    case ItemsType.SET_WISHLIST_ITEMS:\r\n      return { ...state, wishListItems: action.payload };\r\n      case ItemsType.SET_ADS:\r\n      return { ...state, ads: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","let CategoriesType = {\r\n    SET_CATEGORIES:\"SET_CATEGORIES\"\r\n  }\r\n  \r\n  export default CategoriesType;","import CategoriesType from \"./CategoriesType\";\r\n\r\nconst intintalState = {\r\n  categories: [],\r\n};\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case CategoriesType.SET_CATEGORIES:\r\n      return { ...state, categories: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","let OrdersType = {\r\n    SET_ORDERS_ITEMS:\"SET_ORDERS_ITEMS\",\r\n    SET_SELECTED_ADDRESS:\"SET_SELECTED_ADDRESS\",\r\n    SET_ORDER_DISCOUNT_CODE:\"SET_ORDER_DISCOUNT_CODE\",\r\n    RESET_ORDERS:\"RESET_ORDERS\"\r\n}\r\n\r\nexport default OrdersType;","import OrdersType from './OrdersType'\r\n\r\nconst intintalState = {\r\n  orderItems: [],\r\n  address: {\r\n    city: '',\r\n    area: '',\r\n    address: '',\r\n    lat: 0,\r\n    long: 0,\r\n    ID: 0\r\n  },\r\n  orderDiscountCode: null\r\n};\r\n\r\n\r\nconst reducer = (state = intintalState, action) => {\r\n  switch (action.type) {\r\n    case OrdersType.SET_ORDERS_ITEMS:\r\n      return { ...state, orderItems: action.payload }\r\n    case OrdersType.SET_SELECTED_ADDRESS:\r\n      return { ...state, address: action.payload }\r\n    case OrdersType.SET_ORDER_DISCOUNT_CODE:\r\n      return { ...state, orderDiscountCode: action.payload }\r\n    case OrdersType.RESET_ORDERS:\r\n      return { ...state, orderItems: [], address: {}, orderDiscountCode: null }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import UserReducers from './User/UserReducers'\nimport SettingsReducers from './Settings/SettingsReducers'\nimport ItemsReducers from './Items/ItemsReducers'\nimport CategoriesReducers from './Categories/CategoriesReducers'\nimport OrdersReducers from './Orders/OrdersReducers'\n\nimport {combineReducers} from 'redux'\n\nconst rootReducer = combineReducers({\n  user: UserReducers,\n  settings:SettingsReducers,\n  items:ItemsReducers,\n  categories:CategoriesReducers,\n  orders:OrdersReducers\n});\n\nexport default rootReducer;","import {createStore} from 'redux'\nimport rootReducer from './rootReducer'\n\n\nconst store = createStore(rootReducer)\n\nexport default store;","import UserType from './UserType'\r\n\r\nexport const setUser = (item) => {\r\n  return {\r\n    type:UserType.SET_USER,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setAddresses = (item) => {\r\n  return {\r\n    type:UserType.SET_ADDRESSES,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setOrders = (item) => {\r\n  return {\r\n    type:UserType.SET_ORDERS,\r\n    payload:item\r\n  }\r\n}\r\n\r\nexport const setLogout = () => {\r\n  return {\r\n    type:UserType.SET_LOGOUT,\r\n  }\r\n}\r\n\r\nexport const setNotificationToken = (item) => {\r\n  return {\r\n    type:UserType.SET_NOTIFICATION_TOKEN,\r\n    payload:item\r\n  }\r\n}","import SettingsType from './SettingsType';\r\n\r\n\r\n\r\nexport const setLocale = (item) => {\r\n  return {\r\n    type:SettingsType.SET_LOCALE,\r\n    payload:item\r\n  }\r\n}","import ItemsType from \"./ItemsType\";\r\n\r\nexport const setSelectForYouItemsFirst = (item) => {\r\n  return {\r\n    type: ItemsType.SET_SELECT_FOR_YOU_ITEMS_FIRST,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const setSelectForYouItemsSecond = (item) => {\r\n  return {\r\n    type: ItemsType.SET_SELECT_FOR_YOU_ITEMS_SECOND,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const setNewItems = (item) => {\r\n  return {\r\n    type: ItemsType.SET_NEW_ITEMS,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const setCategoriesWithItems = (item) => {\r\n  return {\r\n    type: ItemsType.SET_CATEGORIES_WITH_ITEMS,\r\n    payload: item,\r\n  };\r\n};\r\n\r\n\r\nexport const setWishListItems = (item) => {\r\n  return {\r\n    type: ItemsType.SET_WISHLIST_ITEMS,\r\n    payload: item,\r\n  };\r\n};\r\n\r\nexport const setAds = (item) => {\r\n  return {\r\n    type: ItemsType.SET_ADS,\r\n    payload: item,\r\n  };\r\n};\r\n","import CategoriesType from './CategoriesType'\r\n\r\nexport const setCategories = (item) => {\r\n    return {\r\n      type: CategoriesType.SET_CATEGORIES,\r\n      payload: item,\r\n    };\r\n  };","import OrdersType from './OrdersType'\r\n\r\nexport const setOrderItems = (item) => {\r\n    return {\r\n      type:OrdersType.SET_ORDERS_ITEMS,\r\n      payload:item\r\n    }\r\n  }\r\n\r\n  export const setSelectedAddress = (item) => {\r\n    return {\r\n      type:OrdersType.SET_SELECTED_ADDRESS,\r\n      payload:item\r\n    }\r\n  }\r\n\r\n  export const setOrderDiscountCode = (item) => {\r\n    return {\r\n      type:OrdersType.SET_ORDER_DISCOUNT_CODE,\r\n      payload:item\r\n    }\r\n  }\r\n\r\n  \r\n  export const resetOrders = () => {\r\n    return {\r\n      type:OrdersType.RESET_ORDERS,\r\n    }\r\n  }","/** LocaleLoader */\r\n\r\nimport React from 'react';\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport { setI18nConfig, SetFirstTime } from '../translations';\r\n\r\n// Constants\r\nimport {StorageToken} from '../constants'\r\n\r\n//\r\nimport store from '../stores/store'\r\nimport {SettingsActions} from '../stores'\r\n\r\nlet setLocale = item => store.dispatch(SettingsActions.setLocale(item))\r\nasync function LocaleLoader() {\r\n\r\n        /* Load Locale and translation from storage  */\r\n        const locale = await AsyncStorage.getItem(StorageToken.localeToken);\r\n        // Check If the first time is load\r\n        if (!locale) {\r\n            // Set it to english if the first time\r\n            SetFirstTime(\"ar\", true);\r\n            setLocale({lang:\"ar\",rtl:true})\r\n        } else {\r\n            if (locale == \"en\") {\r\n                await SetFirstTime(\"en\", false);\r\n                setLocale({lang:\"en\",rtl:false})\r\n            } else if (locale == \"ar\") {\r\n               await setI18nConfig(\"ar\", true);\r\n               setLocale({lang:\"ar\",rtl:true})\r\n            }\r\n        }\r\n\r\n        return 'Done';\r\n}\r\n\r\nexport default LocaleLoader;","import axios from \"axios\";\r\nimport { env } from \"../constants\";\r\n\r\nlet apis = {\r\n  auth:{\r\n      login(data,onSuccess,onError){\r\n          axios.post(env.server + 'app/user/auth/login',data).then((res) => {\r\n            onSuccess(res.data)\r\n          }).catch(err => {\r\n              onError(err)\r\n          })\r\n      },\r\n      register(data,onSuccess,onError){\r\n        axios.post(env.server + 'auth/register',data).then((res) => {\r\n            onSuccess(res.data)\r\n          }).catch(err => {\r\n              onError(err)\r\n          })\r\n      },\r\n      auth(token,onSuccess,onError) {\r\n        axios\r\n        .get(env.server + \"app/user/auth/auth\", {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        })\r\n        .then((res) => onSuccess(res.data))\r\n        .catch((err) => onError(err));\r\n      },\r\n      update(data,onSuccess,onError){\r\n        axios.post(env.server + 'app/user/auth/update',data).then((res) => {\r\n            onSuccess(res.data)\r\n          }).catch(err => {\r\n              onError(err)\r\n          })\r\n      },\r\n  },\r\n  main:{\r\n    index(onSuccess,onError) {\r\n      axios.get(env.server + 'app/index').then((res) => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      })\r\n    },\r\n    showItem(id,onSuccess,onError) {\r\n      axios.get(env.server + 'app/item/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    indexCategory(id,page,onSuccess,onError) {\r\n      axios.get(env.server + 'app/category/index/' + id + '/' + page).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    loadMoreCategory(id,page,onSuccess,onError) {\r\n      axios.get(env.server + 'app/category/loadMore/' + id + '/' + page).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    indexSubCategoriesItems(id,page,onSuccess,onError) {\r\n      axios.get(env.server + 'app/subCategory/index/' + id + '/' + page).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    search(text,onSuccess,onError) {\r\n      axios.get(env.server + 'app/search/' + text).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    adIndexItems(id,onSuccess,onError) {\r\n      axios.get(env.server + 'advance/ad_items/index/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    indexItemsWithIDS(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/items/indexWithIDS',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    indexAllItems(data,onSuccess,onError) {\r\n      axios.get(env.server + 'app/items/indexAllItems/' + data.type + \"/\" + data.page).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    StoreNotificationToken(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/user/notification/store',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    UpdateNotificationToken(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/user/notification/update',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    }\r\n  },\r\n  address:{\r\n    storeAddress(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/user/address/store',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    indexAddress(id,onSuccess,onError) {\r\n      axios.get(env.server + 'app/user/address/index/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    removeAddress(id,onSuccess,onError) {\r\n      axios.get(env.server + 'app/user/address/destroy/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    }\r\n  },\r\n  orders:{\r\n    storeOrder(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/user/orders/store',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    showOrder(id,onSuccess,onError) {\r\n      axios.get(env.server + 'app/user/order/show/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    checkDiscountCode(data,onSuccess,onError) {\r\n      axios.get(env.server + 'app/discountCode/check/' + data.code + '/' + data.user_id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    }\r\n  },\r\n  wishList:{\r\n    storeWishList(data,onSuccess,onError) {\r\n      axios.post(env.server + 'app/user/wishlist/store',data).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    },\r\n    destroyWishList(id,onSuccess,onError) {\r\n      axios.get(env.server + 'app/user/wishlist/store/' + id).then(res => {\r\n        onSuccess(res.data)\r\n      }).catch(err => {\r\n        onError(err)\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport default apis;\r\n","import store from '../stores/store'\r\nimport {ItemsActions,OrdersActions} from '../stores'\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport {StorageToken} from '../constants'\r\n\r\n\r\nlet setOrderItems = item => store.dispatch(OrdersActions.setOrderItems(item))\r\n\r\nlet setWishListItem = item => store.dispatch(ItemsActions.setWishListItems(item))\r\n\r\nfunction WishList() {\r\n\r\n    async function StoreInStorage(wishListItems) {\r\n        let _wishListItems = JSON.stringify(wishListItems)\r\n        await AsyncStorage.setItem(StorageToken.wishList,_wishListItems)\r\n        return \"resolved\"\r\n    }\r\n\r\n    async function StoreWishListItem(ItemID) {\r\n        let states = store.getState()\r\n        let wishListItems = states.items.wishListItems\r\n        if(!wishListItems.includes(ItemID)) {\r\n            wishListItems.push(ItemID)\r\n        }\r\n        setWishListItem(wishListItems)\r\n        await StoreInStorage(wishListItems)\r\n        return \"Stored\"\r\n    }\r\n\r\n    async function IndexWishListItems() {\r\n        let wishListItems = await AsyncStorage.getItem(StorageToken.wishList)\r\n        let _wishListItems = []\r\n        if(wishListItems) {\r\n            _wishListItems = JSON.parse(wishListItems)\r\n        }\r\n        return _wishListItems\r\n    }\r\n\r\n    function CheckIsInWishList(ItemID) {\r\n\r\n        let states = store.getState()\r\n        let wishListItems = states.items.wishListItems\r\n        if(wishListItems.includes(ItemID))\r\n        {\r\n           return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    async function RemoveItemFromWishList(ItemID) {\r\n        let states = store.getState()\r\n        let wishListItems = states.items.wishListItems\r\n        wishListItems.forEach((trg,index) => {\r\n            if(ItemID == trg) {\r\n                wishListItems.splice(index,1)\r\n            }\r\n        })\r\n\r\n        setWishListItem(wishListItems)\r\n\r\n        await StoreInStorage(wishListItems)\r\n\r\n        return \"Removed\"\r\n    }\r\n    async function RemoveAllItems() {\r\n        setWishListItem([])\r\n        await StoreInStorage([])\r\n\r\n        return \"remove All\"\r\n    }\r\n\r\n\r\n     return {\r\n        StoreWishListItem,\r\n        IndexWishListItems,\r\n        CheckIsInWishList,\r\n        RemoveItemFromWishList,\r\n        RemoveAllItems\r\n     }\r\n}\r\n\r\n\r\nexport default WishList();","import React from 'react'\r\nimport store from '../stores/store'\r\nimport { OrdersActions } from '../stores'\r\nlet setOrderItems = item => store.dispatch(OrdersActions.setOrderItems(item))\r\n\r\nfunction Basket() {\r\n    async function addQty(itemID, itemsList, qty) {\r\n        let _itemsList = itemsList\r\n        _itemsList.forEach((trg, index) => {\r\n            if (trg.item.ID == itemID) {\r\n                let oldQty = trg.qty\r\n                let newQty = oldQty + qty\r\n                _itemsList[index].qty = newQty;\r\n            }\r\n        })\r\n\r\n        setOrderItems(_itemsList)\r\n    }\r\n\r\n\r\n    async function AddToBasket(_item, qty) {\r\n        let state = store.getState()\r\n        let orderItems = state.orders.orderItems\r\n\r\n        let hasCategory = false\r\n        orderItems.forEach((trg, index) => {\r\n            if (trg.category == _item.categories.title) {\r\n                hasCategory = true;\r\n                let items = trg.items\r\n                let hasItem = false;\r\n                items.forEach((item, index) => {\r\n                    if (item.item.ID == _item.ID) {\r\n                        hasItem = true;\r\n                        ChangeQty(_item.ID, \"+\")\r\n                    }\r\n                })\r\n                if (!hasItem) {\r\n                    orderItems[index].items.push({ item: _item, qty: qty })\r\n                }\r\n            }\r\n        })\r\n\r\n        if (!hasCategory) {\r\n            let items = []\r\n            items.push({ item: _item, qty: qty })\r\n            orderItems.push({ category: _item.categories.title, items: items })\r\n        }\r\n\r\n        setOrderItems(orderItems)\r\n        return\r\n    }\r\n\r\n    async function ChangeQty(itemID, type) {\r\n        let state = store.getState()\r\n        let orderItems = state.orders.orderItems\r\n\r\n        orderItems.forEach((trg) => {\r\n            trg.items.forEach((item, index) => {\r\n                if (item.item.ID == itemID) {\r\n                    if (type == \"+\") {\r\n                        if (item.qty < item.item.storagesItems.qty) {\r\n                            trg.items[index].qty = item.qty + 1\r\n                        }\r\n                    } else {\r\n                        if (item.qty !== 1) {\r\n                            trg.items[index].qty = item.qty - 1\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setOrderItems(orderItems)\r\n        return\r\n    }\r\n\r\n\r\n    async function CheckItemInBasket(itemID) {\r\n        let states = store.getState()\r\n        let orderItems = states.orders.orderItems\r\n        let has = false\r\n        let _item = {}\r\n        orderItems.forEach((trg, index) => {\r\n            let items = trg.items\r\n            items.forEach((item, index) => {\r\n                if (item.item.ID == itemID) {\r\n                    has = true\r\n                    _item = item;\r\n                }\r\n            })\r\n        })\r\n        if (has) {\r\n            return _item\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    async function RemoveItemFromBasket(itemID) {\r\n        let states = store.getState()\r\n        let orderItems = states.orders.orderItems\r\n\r\n        orderItems.forEach((trg,inx) => {\r\n            trg.items.forEach((item,index) => {\r\n                if(item.item.ID == itemID) {\r\n                    trg.items.splice(index,1)\r\n                }\r\n                if(trg.items.length == 0) {\r\n                    orderItems.splice(inx,1)\r\n                }\r\n            })\r\n        })\r\n\r\n        setOrderItems(orderItems)\r\n        return \"done\"\r\n    }\r\n\r\n    // async function RemoveItemFromBasket(itemID) {\r\n    //     let states = store.getState()\r\n    //     let orderItems = states.orders.orderItems\r\n    //     orderItems.forEach((item, index) => {\r\n    //         if (itemID == item.item.ID) {\r\n    //             orderItems.splice(index, 1)\r\n    //         }\r\n    //     })\r\n\r\n    //     setOrderItems(orderItems)\r\n\r\n    //     return \"Removed\"\r\n    // }\r\n\r\n    return {\r\n        AddToBasket,\r\n        ChangeQty,\r\n        RemoveItemFromBasket,\r\n        CheckItemInBasket\r\n    }\r\n}\r\n\r\nexport default Basket()","import store from '../stores/store'\n\n\nlet TranslationsMethods = {\n    ReturnValue: (col, translations, standerValue) => {\n        let states = store.getState()\n        let lang = states.settings.locale.lang\n        let value = standerValue\n        if (lang !== 'ar') {\n            if (translations) {\n                translations.forEach((trg) => {\n                    if (trg.column_name == col) {\n                        value = trg.value\n                    }\n                })\n            }\n\n        }\n        return value;\n    },\n    ReturnIconArrowNav:() => {\n        let states = store.getState()\n        let lang = states.settings.locale.lang\n        let icon = \"arrow-forward\"\n        if(lang == \"ar\") {\n            icon = \"arrow-forward\"\n        }else {\n            icon = \"arrow-back\"\n        }\n        return icon\n    },\n    ReturnIconArrowSettings:() => {\n        let states = store.getState()\n        let lang = states.settings.locale.lang\n        let icon = \"arrow-ios-back-outline\"\n        if(lang == \"ar\") {\n            icon = \"arrow-ios-back-outline\"\n        }else {\n            icon = \"arrow-ios-forward-outline\"\n        }\n        return icon\n    },\n    ReturnFont:(fontType = \"Normal\") => {\n        let states = store.getState();\n        let lang = states.settings.locale.lang\n        let font = \"\"\n        if(fontType == \"Bold\") {\n            font = lang == \"ar\"?\"CairoBold\":\"openSansBold\"\n        }else {\n            font = lang == \"ar\"?\"Cairo\":\"OpenSans\"\n        }\n        return font\n    },\n    ReturnBottomTitle:(title) => {\n        let t = \"\"\n        let states = store.getState();\n        let lang = states.settings.locale.lang\n        if(title == \"HomeNavigation\") {\n            t = lang == \"ar\"?\"الرئيسية\":\"Main\"\n        }\n        if(title == \"MyOrders\") {\n            t = lang == \"ar\"?\"طلباتي\":\"My Orders\"\n        }\n        if(title == \"Wishlist\") {\n            t = lang == \"ar\"?\"المفضلة\":\"Wishlist\"\n        }\n        if(title == \"Settings\") {\n            t = lang == \"ar\"?\"الأعدادات\":\"Settings\"\n        }\n\n        return t;\n    }\n}\n\nexport default TranslationsMethods;","import React from 'react'\n\nclass BasketClass {\n    static ref = null\n    static setRef = (ref = {}) => {\n        this.ref = ref;\n    }\n\n    static getRef = () => {\n        console.log(this.ref)\n    }\n\n    static openBottom = () => {\n        this.ref.snapTo(1)\n    }\n\n    static closeBottom = () => {\n        this.ref.snapTo(0)\n    }\n\n}\n\nexport default BasketClass;","import React from 'react';\r\n\r\n// Views\r\nimport { View,TouchableOpacity } from 'react-native';\r\nimport { Text, Layout, useTheme } from '@ui-kitten/components'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\n// Services\r\nimport { TranslationsMethods } from '../../services'\r\n\r\n// ----- TextBanner ------ ///\r\nexport default ({ text, children,onPress }) => {\r\n    let theme = useTheme()\r\n    let cs = {\r\n        panelHeight: 40,\r\n        fontSize: 18\r\n    }\r\n\r\n    return (\r\n        <TouchableOpacity onPress={onPress} style={{ paddingVertical: 5, paddingHorizontal: 15 }}>\r\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                <LinearGradient colors={[theme['color-success-500'],theme['color-primary-500']]} style={{ height: '100%', width: 5, borderRadius:1 }}></LinearGradient>\r\n                <View style={{ paddingHorizontal: 5 }}>\r\n                    <Text style={{ color: 'black', fontSize: cs.fontSize, paddingHorizontal: 5, fontFamily: TranslationsMethods.ReturnFont(\"Bold\"), color: theme['text-hint-color'] }}>{text}</Text>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Text, useTheme } from '@ui-kitten/components'\n\nexport default ({ size = \"default\", title = \"\", value, valueStyle = {}, valueSubTitle = \"\",valueSubTitleStyle = {} }) => {\n    // Global Props\n    let theme = useTheme()\n\n    let valueSize = () => {\n        switch (size) {\n            case \"x-large\":\n                return 24\n            case \"large\":\n                return 18\n            case \"default\":\n                return 16\n            case \"small\":\n                return 12\n            default:\n                return 16\n        }\n    }\n    let titleSize = () => {\n        switch (size) {\n            case \"x-large\":\n                return 10\n            case \"large\":\n                return 10\n            case \"default\":\n                return 10\n            case \"small\":\n                return 8\n            default:\n                return 8\n        }\n    }\n\n    let styles = StyleSheet.create({\n        value: {\n            fontSize: valueSize(), textAlign: 'center', fontFamily: 'openSansBold', color: theme['text-hint-color']\n        },\n        title: {\n            fontSize: titleSize(), textAlign: 'center', fontFamily: 'openSansBold', color: theme['text-hint-color']\n        },\n        moreValueStyle: valueStyle,\n        valueSubTitleStyle: { fontSize: 8, fontFamily: 'openSansBold', color: theme['text-hint-color'] },\n        moreSubTitleValue:valueSubTitleStyle\n    })\n\n    let [valueWidth, setValueWidth] = React.useState(0)\n\n    return (\n        <View>\n            <View style={{ position: 'relative', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }} >\n                <View >\n                    <Text onLayout={(event) => { setValueWidth(event.nativeEvent.layout.width); }} style={{ ...styles.value, ...styles.moreValueStyle }} >{value}</Text>\n                    {valueSubTitle !== \"\" &&\n                        <View style={{ position: 'absolute', left: valueWidth, bottom: 0 }}>\n                            <Text style={{...styles.valueSubTitleStyle,...styles.moreSubTitleValue}}>{valueSubTitle}</Text>\n                        </View>\n                    }\n                </View>\n            </View>\n            {title !== \"\" &&\n                <Text style={{ ...styles.title }}>{title}</Text>\n            }\n        </View>\n    )\n}","import React from \"react\";\nimport { View, Image, Dimensions, Pressable, TouchableOpacity, Animated } from \"react-native\";\nimport { Text, Button, Icon, Layout, useTheme, ButtonGroup } from \"@ui-kitten/components\";\nimport { colors, env } from \"../../constants\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { WishList, Basket, TranslationsMethods } from '../../services'\nimport Toast from 'react-native-toast-message'\nimport { translate } from '../../translations'\nimport { useFocusEffect } from '@react-navigation/native';\nimport {Ionicons} from '@expo/vector-icons'\nimport DetailCard from './DetailCard'\nimport {connect} from 'react-redux'\n\n\n\nlet CardSpecial = (props) => {\n  // Global Props //\n  let navigation = useNavigation();\n  let theme = useTheme();\n  let { height, width } = Dimensions.get(\"window\");\n  // Item Props\n  let { data,wishListItems } = props;\n  let [inWishList, setInWishList] = React.useState(false)\n  let [added, setAdded] = React.useState(false)\n  let [qty, setQty] = React.useState(1)\n  let cs = {\n    fullWidth: width / 5,\n    borderRadius: 10,\n  };\n  // Animation Props\n  let animatedAddButton = React.useRef(new Animated.Value(1)).current\n\n  // Check its in the wish List\n  let installWishListChecker = () => {\n    setInWishList(WishList.CheckIsInWishList(data.ID))\n  }\n\n  // Check is item in basket\n  let installBasketChecker = async () => {\n    let item = await Basket.CheckItemInBasket(data.ID)\n    if (item) {\n      setAdded(true)\n      setQty(item.qty)\n    }\n  }\n\n  // Add Item To Basket\n  let AddToBasket = () => {\n    Toast.show({\n      text1: translate(\"success\"),\n      text2: translate(\"item.added_success\"),\n      type: 'success',\n      visibilityTime: 500,\n      position: 'bottom'\n    })\n    Basket.AddToBasket(data, 1)\n  }\n  // Add Locale Function\n  let TryAnimated = () => {\n    AddToBasket()\n    Animated.timing(animatedAddButton, {\n      toValue: 0, duration: 300, useNativeDriver: true\n    }).start()\n    setTimeout(() => {\n      setAdded(true)\n      Animated.timing(animatedAddButton, {\n        toValue: 1, duration: 300, useNativeDriver: true\n      }).start()\n    }, 300);\n  }\n\n\n  useFocusEffect(\n    React.useCallback(() => {\n      installWishListChecker();\n      installBasketChecker();\n    }, [])\n  );\n\n  // Views Functions \n  let ReturnPrice = () => {\n    let _price = data.price\n    return _price.toFixed(2)\n  }\n\n  let ItemBanner = () => {\n    if (data.discount !== 0) {\n      return (\n        <View style={{ position: 'absolute', left: 0, top: 10 }}>\n          <View style={{ paddingHorizontal: 7, paddingVertical: 3, backgroundColor: theme['color-danger-500'], borderTopRightRadius: 5, borderBottomRightRadius: 5 }}>\n            <Text style={{ color: 'white', fontFamily: TranslationsMethods.ReturnFont(\"Bold\"), textAlign: 'center', fontSize: 10 }}>{translate(\"discount\")} %</Text>\n          </View>\n        </View>\n      )\n    }\n    if (data.new == true) {\n      return (\n        <View style={{ position: 'absolute', left: 0, top: 10 }}>\n          <View style={{ paddingHorizontal: 7, paddingVertical: 3, backgroundColor: theme['color-success-700'], borderTopRightRadius: 5, borderBottomRightRadius: 5 }}>\n            <Text style={{ color: 'white', fontFamily: TranslationsMethods.ReturnFont(\"Bold\"), textAlign: 'center', fontSize: 10 }}>{translate(\"new\")} +</Text>\n          </View>\n        </View>\n      )\n    }\n    return null;\n  }\n\n  // Add Locale Function\n  let BackAnimation = () => {\n    Basket.RemoveItemFromBasket(data.ID)\n    Animated.timing(animatedAddButton, {\n      toValue: 0, duration: 300, useNativeDriver: true\n    }).start()\n    setTimeout(() => {\n      setAdded(false)\n      Animated.timing(animatedAddButton, {\n        toValue: 1, duration: 300, useNativeDriver: true\n      }).start()\n    }, 300);\n  }\n\n  let ChangeQtyLocal = (type) => {\n    if (type == \"+\") {\n      if (data.storagesItems.qty > qty) {\n        setQty(qty + 1)\n        Basket.ChangeQty(data.ID, \"+\")\n      }\n    } else {\n      if (qty !== 1) {\n        setQty(qty - 1)\n        Basket.ChangeQty(data.ID, \"-\")\n      } else {\n        BackAnimation()\n      }\n    }\n  }\n\n\n\n\n  let ActionButtons = () => {\n    return (\n      <Animated.View style={{ paddingTop: '4%', transform: [{ scaleX: animatedAddButton }] }}>\n        {added &&\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Button onPress={() => { ChangeQtyLocal(\"+\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopLeftRadius: 5, borderBottomLeftRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-success-700'], fontFamily: 'CairoBold' }}>+</Text>}</Button>\n            </View>\n            <View style={{ flex: 2 }}>\n              <Button size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 16, color: theme['color-info-400'], fontFamily: 'CairoBold' }}>{qty}</Text>}</Button>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Button onPress={() => { ChangeQtyLocal(\"-\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopRightRadius: 5, borderBottomRightRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 20, color: theme['color-danger-700'], fontFamily: 'CairoBold' }}>-</Text>}</Button>\n            </View>\n          </View>\n        }\n        {!added &&\n          <Button\n            status=\"info\"\n            size=\"tiny\"\n            // onPress={AddToBasket}\n            onPress={TryAnimated}\n            disabled={data.storagesItems.qty == 0 ?true:false}\n            style={{ borderRadius: 5, height: 30, paddingVertical: 0 }}\n          >\n            {evaProps => <Text {...evaProps} style={{ fontSize: 12, color: 'white', fontFamily: 'CairoBold' }}>{data.storagesItems.qty == 0 ?translate(\"item.empty_storage\"):translate(\"item.add_to_basket\")}</Text>}\n          </Button>\n        }\n        \n\n      </Animated.View>\n    )\n  }\n\n\n  return (\n    <View\n      style={{\n        padding: 5,\n        borderRadius: 5,\n        backgroundColor: \"white\",\n        marginHorizontal: 2,\n        borderWidth: 1,\n        borderColor: colors.moreWhite\n      }}\n    >\n      <View style={{ flexDirection: \"row\" }}>\n        <View level=\"2\" style={{ flex: 1, padding: 2, borderRadius: 5 }}>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate(\"Item\", { itemID: data.ID });\n            }}\n          >\n            <Image\n              source={{ uri: env.server + env.itemImageSource + data.image }}\n              style={{ width: 200, height: 200, borderRadius: 5 }}\n              resizeMode=\"cover\"\n            />\n          </TouchableOpacity>\n        </View>\n        <View style={{width:100}}></View>\n        <View\n          style={{\n            flex: 2,\n            paddingLeft: 2\n          }}\n        >\n          <View style={{ flex: 1, flexDirection: 'column', justifyContent: 'space-between' }}>\n            <View>\n              <View style={{ justifyContent: 'space-between', flexDirection: 'row', alignItems: 'flex-start' }}>\n                <View style={{ flex: 1, }}>\n                  {/* <Icon\n                    name={\"share-outline\"}\n                    fill={theme['text-hint-color']}\n                    style={{ width: 22, height: 22 }}\n                  /> */}\n                </View>\n                <TouchableOpacity onPress={() => {\n                  navigation.navigate(\"Item\", { itemID: data.ID });\n                }} style={{ flex: 2, paddingHorizontal: 5 }}>\n                  <Text style={{\n                    color: theme[\"text-basic-color\"],\n                    fontFamily: TranslationsMethods.ReturnFont(\"Bold\"),\n                    textAlign: \"center\",\n                    overflow: \"hidden\",\n                    fontSize: 10\n                  }}>{TranslationsMethods.ReturnValue(\"title\", data.translations, data.title)}</Text>\n                </TouchableOpacity>\n                <Pressable onPress={async () => {\n                  if (!inWishList) {\n                    setInWishList(true)\n                    await WishList.StoreWishListItem(data.ID)\n                  } else {\n                    setInWishList(false)\n                    await WishList.RemoveItemFromWishList(data.ID)\n                  }\n                }} style={{ flex: 1, alignItems: 'flex-end' }}>\n                  <Ionicons\n                    name={wishListItems.includes(data.ID) ? \"heart\" : \"heart-outline\"}\n                    color={wishListItems.includes(data.ID) ? theme['text-danger-color'] : theme['text-hint-color']}\n                    style={{ fontSize:22}}\n                  />\n                </Pressable>\n              </View>\n              <View>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: data.ID }); }} style={{ paddingHorizontal: 10, paddingTop: 10, flexDirection: 'row', justifyContent: 'space-between' }}>\n                  <DetailCard size=\"small\" value={data.original_price.toFixed(2)} title={translate(\"item.original_price\")} valueSubTitle={translate(\"jod\")} valueStyle={{ textDecorationStyle: 'solid', textDecorationLine: 'line-through', textDecorationColor: theme['text-primary-color'] }} />\n                  <DetailCard size=\"small\" value={data.storagesItems.qty} title={translate(\"item.left\")} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n          <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: data.ID }); }} style={{ width: '100%', justifyContent: 'center', flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}></View>\n            <View style={{ flex: 2 }}>\n              <DetailCard value={ReturnPrice()} valueStyle={{ color: 'black' }} valueSubTitle={translate(\"jod\")}></DetailCard>\n            </View>\n            <View style={{ flex: 1 }}></View>\n          </TouchableOpacity>\n          <ActionButtons />\n        </View>\n      </View>\n      {ItemBanner()}\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    wishListItems: state.items.wishListItems\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardSpecial);","import React from \"react\";\n\n// Views\nimport { View, Image, TouchableOpacity, StyleSheet, Animated } from \"react-native\";\nimport { Text, Icon, Layout, useTheme, Button } from \"@ui-kitten/components\";\nimport Toast from \"react-native-toast-message\";\nimport {Ionicons} from '@expo/vector-icons'\n\n// Services\nimport { colors, env } from \"../../constants\";\nimport { Basket, WishList, TranslationsMethods } from \"../../services\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { translate } from '../../translations'\nimport DetailCard from './DetailCard'\nimport {connect} from 'react-redux'\n\nlet CardNormal = ({ data,wishListItems }) => {\n    // Global Props\n    let navigation = useNavigation();\n    let theme = useTheme();\n    let [inWishList, setInWishList] = React.useState(false);\n\n    let animatedAddButton = React.useRef(new Animated.Value(1)).current\n\n    // Check its in the wish List\n    let installWishListChecker = () => {\n        setInWishList(WishList.CheckIsInWishList(data.ID))\n    }\n\n    let [added, setAdded] = React.useState(false)\n    let [qty, setQty] = React.useState(1)\n\n    // Check is item in basket\n    let installBasketChecker = async () => {\n        let item = await Basket.CheckItemInBasket(data.ID)\n        if (item) {\n            setAdded(true)\n            setQty(item.qty)\n        }\n    }\n    // Add Item To Basket\n    let AddToBasket = () => {\n        Toast.show({\n            text1: translate(\"success\"),\n            text2: translate(\"item.added_success\"),\n            type: 'success',\n            visibilityTime: 500,\n            position: 'bottom'\n        })\n        Basket.AddToBasket(data, 1)\n    }\n    // Add Locale Function\n    let TryAnimated = () => {\n        AddToBasket()\n        Animated.timing(animatedAddButton, {\n            toValue: 0, duration: 300, useNativeDriver: true\n        }).start()\n        setTimeout(() => {\n            setAdded(true)\n            Animated.timing(animatedAddButton, {\n                toValue: 1, duration: 300, useNativeDriver: true\n            }).start()\n        }, 300);\n    }\n\n    // Add Locale Function\n    let BackAnimation = () => {\n        Basket.RemoveItemFromBasket(data.ID)\n        Animated.timing(animatedAddButton, {\n            toValue: 0, duration: 300, useNativeDriver: true\n        }).start()\n        setTimeout(() => {\n            setAdded(false)\n            Animated.timing(animatedAddButton, {\n                toValue: 1, duration: 300, useNativeDriver: true\n            }).start()\n        }, 300);\n    }\n\n    let ReturnPrice = () => {\n        let _price = data.price\n        return _price.toFixed(2)\n    }\n\n\n\n    useFocusEffect(\n        React.useCallback(() => {\n            installWishListChecker();\n            installBasketChecker();\n        }, [])\n    );\n\n    let styles = StyleSheet.create({\n        box: {\n            width: \"50%\",\n            backgroundColor: \"white\",\n            borderRadius: 5,\n            borderWidth: 1,\n            borderColor: colors.moreWhite\n        },\n        imageContainer: {\n            borderRadius: 5,\n            padding: 0,\n        },\n        imageBox: {\n            width: \"100%\",\n            height: 125,\n            borderRadius: 5,\n        },\n        title: {\n            color: theme['text-basic-color'],\n            fontSize: 10,\n            textAlign: \"center\",\n            marginTop: 3,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\")\n        },\n        qtyBox: {\n            marginTop: 5,\n            paddingVertical: 1,\n            paddingHorizontal: 5,\n            borderRadius: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"50%\",\n        },\n        qtyText: {\n            color: theme[\"text-hint-color\"],\n            textAlign: \"center\",\n            fontSize: 10,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\"),\n        },\n        actionsPanel: {\n            marginTop: 5,\n            paddingHorizontal: 5\n        },\n        priceText: {\n            fontSize: 14,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\"),\n        },\n        addButton: {\n            width: 30,\n            height: 30,\n            borderRadius: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderWidth: 0.5,\n            borderColor: \"black\",\n        },\n        plusIcon: {\n            width: 15,\n            height: 15,\n        },\n        heartIconBox: {\n            position: \"absolute\",\n            right: 0,\n            top: 0,\n            padding: 2,\n        },\n        heartIcon: {\n            fontSize:22\n        },\n    });\n    let ChangeQtyLocal = (type) => {\n        if (type == \"+\") {\n            if (data.storagesItems.qty > qty) {\n                setQty(qty + 1)\n                Basket.ChangeQty(data.ID, \"+\")\n            }\n        } else {\n            if (qty !== 1) {\n                setQty(qty - 1)\n                Basket.ChangeQty(data.ID, \"-\")\n            } else {\n                BackAnimation()\n            }\n        }\n    }\n\n    let ActionButtons = () => {\n        return (\n            <Animated.View style={{ paddingTop: '4%', transform: [{ scaleX: animatedAddButton }] }}>\n                {added &&\n                    <View style={{ flexDirection: 'row' }}>\n                        <View style={{ flex: 1 }}>\n                            <Button onPress={() => { ChangeQtyLocal(\"+\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopLeftRadius: 5, borderBottomLeftRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-success-700'], fontFamily: 'CairoBold' }}>+</Text>}</Button>\n                        </View>\n                        <View style={{ flex: 2 }}>\n                            <Button size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-info-400'], fontFamily: 'CairoBold' }}>{qty}</Text>}</Button>\n                        </View>\n                        <View style={{ flex: 1 }}>\n                            <Button onPress={() => { ChangeQtyLocal(\"-\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopRightRadius: 5, borderBottomRightRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 20, color: theme['color-danger-700'], fontFamily: 'CairoBold' }}>-</Text>}</Button>\n                        </View>\n                    </View>\n                }\n                {!added &&\n                    <Button\n                        status=\"info\"\n                        size=\"tiny\"\n                        disabled={data.storagesItems.qty == 0 ?true:false}\n                        onPress={TryAnimated}\n                        style={{ borderRadius: 5, height: 30, paddingVertical: 0 }}\n                    >\n                        {evaProps => <Text {...evaProps} style={{ fontSize: 12, color: 'white', fontFamily: 'CairoBold' }}>{data.storagesItems.qty == 0 ?translate(\"item.empty_storage\"):translate(\"item.add_to_basket\")}</Text>}\n                    </Button>\n                }\n\n            </Animated.View>\n        )\n    }\n    return (\n        <TouchableOpacity\n            onPress={() => {\n                navigation.navigate(\"Item\", { itemID: data.ID });\n            }}\n            style={styles.box}\n        >\n            <Layout level=\"1\" style={styles.imageContainer}>\n                <Image\n                    source={{ uri: env.server + env.itemImageSource + data.image }}\n                    style={styles.imageBox}\n                    resizeMode=\"contain\"\n                ></Image>\n                <TouchableOpacity\n                    onPress={async () => {\n                        if (!inWishList) {\n                            setInWishList(true);\n                            await WishList.StoreWishListItem(data.ID);\n                        } else {\n                            setInWishList(false);\n                            await WishList.RemoveItemFromWishList(data.ID);\n                        }\n                    }}\n                    style={styles.heartIconBox}\n                >\n                    <Ionicons\n                        name={wishListItems.includes(data.ID) ? \"heart\" : \"heart-outline\"}\n                        style={styles.heartIcon}\n                        color={wishListItems.includes(data.ID) ? theme['text-danger-color'] : theme['text-hint-color']}\n                    />\n                </TouchableOpacity>\n                <View style={{ position: 'absolute', left: 0, top: 0, padding: 2 }}>\n                    {/* <Icon\n                        name={\"share-outline\"}\n                        fill={theme['text-hint-color']}\n                        style={{ width: 18, height: 18 }}\n                    /> */}\n                </View>\n            </Layout>\n            <View style={{ padding: 5 }}>\n                <Text style={styles.title}>{TranslationsMethods.ReturnValue(\"title\", data.translations, data.title)}</Text>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: data.ID }); }} style={{ paddingHorizontal: 2, paddingTop: 15, flexDirection: 'row', justifyContent: 'space-between' }}>\n                    <DetailCard size=\"small\" value={data.original_price.toFixed(2)} title={translate(\"item.original_price\")} valueSubTitle={translate(\"jod\")} valueStyle={{textDecorationStyle: 'solid', textDecorationLine: 'line-through', textDecorationColor:theme['text-hint-color']}} />\n                    <DetailCard size=\"small\" value={data.storagesItems.qty} title={translate(\"item.left\")} />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: data.ID }); }} style={{ width: '100%', paddingTop: 10 }}>\n                    <View style={{ flex: 1 }}></View>\n                    <View style={{ flex: 2 }}>\n                        <DetailCard value={ReturnPrice()} valueStyle={{color:'black'}} valueSubTitle={translate(\"jod\")}></DetailCard>\n                    </View>\n                    <View style={{ flex: 1 }}></View>\n                </TouchableOpacity>\n                <View style={{ height: 5 }}></View>\n                <ActionButtons />\n            </View>\n        </TouchableOpacity>\n    );\n};\n\n\nconst mapStateToProps = (state) => {\n    return {\n      wishListItems: state.items.wishListItems\n    }\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n  \n    }\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(CardNormal);","import React from \"react\";\n\n//Views\nimport { View, Image, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { Text, Icon, Layout, useTheme, Button } from \"@ui-kitten/components\";\n\n// Services\nimport { colors, env } from \"../../constants\";\nimport { Basket, TranslationsMethods } from \"../../services\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { translate } from '../../translations'\n\nimport DetailCard from './DetailCard'\n\nexport default (props) => {\n    let navigation = useNavigation();\n    let theme = useTheme();\n    let { item, qty } = props.item\n\n    let ReturnPrice = () => {\n        let _price = item.price\n        return _price.toFixed(2)\n    }\n\n    let styles = StyleSheet.create({\n        box: {\n            width: \"100%\",\n            backgroundColor: \"white\",\n            borderRadius: 5,\n            borderWidth: 1,\n            borderColor: colors.moreWhite\n        },\n        imageContainer: {\n            borderRadius: 5,\n            padding: 0,\n        },\n        imageBox: {\n            width: \"100%\",\n            height: 125,\n            borderRadius: 5,\n        },\n        title: {\n            color: theme['text-hint-color'],\n            fontSize: 10,\n            textAlign: \"center\",\n            marginTop: 3,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\")\n        },\n        qtyBox: {\n            marginTop: 5,\n            paddingVertical: 1,\n            paddingHorizontal: 5,\n            borderRadius: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"50%\",\n        },\n        qtyText: {\n            color: theme[\"text-hint-color\"],\n            textAlign: \"center\",\n            fontSize: 10,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\"),\n        },\n        actionsPanel: {\n            marginTop: 5,\n            paddingHorizontal: 5\n        },\n        priceText: {\n            fontSize: 14,\n            fontFamily: TranslationsMethods.ReturnFont(\"Bold\"),\n        },\n        addButton: {\n            width: 30,\n            height: 30,\n            borderRadius: 5,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderWidth: 0.5,\n            borderColor: \"black\",\n        },\n        plusIcon: {\n            width: 15,\n            height: 15,\n        },\n        heartIconBox: {\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            padding: 2,\n            borderRadius: 3\n        },\n        heartIcon: {\n            width: 20,\n            height: 20,\n        },\n    });\n    let ChangeQtyLocal = (type) => {\n        if (type == \"+\") {\n            if (item.storagesItems.qty > qty) {\n                Basket.ChangeQty(item.ID, \"+\")\n            }\n        } else {\n            if (qty !== 1) {\n                Basket.ChangeQty(item.ID, \"-\")\n            }\n        }\n    }\n\n    let ActionButtons = () => {\n        return (\n            <View style={{ paddingTop: '4%' }}>\n                <View style={{ flexDirection: 'row' }}>\n                    <View style={{ flex: 1 }}>\n                        <Button onPress={() => { ChangeQtyLocal(\"+\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopLeftRadius: 5, borderBottomLeftRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-success-700'], fontFamily: 'CairoBold' }}>+</Text>}</Button>\n                    </View>\n                    <View style={{ flex: 2 }}>\n                        <Button size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 16, color: theme['color-info-400'], fontFamily: 'CairoBold' }}>{qty}</Text>}</Button>\n                    </View>\n                    <View style={{ flex: 1 }}>\n                        <Button onPress={() => { ChangeQtyLocal(\"-\") }} size=\"tiny\" status=\"info\" style={{ height: 30, paddingVertical: 0, borderRadius: 0, borderTopRightRadius: 5, borderBottomRightRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 20, color: theme['color-danger-700'], fontFamily: 'CairoBold' }}>-</Text>}</Button>\n                    </View>\n                </View>\n            </View>\n        )\n    }\n    return (\n        <View\n            onPress={() => {\n                navigation.navigate(\"Item\", { itemID: item.ID });\n            }}\n            style={styles.box}\n        >\n            <Layout level=\"1\" style={styles.imageContainer}>\n                <TouchableOpacity\n                    style={styles.imageContainer}\n                    onPress={() => { navigation.navigate(\"Item\", { itemID: item.ID }); }}\n                >\n                    <Image\n                        source={{ uri: env.server + env.itemImageSource + item.image }}\n                        style={styles.imageBox}\n                        resizeMode=\"contain\"\n                    ></Image>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    onPress={() => { Basket.RemoveItemFromBasket(item.ID) }}\n                    style={styles.heartIconBox}\n                >\n                    <Icon\n                        name={\"close-outline\"}\n                        style={styles.heartIcon}\n                        fill={theme['text-hint-color']}\n                    />\n                </TouchableOpacity>\n            </Layout>\n            <View style={{ padding: 5 }}>\n                <Text style={styles.title}>{TranslationsMethods.ReturnValue(\"title\", item.translations, item.title)}</Text>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: item.ID }); }} style={{ paddingHorizontal: 2, paddingTop: 5, flexDirection: 'row', justifyContent: 'space-between' }}>\n                <DetailCard size=\"small\" value={item.original_price.toFixed(2)} title=\"السعر الاصلي\" valueSubTitle={translate(\"jod\")} valueStyle={{ textDecorationStyle: 'solid', textDecorationLine: 'line-through', textDecorationColor: theme['text-hint-color'] }} />\n                <DetailCard size=\"small\" value={item.storagesItems.qty} title=\"الكمية المتبقية\" />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"Item\", { itemID: item.ID }); }} style={{ width: '100%', paddingTop: 10 }}>\n                    <View style={{ flex: 1 }}></View>\n                    <View style={{ flex: 2 }}>\n                        <DetailCard value={ReturnPrice()} valueStyle={{color:'black'}} valueSubTitle={translate(\"jod\")}></DetailCard>\n                    </View>\n                    <View style={{ flex: 1 }}></View>\n                </TouchableOpacity>\n                <ActionButtons />\n            </View>\n        </View>\n    );\n};\n","import React from \"react\";\r\n\r\n// Views\r\nimport { TouchableOpacity } from 'react-native'\r\nimport { Icon, TopNavigation, TopNavigationAction, } from \"@ui-kitten/components\";\r\nimport Badge from '../Badge'\r\nimport { Ionicons } from '@expo/vector-icons'\r\n\r\n// Services\r\nimport { useNavigation } from '@react-navigation/native'\r\nimport { TranslationsMethods,BasketClass } from '../../services'\r\n\r\n// Stores\r\nimport { connect } from 'react-redux'\r\n\r\nlet HeaderNav = ({ text = \"\", hasCart = true, orders }) => {\r\n  let navigation = useNavigation()\r\n  let { orderItems } = orders\r\n  const BackIcon = (props) => <Icon {...props} name={TranslationsMethods.ReturnIconArrowNav()} />;\r\n\r\n  const BackAction = () => <TopNavigationAction onPress={() => { navigation.goBack() }} icon={BackIcon} />;\r\n\r\n\r\n  // Badge View For Checkout\r\n  let BadgeView = () => {\r\n    // Create Zero Number\r\n    let number = 0;\r\n    if (orderItems.length > 0) {\r\n      orderItems.forEach((trg) => {\r\n        number = number + trg.items.length\r\n      })\r\n      return (\r\n        <Badge count={number} />\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const CheckoutMenu = () => {\r\n\r\n    if (hasCart) {\r\n\r\n      return (\r\n        <TouchableOpacity onPress={() => { BasketClass.openBottom() }}>\r\n          <Ionicons name=\"ios-cart-outline\" style={{ fontSize: 30, color: 'black' }} />\r\n          {BadgeView()}\r\n        </TouchableOpacity>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <TopNavigation accessoryRight={CheckoutMenu} accessoryLeft={BackAction} title={text} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.orders\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderNav);","// React \nimport React from 'react'\n\n// Views\nimport { View, TouchableOpacity, Image, } from 'react-native';\nimport { Icon, Text, useTheme } from '@ui-kitten/components';\nimport { SimpleLineIcons, Ionicons } from '@expo/vector-icons'\nimport { Badge } from '../../../components'\n\n// Services\nimport { translate } from '../../../translations'\nimport { useNavigation } from '@react-navigation/native'\nimport {BasketClass} from '../../../services'\n\n// Stores\nimport { connect } from 'react-redux'\n\n// -- TopNavigation --//\nlet TopNavigation = (props) => {\n\n    // Global Props\n    let theme = useTheme();\n    let navigation = useNavigation()\n    let { openCategoriesList, openCheckoutList,stander,openBottom } = props\n    let { orderItems } = props.orders\n\n    // Constants\n    let constants = {\n        iconSize: 24, imageSize: 46, imageSource: require(\"../../../assets/logo/logo.png\")\n    }\n\n    // Badge View For Checkout\n    let BadgeView = () => {\n        // Create Zero Number\n        let number = 0;\n        if (orderItems.length > 0) {\n            orderItems.forEach((trg) => {\n                number = number + trg.items.length\n            })\n            return (\n                <Badge count={number} />\n\n            )\n        } else {\n            return null\n        }\n    }\n\n    let MenuButton = () => (\n        <TouchableOpacity onPress={() => { openCategoriesList() }}>\n            <SimpleLineIcons name=\"menu\" style={{ fontSize: constants.iconSize, color: 'black' }}></SimpleLineIcons>\n        </TouchableOpacity>\n    )\n\n    let BasketButton = () => (\n        <TouchableOpacity onPress={() => { BasketClass.openBottom() }}>\n            <Ionicons name=\"ios-cart-outline\" style={{ fontSize: 30, color: 'black' }} />\n            {BadgeView()}\n        </TouchableOpacity>\n    )\n\n    let SearchView = () => (\n        <TouchableOpacity onPress={() => { navigation.navigate(\"Search\") }} style={{ marginBottom: 10, width: '100%', borderRadius: 100, backgroundColor: theme['color-basic-200'], paddingHorizontal: 16, paddingVertical: 7, borderColor: theme['color-basic-300'], borderWidth: 0.5 }}>\n            <View style={{ width: '100%', flexDirection: 'row', alignItems: 'center' }}>\n                <Icon style={{ width: 24, height: 24 }} fill={theme['text-hint-color']} name=\"search-outline\" />\n                <View style={{ width: 10 }}></View>\n                <Text style={{ color: theme['text-hint-color'] }}>{translate(\"main.iam_search_in\")}</Text>\n            </View>\n        </TouchableOpacity>\n    )\n\n    let ImageView = () => (\n        <Image source={constants.imageSource} style={{ width: constants.imageSize, height: constants.imageSize }} resizeMode=\"contain\" />\n    )\n\n    let CenterView = () => {\n        if (stander) {\n            return (\n                <View style={{flex:1,justifyContent:'center',alignItems:'center'}}>\n                    <ImageView />\n                </View>\n            )\n        } else {\n            return (\n                <View style={{ backgroundColor: 'white', paddingHorizontal: '5%' }}>\n                    <SearchView />\n                </View>\n            )\n\n        }\n    }\n\n    return (\n        <View style={{ paddingVertical: 1, paddingHorizontal: 15, backgroundColor: 'white' }}>\n            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                <View style={{ flex: 1 }}>\n                    <MenuButton />\n                </View>\n                <View style={{ flex: 10 }}>\n                    {CenterView()}\n                </View>\n                <View style={{ flex: 1 }}>\n                    <BasketButton />\n                </View>\n            </View>\n            {stander &&\n                <View style={{ backgroundColor: 'white', paddingHorizontal: '5%' }}>\n                    <SearchView />\n                </View>\n            }\n        </View>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.items,\n        orders:state.orders\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavigation);","// React\nimport React from 'react'\n\n// Views\nimport { View, ScrollView, TouchableOpacity, Dimensions } from 'react-native';\nimport { Icon, Text, useTheme } from '@ui-kitten/components';\nimport { TextBanner,CardSpecial } from '../../../components'\n\n\n// Services\nimport { useNavigation } from '@react-navigation/native'\nimport { TranslationsMethods } from '../../../services'\nimport { translate } from '../../../translations'\n\n\n// ------ ItemsCollection ------ ///\nexport default (props) => {\n    //Global Props\n    let navigation = useNavigation()\n    let theme = useTheme()\n    let { height } = Dimensions.get(\"screen\")\n    let { items, title, scope,hasShowAll = true } = props\n\n    // ViewMoreButton\n    let ViewMore = ({ onPress }) => (\n        <TouchableOpacity onPress={onPress} style={{ height: height / 6, justifyContent: 'center', alignItems: 'center' }}>\n            <View style={{ paddingHorizontal: 15, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n                <Text style={{ fontFamily: 'CairoBold', fontSize: 14, color: theme['text-hint-color'] }}>{translate(\"showAll\")}</Text>\n                <View style={{ paddingTop: 3 }}>\n                    <Icon name={TranslationsMethods.ReturnIconArrowSettings()} style={{ height: 30, width: 30 }} fill={theme['text-hint-color']} />\n                </View>\n            </View>\n        </TouchableOpacity>\n    )\n\n\n    return (\n        <View style={{ marginTop: 5, marginBottom: 25 }}>\n            <TextBanner onPress={() => {\n                if(hasShowAll) {\n                    navigation.navigate(\"ItemsShow\", { type: scope }) \n                }\n                }} text={title} />\n            <View style={{ height: 15 }}></View>\n            <ScrollView showsHorizontalScrollIndicator={false} horizontal={true}>\n                {items.map((trg, index) => (\n                    <CardSpecial key={index} data={trg} />\n                ))}\n                {hasShowAll &&\n                    <ViewMore onPress={() => { navigation.navigate(\"ItemsShow\", { type: scope }) }} />\n                }\n            </ScrollView>\n        </View>\n    )\n\n}","import React from 'react';\n\n// View\nimport { View, Image, TouchableOpacity } from 'react-native';\n\n// Services\nimport { env } from '../../../constants'\nimport { useNavigation } from '@react-navigation/native'\n\n// Stores\nimport { connect } from 'react-redux';\n\n\n// -------- Ads Display -------- //\nlet AdsDisplay = (props) => {\n    let { ads } = props.items\n    let [ad, setAd] = React.useState({})\n    let navigation = useNavigation()\n    let install = () => {\n        let length = ads.length\n        if (length > 0) {\n            let randAd = 1 + Math.floor(Math.random() * length - 1)\n            setAd(ads[randAd])\n        }\n    }\n\n    React.useEffect(() => {\n        install();\n    }, [])\n    let cs = {\n        marginV: 10,\n        marginH: 10,\n        imageHeight: 180,\n        borderR: 10,\n        marginBottom: 0\n    }\n    if (ads.length > 0) {\n        return (\n            <TouchableOpacity onPress={() => { navigation.navigate(\"AdShow\", { adID: ad.ID }) }} style={{ marginVertical: cs.marginV, marginHorizontal: cs.marginH, marginBottom: 0, backgroundColor: 'white', padding: 1, borderRadius: cs.borderR }}>\n                <Image source={{ uri: env.server + 'public/ads/' + ad.image }} style={{ width: '100%', height: cs.imageHeight, borderRadius: 5 }} resizeMode=\"cover\" />\n                <View style={{ position: 'absolute', bottom: 0, left: 0, width: '100%', padding: 5 }}>\n                </View>\n            </TouchableOpacity>\n        )\n    }\n\n    return null;\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdsDisplay);","import React from \"react\";\n\n// Views\nimport { View, Image, Dimensions, ScrollView, TouchableOpacity } from \"react-native\";\nimport { Text, useTheme, Icon } from \"@ui-kitten/components\";\nimport { CardNormal } from \"../../../components\"\nimport { LinearGradient } from 'expo-linear-gradient';\n\n// Services\nimport { colors, env } from \"../../../constants\";\nimport { TranslationsMethods } from '../../../services'\nimport { useNavigation } from '@react-navigation/native'\n// Stores\nimport { connect } from \"react-redux\";\n\n\n// ------------ CategoriesItemsList -------------- //\nlet CategoriesItemsList = (props) => {\n  // Global Props\n  let { width } = Dimensions.get(\"window\");\n  let { data } = props;\n  let navigation = useNavigation()\n  let theme = useTheme()\n\n\n  // View More Button\n  let ViewMore = ({ onPress }) => (\n    <TouchableOpacity onPress={onPress} style={{ height: 250, justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ paddingHorizontal: 15, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n        <Text style={{ fontFamily: 'CairoBold', fontSize: 14, color: theme['text-hint-color'] }}>عرض الجميع</Text>\n        <View style={{ paddingTop: 3 }}>\n          <Icon name={TranslationsMethods.ReturnIconArrowSettings()} style={{ height: 30, width: 30 }} fill={theme['text-hint-color']} />\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n\n\n  return (\n    <View\n      style={{\n        marginTop: 10,\n        marginBottom: 50,\n        flexDirection: \"row\",\n        alignItems: \"flex-end\",\n        justifyContent: 'center',\n        paddingHorizontal: 1,\n      }}\n    >\n      <View\n        style={{\n          flex: 4,\n          backgroundColor: \"white\",\n          borderRadius: 5,\n          height: 282,\n          borderColor: colors.moreWhite,\n          borderWidth: 1,\n          overflow:'hidden'\n        }}\n      >\n      <View style={{ borderTopLeftRadius: 5, borderTopRightRadius: 5,overflow:'hidden' }}>\n      <LinearGradient colors={[theme['color-success-500'], theme['color-primary-500']]} >\n          <Text\n            style={{\n              color: \"black\",\n              fontSize: 14,\n              textAlign: \"center\",\n              borderRadius: 5\n            }}\n          >\n            {TranslationsMethods.ReturnValue(\"title\", data.category.translations, data.category.title)}\n          </Text>\n        </LinearGradient>\n      </View>\n        \n        <TouchableOpacity onPress={() => { navigation.navigate(\"Category\", { categoryID: data.category.ID }) }} style={{ width: '100%', height: 230, justifyContent: 'center' }}>\n          <Image\n            source={{\n              uri: env.server + env.categoryImageSource + data.category.image,\n            }}\n            style={{ width: '100%', height: 150 }}\n            resizeMode=\"contain\"\n          />\n        </TouchableOpacity>\n      </View>\n      <View style={{ width: 15 }}></View>\n      <View style={{ flex: 9, paddingTop: 10 }}>\n        <ScrollView\n          showsHorizontalScrollIndicator={false}\n          style={{ marginHorizontal: 5 }}\n          horizontal={true}\n        >\n          {data.items.map((trg, index) => (\n            <View\n              key={index}\n              style={{ width: width / 2.5, marginHorizontal: 2 }}\n            >\n              <CardNormal data={trg} />\n            </View>\n          ))}\n          <ViewMore onPress={() => { navigation.navigate(\"Category\", { categoryID: data.category.ID }) }} />\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoriesItemsList);\n","import React from \"react\";\n\n// Views \nimport { View, StyleSheet, Image, ScrollView,TouchableOpacity } from \"react-native\";\nimport { Text,useTheme } from \"@ui-kitten/components\";\n\n// services\nimport {env} from '../../../constants'\nimport {TranslationsMethods} from '../../../services'\nimport { useNavigation } from '@react-navigation/native';\nimport { translate } from \"../../../translations\";\n\n// Stores\nimport { connect } from \"react-redux\";\n\n// ----------- Categories List --------- //\nlet CategoriesList = (props) => {\n\n  // Global Props\n  let navigation = useNavigation()\n  let {closePanel} = props;\n  let theme = useTheme()\n  let {categories} = props.categories\n\n  // Categories Box ... \n  let CategoryBox = ({data}) => (\n    <TouchableOpacity onPress={() => {navigation.navigate(\"Category\",{categoryID:data.ID})}} style={{ justifyContent: \"center\", alignItems: \"center\",marginBottom:10,paddingBottom:5,borderBottomColor:theme['color-primary-500'],borderBottomWidth:0.5 }}>\n      <Image\n        source={{uri:env.server + env.categoryImageSource + data.image}}\n        style={{ width: 25, height: 25 }}\n        resizeMode=\"contain\"\n      />\n      <Text style={{ textAlign: \"center\",fontSize:8,fontFamily:\"CairoBold\" }}>{TranslationsMethods.ReturnValue(\"title\",data.translations,data.title)}</Text>\n    </TouchableOpacity>\n  );\n\n  // Render\n  return (\n      <View style={styles.container}>\n        <Text style={{ textAlign: \"left\" ,fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),fontSize:12,textAlign:'center'}}>{translate(\"main.categories\")}</Text>\n        <View style={{ height: 15 }}></View>\n        <ScrollView showsVerticalScrollIndicator={false}>\n          {categories.map((trg,index) => (\n            <CategoryBox key={index} data={trg} />\n          ))}\n        </ScrollView>\n      </View>\n  );\n};\n\nlet styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    height: \"100%\",\n    padding: 5,\n    zIndex:101,\n  }\n});\n\nconst mapStateToProps = (state) => {\n  return {\n    categories:state.categories\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList);\n","// Stander Library .\nimport React, { useState} from 'react'\n\n// Views Library\nimport { View, ScrollView, Animated,Dimensions,TouchableOpacity } from 'react-native'\nimport { Layout, Button } from '@ui-kitten/components'\nimport { TextBanner } from '../../components'\nimport { TopNavigation,ItemsCollection, AdsDisplay, CategoriesItemsList, CategoriesList } from './components'\n\n\n// Stores\nimport { connect } from 'react-redux'\n// Services\nimport { translate } from '../../translations'\n\n\n// ------ Home ------- //\nlet Home = (props) => {\n\n    // Global Props\n    let { categoriesWithItems, newItems, selectForYouItemsFirst, selectForYouItemsSecond } = props.items; // CategoriesWithItems\n    let [shows, setShows] = useState({\n        categoriesList: false,\n        checkoutList: false\n    }) // ShowAndDisplay \n\n    let {width} = Dimensions.get(\"screen\")\n\n    // Animation Props\n    let translateY = React.useRef(new Animated.Value(0)).current\n    let opacityFade = React.useRef(new Animated.Value(0)).current\n    let CategoriesListAnimation = React.useRef(new Animated.Value(width)).current\n    // Animations Methods \n    let onScroll = (e) => {\n        let y = e.nativeEvent.contentOffset.y\n        if (y <= 300) {\n            Animated.timing(translateY, {\n                toValue: y < 200 ? -1 * y : -100,\n                duration: 500,\n                useNativeDriver: true\n            }).start();\n        }\n\n        if (y <= 50) {\n            Animated.timing(opacityFade, {\n                toValue: y * 0.02,\n                duration: 700,\n                useNativeDriver: true\n            }).start();\n        }\n        if (y >= 50 && y <= 300) {\n            Animated.timing(opacityFade, {\n                toValue: 1,\n                duration: 700,\n                useNativeDriver: true\n            }).start();\n        }\n    } // -- onScroll\n\n    let toggleCategoriesList = () => {\n        Animated.timing(CategoriesListAnimation, {\n            toValue: 0,\n            duration: 200,\n            useNativeDriver: true\n        }).start();\n    }\n\n    let closeCategoriesList = () => {\n        Animated.timing(CategoriesListAnimation, {\n            toValue: width,\n            duration: 500,\n            useNativeDriver: true\n        }).start();\n    }\n\n    return (\n        <Layout level=\"1\" style={{ flex: 1 }}>\n            {/* ScrollView -> Contain all views without [CategoriesItemsList,NotificationHandler,CheckoutList] */}\n            <ScrollView showsVerticalScrollIndicator={false} scrollEventThrottle={16} onScroll={onScroll}>\n                {/* This View Height 100 Is For Components Fixed View */}\n                <View style={{ height: 105 }}></View>\n                <AdsDisplay />\n                {/* New Items */}\n                <View style={{height:25}}></View>\n                <ItemsCollection scope=\"newItems\" title={translate(\"main.new_items\")} items={newItems} />\n                <ItemsCollection scope=\"selectForYou\" title={translate(\"main.last_items\")} items={selectForYouItemsSecond} />\n                <ItemsCollection scope=\"selectForYou\" title={translate(\"main.select_for_you\")} items={selectForYouItemsFirst} />\n                <AdsDisplay />\n                <View style={{height:30}}></View>\n                <TextBanner text={translate(\"main.items_list\")} />\n                {categoriesWithItems.map((trg, index) => (\n                    <CategoriesItemsList key={index} data={trg} />\n                ))}\n                <View style={{ height: 150 }}></View>\n            </ScrollView>\n\n\n\n\n            {/* ----------- Animation Views ----------  */}\n            <Animated.View style={{\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                width: '100%',\n                opacity: opacityFade\n            }}>\n                <TopNavigation stander={false} openCategoriesList={() => { toggleCategoriesList() }} openCheckoutList={() => { setShows({ ...shows, checkoutList: true }) }} />\n            </Animated.View>\n            <Animated.View style={{\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                width: '100%',\n                transform: [{ translateY: translateY }]\n            }}>\n                <TopNavigation stander={true} openCategoriesList={() => { toggleCategoriesList() }} />\n            </Animated.View>\n            {/* ----------- Animation Views ----------  */}\n\n            <Animated.View style={{ position: 'absolute',width:width, left: 0, top: 0, height: '100%', transform: [{ translateX: CategoriesListAnimation }] }}>\n            <TouchableOpacity onPress={() => {closeCategoriesList()}} style={{position:'absolute',left:0,height:0,width:'100%',height:'100%'}}></TouchableOpacity>\n            <View style={{position:'absolute',left:0,top:52,height:'100%'}}>\n                <CategoriesList />\n            </View>\n            </Animated.View>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        items: state.items\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import { StyleSheet } from \"react-native\";\n\nlet styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    alignItems: \"center\",\n  },\n  imageCard: {\n    width: 150,\n    height: 150,\n    borderRadius: 15,\n  },\n  pt30: {\n    paddingTop: 30,\n  },\n});\n\nexport default styles;\n","import React from \"react\";\nimport { ImageBackground, View } from \"react-native\";\nimport { Spinner } from \"@ui-kitten/components\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Toast from 'react-native-toast-message'\n\n// Services\nimport { LocaleLoader, FontsLoader, apis, WishList } from \"../../services\";\nimport { StorageToken } from '../../constants'\nimport { translate } from \"../../translations\";\nimport styles from \"./styles\";\n\n// Stores\nimport { connect } from \"react-redux\";\nimport { UserActions, ItemsActions, CategoriesActions } from \"../../stores\";\n\nlet Loading = (props) => {\n    /**\n     *\n     * @checker {Checker is about check the things inside our app}\n     * @installIndex {install index from server}\n     */\n\n    // Call When Start the app\n    useFocusEffect(\n        React.useCallback(() => {\n            // Call Installer Method\n            installer()\n        }, [])\n    );\n    // on End The methods what ever is it from skip or register\n    // Navigate to the main Navigation\n    let End = () => {\n        props.navigation.navigate(\"MainNavigation\")\n    }\n\n    // Auth Check\n    // Check if user has userToken or not.\n    // And navigate to the main navigation or intro\n    let AuthCheck = async () => {\n        let userToken = await AsyncStorage.getItem(StorageToken.userToken)\n        if (userToken) {\n            let authSuccess = (res) => {\n                props.setUser(res.user)\n                props.setOrders(res.orders)\n                props.setAddresses(res.addresses)\n                End();\n            }\n            let authError = (err) => {\n                console.log(\"Auth Error:\", err);\n                End();\n            }\n\n            let token = \"Bearer \" + userToken;\n            apis.auth.auth(token, authSuccess, authError)\n        } else {\n            End();\n        }\n    }\n\n    // global Checker\n    let checker = async () => {\n        let hasFirstTime = await AsyncStorage.getItem(StorageToken.firstTime)\n        if (!hasFirstTime) {\n            // navigate to intro\n            props.navigation.navigate(\"IntroNavigation\")\n        } else {\n            // Auth Check\n            AuthCheck();\n        }\n    }\n\n\n    // Install Index\n    let installIndex = () => {\n        // On success Load\n        let onSuccess = async (res) => {\n            props.setSelectForYouItemsFirst(res.selectForYouItemsFirst)\n            props.setSelectForYouItemsSecond(res.selectForYouItemsSecond)\n            props.setNewItems(res.newItems)\n            props.setCategoriesWithItems(res.categoriesWithItems)\n            props.setCategories(res.categories)\n            props.setAds(res.ads)\n            let wishlist = await WishList.IndexWishListItems();\n            props.setWishListItems(wishlist)\n            checker();\n        }\n        // On error\n        let onError = (err) => {\n            console.log(\"Install Index Error :\", err)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'error',\n                autoHide: false\n            });\n        }\n        apis.main.index(onSuccess, onError)\n\n    }\n\n    let installer = async () => {\n        await LocaleLoader();\n        await FontsLoader();\n        // After Load Locale Loader And Fonts Loader \n        // Call Install Index\n        installIndex()\n    };\n\n    return (\n        <ImageBackground\n            style={styles.container}\n            source={require(\"../../assets/backgrounds/loading.png\")}\n        >\n            <View style={styles.pt30}>\n                <Spinner status=\"basic\" />\n            </View>\n        </ImageBackground>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUser: (item) => dispatch(UserActions.setUser(item)),\n        setSelectForYouItemsFirst: item => dispatch(ItemsActions.setSelectForYouItemsFirst(item)),\n        setSelectForYouItemsSecond: item => dispatch(ItemsActions.setSelectForYouItemsSecond(item)),\n        setNewItems: item => dispatch(ItemsActions.setNewItems(item)),\n        setCategoriesWithItems: item => dispatch(ItemsActions.setCategoriesWithItems(item)),\n        setCategories: item => dispatch(CategoriesActions.setCategories(item)),\n        setWishListItems: item => dispatch(ItemsActions.setWishListItems(item)),\n        setOrders: item => dispatch(UserActions.setOrders(item)),\n        setAds: item => dispatch(ItemsActions.setAds(item)),\n        setAddresses: item => dispatch(UserActions.setAddresses(item))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","import React from \"react\";\r\nimport { View, Image, Dimensions,ImageBackground } from \"react-native\";\r\nimport { Layout, Text, Button } from \"@ui-kitten/components\";\r\n\r\nexport default (props) => {\r\n  let { width, height } = Dimensions.get(\"window\");\r\n  return (\r\n    <ImageBackground\r\n    source={require('../../../assets/backgrounds/Background.jpg')}\r\n      level=\"3\"\r\n      style={{\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Image\r\n        source={require(\"../../../assets/logo/logo.png\")}\r\n        style={{ width: width / 4, height: width / 4 }}\r\n        resizeMode=\"cover\"\r\n      />\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          paddingHorizontal: \"10%\",\r\n          marginTop:30\r\n        }}\r\n      >\r\n        <Text style={{ fontSize: 22, fontFamily: \"CairoBold\" }}>\r\n          من الأن, نحن متجرك المفضل !\r\n        </Text>\r\n        <Text style={{ textAlign: \"center\",marginTop:15 }}>\r\n          يمكنك أن تحصل على أرخص الأسعار لدينا, بأجود الأنواع وبكل سهولة قم بالشراء.\r\n        </Text>\r\n      </View>\r\n      <View style={{ position: \"absolute\", left: 0, bottom: 0, width: \"100%\" }}>\r\n        <Button\r\n          onPress={() => {\r\n            props.navigation.navigate(\"IntroLogin\");\r\n          }}\r\n          style={{\r\n            backgroundColor: \"black\",\r\n            borderRadius: 0,\r\n            borderColor: \"black\",\r\n          }}\r\n        >\r\n          التالي\r\n        </Button>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Layout, Text, Button, Input, useTheme } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StorageToken } from \"../../../constants\";\r\nimport { UserActions } from \"../../../stores\";\r\nimport { apis } from \"../../../services\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nlet Login = (props) => {\r\n  let { width, height } = Dimensions.get(\"window\");\r\n  let { control, handleSubmit, errors } = useForm();\r\n  let { setUser } = props;\r\n  let theme = useTheme();\r\n  let onSkipAuth = async () => {\r\n    await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n    props.navigation.navigate(\"MainNavigation\");\r\n  };\r\n\r\n  let _Login = (data) => {\r\n    let loginSuccess = async (res) => {\r\n      // Set User And Token\r\n      setUser(res.user);\r\n      let token = res.token;\r\n      await AsyncStorage.setItem(StorageToken.userToken, token);\r\n      await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n      Toast.show({\r\n        text1: \"تم تسجيل الدخول بنجاح\",\r\n        text2: \"لقد قم بتسجيل الدخول\",\r\n        type: \"success\",\r\n        onHide: () => {\r\n          props.navigation.navigate(\"MainNavigation\");\r\n        },\r\n        visibilityTime: 2000,\r\n      });\r\n    };\r\n\r\n    let loginError = (err) => {\r\n      console.log(\"login error:\", err, \"\\n\", err.response.data);\r\n      let error = {\r\n        text1: \"يوجد خطا غير معروف\",\r\n        text2: \"الرجاء المحاولة مرة أخرى والتاكد من المعلومات\",\r\n      };\r\n      let message = err.response.data.message;\r\n      if (message == \"record not found\") {\r\n        error.text1 = \"لا يوجد مستخدم بهذا الأسم\";\r\n        error.text2 = \"الرجاء التاكد من رقم الهاتف او قم بانشاء مستخدم جديد\";\r\n      }\r\n      if (\r\n        message ==\r\n        \"crypto/bcrypt: hashedPassword is not the hash of the given password\"\r\n      ) {\r\n        error.text1 = \"يوجد خطا في المعلومات\";\r\n        error.text2 = \"الرجاء التأكد من المعلومات او قم بانشاء حساب جديد\";\r\n      }\r\n      Toast.show({\r\n        text1: error.text1,\r\n        text2: error.text2,\r\n        type: \"error\",\r\n        autoHide: true,\r\n      });\r\n    };\r\n\r\n    apis.auth.login(data, loginSuccess, loginError);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <ImageBackground\r\n        source={require(\"../../../assets/backgrounds/Background.jpg\")}\r\n        style={{ flex: 1, flexDirection: \"column\" }}\r\n      >\r\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/logo/logo.png\")}\r\n              style={{ width: width / 6, height: width / 6 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n            <View style={{ marginTop: \"5%\", paddingHorizontal: \"5%\",width:'100%' }}>\r\n              <Controller\r\n                control={control}\r\n                name=\"phone\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    keyboardType=\"phone-pad\"\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder=\"رقم الهاتف\"\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.phone ? \"danger\" : \"default\"}\r\n                    caption={errors.phone ? \"هذا الحقل مطلوب\" : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n              <View style={{height:10}}></View>\r\n              <Controller\r\n                control={control}\r\n                name=\"password\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder=\"رمز المرور\"\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.password ? \"danger\" : \"default\"}\r\n                    caption={errors.password ? \"هذا الحقل مطلوب\" : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: \"5%\", width: \"50%\" }}>\r\n              <Button\r\n                onPress={handleSubmit(_Login)}\r\n                status=\"primary\"\r\n                style={{ borderRadius: 50 }}\r\n              >\r\n                تسجيل الدخول\r\n              </Button>\r\n            </View>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"15%\",\r\n                width: \"100%\",\r\n                marginTop: \"5%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{ height: 0.5, backgroundColor: \"#f7f7f7\" }}\r\n                ></View>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    onSkipAuth();\r\n                  }}\r\n                  style={{\r\n                    height: width / 12,\r\n                    width: width / 12,\r\n                    borderRadius: width / 12 / 2,\r\n                    backgroundColor: theme[\"color-primary-500\"],\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderWidth: 0.5,\r\n                    borderColor: \"#f7f7f7\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{ textAlign: \"center\", fontFamily: \"CairoBold\" }}\r\n                  >\r\n                    تخطي\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            <View style={{ marginTop: 15, flexDirection: \"row\" }}>\r\n              <Text> لا تملك حساب ؟ </Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"IntroRegister\");\r\n                }}\r\n              >\r\n                <Text style={{ fontFamily: \"CairoBold\" }}> حساب جديد</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(UserActions.setUser(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Layout, Text, Button, Input, useTheme } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StorageToken } from \"../../../constants\";\r\nimport { UserActions } from \"../../../stores\";\r\nimport { apis } from \"../../../services\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nlet Register = (props) => {\r\n  let { control, handleSubmit, errors } = useForm();\r\n  let { width, height } = Dimensions.get(\"window\");\r\n  let { setUser } = props;\r\n  let theme = useTheme();\r\n  let [localUser, setLocalUser] = React.useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    role_id: 1000,\r\n  });\r\n\r\n  let onSkipAuth = async () => {\r\n    await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n    props.navigation.navigate(\"MainNavigation\");\r\n  };\r\n\r\n  let _Register = (data) => {\r\n    let registerSuccess = async (res) => {\r\n      // Set User And Token\r\n      setUser(res.user);\r\n      let token = res.token;\r\n      await AsyncStorage.setItem(StorageToken.userToken, token);\r\n      await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n      Toast.show({\r\n           text1:\"تم انشاء حساب جديد بنجاح\",\r\n           text2:'لقد قمت بانشاء حساب جديد لدينا',\r\n           type:'success',\r\n           onHide:() => {\r\n               props.navigation.navigate(\"MainNavigation\");\r\n           },\r\n           visibilityTime:2000\r\n      })\r\n    };\r\n\r\n    let registerError = (err) => {\r\n     //  console.log(\"Register error:\", err, \"\\n\", err.response.data);\r\n      let error = { text1: \"يوجد خطا غير معروف\", text2: \"الرجاء التأكد من المعلومات والمحاولة مرة أخرى\" };\r\n      let message = err.response.data.error;\r\n      if(message.includes(\"Error 1062:\")) {\r\n           error.text1 = \"يوجد مستخدم بهذا الرقم\"\r\n           error.text2 = \"الرجاء التاكد من رقم الهاتف او قم بتسجيل الدخول\"\r\n      }\r\n      Toast.show({\r\n        text1: error.text1,\r\n        text2: error.text2,\r\n        type: \"error\",\r\n        autoHide: true,\r\n      });\r\n    };\r\n\r\n    apis.auth.register(data, registerSuccess, registerError);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <ImageBackground\r\n        source={require(\"../../../assets/backgrounds/Background.jpg\")}\r\n        style={{ flex: 1, flexDirection: \"column\" }}\r\n      >\r\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/logo/logo.png\")}\r\n              style={{ width: width / 3, height: width / 3 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n            <View style={{ marginTop: \"5%\", paddingHorizontal: \"10%\" }}>\r\n            <Controller\r\n                control={control}\r\n                name=\"name\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder=\"الأسم\"\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.name ? \"danger\" : \"default\"}\r\n                    caption={errors.name ? \"هذا الحقل مطلوب\" : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            <Controller\r\n                control={control}\r\n                name=\"phone\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    keyboardType=\"phone-pad\"\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder=\"رقم الهاتف\"\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.phone ? \"danger\" : \"default\"}\r\n                    caption={errors.phone ? \"هذا الحقل مطلوب\" : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"password\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder=\"رمز المرور\"\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.password ? \"danger\" : \"default\"}\r\n                    caption={errors.password ? \"هذا الحقل مطلوب\" : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: \"5%\", width: \"50%\" }}>\r\n              <Button\r\n                onPress={handleSubmit(_Register)}\r\n                status=\"primary\"\r\n                style={{ borderRadius: 50 }}\r\n              >\r\n                حساب جديد\r\n              </Button>\r\n            </View>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"15%\",\r\n                width: \"100%\",\r\n                marginTop: \"5%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{ height: 0.5, backgroundColor: \"#f7f7f7\" }}\r\n                ></View>\r\n              </View>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  onSkipAuth();\r\n                }}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    height: width / 5,\r\n                    width: width / 5,\r\n                    borderRadius: width / 5 / 2,\r\n                    backgroundColor: theme[\"color-primary-500\"],\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    borderWidth: 0.5,\r\n                    borderColor: \"#f7f7f7\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{ textAlign: \"center\", fontFamily: \"CairoBold\" }}\r\n                  >\r\n                    تخطي\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={{ marginTop: 15, flexDirection: \"row\" }}>\r\n              <Text>هل تملك حساب ؟</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"IntroLogin\");\r\n                }}\r\n              >\r\n                <Text style={{ fontFamily: \"CairoBold\" }}> تسجيل الدخول</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </ImageBackground>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(UserActions.setUser(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from 'react';\n\n// Views \nimport { View, ScrollView } from 'react-native';\nimport { Layout } from '@ui-kitten/components'\nimport { CardNormal,HeaderNav } from \"../../components\";\n\n// Services\nimport { apis } from \"../../services\"\n\nexport default (props) => {\n    // Global Props\n    let { route, navigation } = props;\n    let { adID } = route.params;\n    let [items, setItems] = React.useState([])\n\n    let install = () => {\n        let success = (res) => {\n            setItems(res.adItems)\n        }\n\n        let error = err => {\n            console.log(\"Error Install Items\", err, \"\\n\", err.response.data)\n        }\n\n        apis.main.adIndexItems(adID, success, error)\n    }\n\n    React.useEffect(() => {\n        install()\n    }, [])\n    return (\n        <Layout style={{ flex: 1, }} level=\"1\">\n            <HeaderNav />\n            <ScrollView showsVerticalScrollIndicator={false} contentContainerStyle={{ width: '100%', marginTop: 15, }}>\n                <View style={{ flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'center', marginTop: 16 }}>\n                    {items.map((trg, index) => (\n                        <View style={{ width: '50%', padding: 1 }} key={index}>\n                            <CardNormal data={trg.item} />\n                        </View>\n                    ))}\n                </View>\n            </ScrollView>\n        </Layout>\n    )\n}","import React from \"react\";\n\n// Views\nimport { View, Image, ScrollView,TouchableOpacity } from \"react-native\";\nimport { Text } from \"@ui-kitten/components\";\n\n// services\nimport {env} from '../../../constants'\nimport {TranslationsMethods} from '../../../services'\nimport { translate } from \"../../../translations\";\n\n\n// SubCategoriesList\nexport default ({subCategories,ChangeSubCategories}) => {\n  let CategoryBox = ({data}) => (\n    <TouchableOpacity\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 5,\n        borderBottomColor: \"#f7f7f7\",\n        borderBottomWidth: 1,\n      }}\n      onPress={() => {\n        ChangeSubCategories(data.ID)\n      }}\n    >\n      <Image\n        source={{uri:env.server + env.subCategoriesImageSource + data.image}}\n        style={{ width: 25, height: 25 }}\n        resizeMode=\"contain\"\n      />\n      <Text style={{ textAlign: \"center\", fontSize: 8,fontFamily:TranslationsMethods.ReturnFont(\"Bold\") }}>{TranslationsMethods.ReturnValue(\"title\",data.translations,data.title)}</Text>\n    </TouchableOpacity>\n  );\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\" }}>\n      <Text style={{ textAlign: \"center\", marginHorizontal: 3 }}>{translate(\"category.categories\")}</Text>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {subCategories.map((trg,index) => (\n          <CategoryBox key={index} data={trg} />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n","import React from \"react\";\n\n// Views\nimport { View } from \"react-native\";\nimport {TextBanner,CardNormal} from '../../../components'\nimport {translate} from '../../../translations'\n\n// Stores \nimport { connect } from \"react-redux\";\n\n\nlet ItemsList = (props) => {\n  let { data } = props;\n  return (\n    <View style={{ marginTop: '8%' }}>\n      <TextBanner text={translate(\"category.items\")} />\n      <View\n        style={{\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          marginTop:16\n        }}\n      >\n        {data.map((trg, index) => (\n          <View style={{ width: \"50%\",padding:1,marginTop:15 }} key={index}>\n            <CardNormal data={trg} />\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemsList);\n","import React from 'react'\n\n// Views\nimport { View, ScrollView } from \"react-native\";\nimport { Layout, Spinner } from \"@ui-kitten/components\";\nimport { HeaderNav } from '../../components'\nimport { SubCategoriesList, ItemsList } from './components'\nimport { ItemsCollection } from '../Home/components'\n\n\n// Services \nimport { apis } from '../../services'\n\n\n// Stores\nimport { connect } from 'react-redux'\n\n// ----------- Category ---------- //\nlet Category = (props) => {\n\n    // Global Props\n    let { route } = props\n    let { categoryID } = route.params\n    let [page, setPage] = React.useState(1)\n    let [load, setLoad] = React.useState(true)\n    let [subCategoryID, setSubCategoryID] = React.useState(0)\n    let [getType, setGetType] = React.useState(\"all\")\n    let [justItems, setJustItems] = React.useState(false)\n    let [isLoadMore, setIsLoadMore] = React.useState(false)\n\n    let [data, setData] = React.useState({\n        subCategories: [],\n        category: {},\n        selectForYouItems: [],\n        items: []\n    })\n\n\n    // -------- Methods ------------ //\n    let install = () => {\n        let onSuccess = (res) => {\n            setData({\n                category: res.category,\n                subCategories: res.subCategories,\n                selectForYouItems: res.selectForYouItems,\n                items: res.items\n            });\n            //   setItems(res.items);\n            setLoad(false)\n        };\n        let onError = (err) => {\n            console.log(err);\n        };\n        apis.main.indexCategory(categoryID, page, onSuccess, onError);\n    };\n\n    let ChangeSubCategories = (ID) => {\n        setSubCategoryID(ID)\n        setGetType(\"subCategory\")\n        setLoad(true)\n        setPage(1);\n        setJustItems(true);\n        // Success\n        let onSuccess = (res) => {\n            setData({ ...data, items: res.items });\n            setPage(2)\n            setLoad(false)\n        };\n        let onError = (err) => {\n            console.log(\"Change sub Categories Error: \", err);\n        };\n        apis.main.indexSubCategoriesItems(ID, 1, onSuccess, onError);\n    };\n\n    let loadMoreData = () => {\n        if (getType == \"all\") {\n            let onSuccess = (res) => {\n                setData({ ...data, items: [...data.items, ...res.items] });\n                setPage(page + 1)\n                setTimeout(() => {\n                    setIsLoadMore(false)\n                }, 2000);\n            };\n\n            let onError = (err) => {\n                console.log(err);\n            };\n\n            if (isLoadMore == false) {\n                setIsLoadMore(true)\n                apis.main.loadMoreCategory(categoryID, page + 1, onSuccess, onError);\n            }\n        }\n        if (getType == \"subCategory\") {\n            let onSuccess = (res) => {\n                setData({ ...data, items: [...data.items, ...res.items] });\n                setPage(page + 1)\n                setTimeout(() => {\n                    setIsLoadMore(false)\n\n                }, 2000);\n            };\n\n            let onError = (err) => {\n                console.log(\"Load More sub Categories Error: \", err);\n            };\n\n            if (isLoadMore == false) {\n                setIsLoadMore(true)\n                apis.main.indexSubCategoriesItems(subCategoryID, page + 1, onSuccess, onError);\n            }\n        }\n    }\n\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n        const paddingToBottom = 20;\n        return layoutMeasurement.height + contentOffset.y >=\n            contentSize.height - paddingToBottom;\n    };\n\n\n    React.useEffect(() => {\n        install()\n    }, [])\n\n    // --- render () --- //\n    return (\n        <Layout style={{ flex: 1, }}>\n            <HeaderNav />\n            <View style={{ flex: 1, flexDirection: 'row' }}>\n                <View style={{ flex: 1 }}>\n                    <SubCategoriesList ChangeSubCategories={ChangeSubCategories} subCategories={data.subCategories} />\n                </View>\n                <View style={{ flex: 6 }}>\n                    {!load &&\n                        <ScrollView onScroll={({ nativeEvent }) => {\n                            if (isCloseToBottom(nativeEvent)) {\n                                loadMoreData()\n                            }\n                        }}\n                            scrollEventThrottle={400} showsVerticalScrollIndicator={false}>\n                            {!justItems && <ItemsCollection hasShowAll={false} title={'أخترنا لك'} items={data.selectForYouItems} />}\n                            <ItemsList data={data.items} />\n                        </ScrollView>\n                    }\n                    {isLoadMore &&\n                        <View style={{ position: 'absolute', bottom: 0, left: 0, padding: 15, justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                            <Spinner />\n                        </View>\n                    }\n                </View>\n            </View>\n        </Layout>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react';\n\n// Views\nimport {View,Image,Dimensions} from 'react-native';\n\n// Services\nimport {env} from '../../../constants'\n\nexport default ({item}) => {\n    let {height} = Dimensions.get(\"screen\")\n     return (\n        <View style={{ height: height / 3, backgroundColor: 'white'}}>\n            <Image source={{uri:env.server + env.itemImageSource + item.image }} style={{height:'100%',width:'100%'}} resizeMode=\"contain\" />\n        </View>\n     )\n}","import React from 'react';\n\n// views\nimport {View,ScrollView,Dimensions} from 'react-native';\nimport { Layout} from \"@ui-kitten/components\";\n\n// Services\nimport {colors} from '../../../constants'\n\n\nexport default (props) => {\n    let {width,height} = Dimensions.get(\"screen\")\n     return (\n        <View style={{position:'absolute',left:0,top:0,height:'100%',height:'100%'}}>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                <View style={{height:height / 3,width:'100%'}}></View>\n                <Layout style={{width:width,borderTopLeftRadius: 30, borderTopRightRadius: 30,borderColor:colors.moreWhite,borderWidth:1}}>\n                    {props.children}\n                </Layout>\n            </ScrollView>\n        </View>\n     )\n}","import React from \"react\";\n\n// Views \nimport { View } from \"react-native\";\nimport { Text, useTheme } from \"@ui-kitten/components\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport DetailCard from '../../../components/Cards/DetailCard'\n\n// Services\nimport { TranslationsMethods } from '../../../services'\nimport { translate } from '../../../translations'\n\n\n// Stores\nimport { connect } from \"react-redux\";\n\n\n// -------- Item Details -------- //\nlet ItemDetails = (props) => {\n\n    // Global Props\n    let theme = useTheme()\n    let { item } = props;\n\n    let TitleAndDescription = () => (\n        <View style={{ padding: 15 }}>\n            <Text style={{ fontSize: 20, textAlign: \"center\", fontFamily: TranslationsMethods.ReturnFont(\"Bold\") }} >\n                {TranslationsMethods.ReturnValue(\"title\", item.translations, item.title)}\n            </Text>\n            <View style={{ flexDirection: 'row', alignItems: 'center', width: '80%' }}>\n                <Entypo name=\"text\" style={{ fontSize: 14, color: theme['text-hint-color'] }} />\n                <Text style={{ fontSize: 14, marginLeft: 10, textAlign: \"left\" }}>\n                    {TranslationsMethods.ReturnValue(\"description\", item.translations, item.description)}\n                </Text>\n            </View>\n        </View>\n    )\n\n    let NumberDetails = () => (\n        <View style={{padding:15}}>\n            <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center'}}>\n                <DetailCard size=\"large\" valueSubTitle={'دينار'} valueStyle={{textDecorationStyle: 'solid', textDecorationLine: 'line-through', textDecorationColor:theme['text-hint-color']}} title=\"السعر الأصلي\" value={item.original_price.toFixed(2)} />\n                <DetailCard size=\"large\" title=\"الكمية المتبقية\" value={item.storagesItems.qty} />\n            </View>\n            <View style={{justifyContent:'center',alignItems:'center'}}>\n                <DetailCard size=\"x-large\" valueSubTitle={'دينار'} valueStyle={{color:'black'}} value={item.price.toFixed(2)} title=\"السعر\"></DetailCard>\n            </View>\n        </View>\n    )\n    return (\n        <View >\n            <TitleAndDescription />\n            <NumberDetails />\n        </View>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemDetails);\n","import React from \"react\";\n\n// Views\nimport { View } from \"react-native\";\nimport {Text, useTheme } from \"@ui-kitten/components\";\nimport { MaterialCommunityIcons} from \"@expo/vector-icons\";\n\n// Services\nimport {translate} from '../../../translations'\n\n\n// ------ Item Details ----- //\nexport default (props) => {\n  let theme = useTheme()\n  let { item } = props;\n\n  let DetailsList = ({ title, icon, color = \"black\", value }) => (\n    <View style={{ width: '50%', justifyContent: 'center', alignItems: 'center' }}>\n      <View\n        style={{ flexDirection: \"row\", alignItems: \"center\" }}\n      >\n        <MaterialCommunityIcons\n          name={icon}\n          style={{ fontSize: 22, color: theme['text-hint-color'] }}\n        />\n        <View style={{ width: 1 }}></View>\n        <Text style={{ color:theme['text-hint-color'], textAlign: 'center' }}>{title}</Text>\n      </View>\n        {color == \"black\" &&\n        <Text style={{ fontSize: 16 }}>{value}</Text>\n        }\n        {color !== \"black\" &&\n        <View style={{ height: 25, width: 30, backgroundColor: color, borderRadius: 3 }}></View>\n        }\n    </View>\n  );\n\n  return (\n    <View style={{ padding: 15 }}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        <DetailsList icon={\"invert-colors\"} color={item.color} value={\"أحمر\"} title={translate(\"item.color\")}/>\n        <DetailsList icon={\"move-resize\"} value={item.size} title={translate(\"item.size\")} />\n        <DetailsList icon={\"format-line-weight\"} value={item.weight} title={translate(\"item.weight\")} />\n        <DetailsList icon={\"package-variant\"} value={item.packing} title={translate(\"item.package\")} />\n      </View>\n    </View>\n  );\n};\n","import React from \"react\";\n\n// Views\nimport { View, StyleSheet, Animated } from \"react-native\";\nimport { Text, useTheme, Button } from \"@ui-kitten/components\";\nimport Toast from \"react-native-toast-message\";\n\n// Services\nimport { colors } from \"../../../constants\";\nimport { Basket, TranslationsMethods } from \"../../../services\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport { translate } from '../../../translations'\n\n\n// Stores \nimport { connect } from 'react-redux';\n\n\nlet Actions = ({ data }) => {\n\n    // Global Props\n    let theme = useTheme();\n\n    let animatedAddButton = React.useRef(new Animated.Value(1)).current\n\n\n    let [added, setAdded] = React.useState(false)\n    let [qty, setQty] = React.useState(1)\n\n    // Check is item in basket\n    let installBasketChecker = async () => {\n        let item = await Basket.CheckItemInBasket(data.ID)\n        if (item) {\n            setAdded(true)\n            setQty(item.qty)\n        }\n    }\n    // Add Item To Basket\n    let AddToBasket = () => {\n        Toast.show({\n            text1: translate(\"success\"),\n            text2: translate(\"item.added_success\"),\n            type: 'success',\n            visibilityTime: 500,\n            position: 'bottom'\n        })\n        Basket.AddToBasket(data, 1)\n    }\n    // Add Locale Function\n    let TryAnimated = () => {\n        AddToBasket()\n        Animated.timing(animatedAddButton, {\n            toValue: 0, duration: 300, useNativeDriver: true\n        }).start()\n        setTimeout(() => {\n            setAdded(true)\n            Animated.timing(animatedAddButton, {\n                toValue: 1, duration: 300, useNativeDriver: true\n            }).start()\n        }, 300);\n    }\n\n    // Add Locale Function\n    let BackAnimation = () => {\n        Basket.RemoveItemFromBasket(data.ID)\n        Animated.timing(animatedAddButton, {\n            toValue: 0, duration: 300, useNativeDriver: true\n        }).start()\n        setTimeout(() => {\n            setAdded(false)\n            Animated.timing(animatedAddButton, {\n                toValue: 1, duration: 300, useNativeDriver: true\n            }).start()\n        }, 300);\n    }\n\n\n\n    useFocusEffect(\n        React.useCallback(() => {\n            installBasketChecker();\n        }, [])\n    );\n\n    let ChangeQtyLocal = (type) => {\n        if (type == \"+\") {\n            if (data.storagesItems.qty > qty) {\n                setQty(qty + 1)\n                Basket.ChangeQty(data.ID, \"+\")\n            }\n        } else {\n            if (qty !== 1) {\n                setQty(qty - 1)\n                Basket.ChangeQty(data.ID, \"-\")\n            } else {\n                BackAnimation()\n            }\n        }\n    }\n\n    let ActionButtons = () => {\n        return (\n            <Animated.View style={{ paddingTop: '4%', transform: [{ scaleX: animatedAddButton }] }}>\n                {added &&\n                    <View style={{ flexDirection: 'row' }}>\n                        <View style={{ flex: 1 }}>\n                            <Button onPress={() => { ChangeQtyLocal(\"+\") }} status=\"info\" style={{ borderRadius: 0, borderTopLeftRadius: 5, borderBottomLeftRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-success-700'], fontFamily: 'CairoBold' }}>+</Text>}</Button>\n                        </View>\n                        <View style={{ flex: 2 }}>\n                            <Button  status=\"info\" style={{borderRadius: 0, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 18, color: theme['color-info-400'], fontFamily: 'CairoBold' }}>{qty}</Text>}</Button>\n                        </View>\n                        <View style={{ flex: 1 }}>\n                            <Button onPress={() => { ChangeQtyLocal(\"-\") }} status=\"info\" style={{borderRadius: 0, borderTopRightRadius: 5, borderBottomRightRadius: 5, backgroundColor: 'white', borderColor: colors.moreWhite }}>{evaProps => <Text {...evaProps} style={{ fontSize: 20, color: theme['color-danger-700'], fontFamily: 'CairoBold' }}>-</Text>}</Button>\n                        </View>\n                    </View>\n                }\n                {!added &&\n                    <Button\n                        status=\"info\"\n                        onPress={TryAnimated}\n                        style={{ borderRadius: 5}}\n                        disabled={data.storagesItems.qty == 0 ?true:false}\n                    >\n                        {evaProps => <Text {...evaProps} style={{ fontSize: 12, color: 'white', fontFamily: 'CairoBold' }}>{data.storagesItems.qty == 0 ?\"نفذ من المخزون\":\"اضافة الى السلة\"}</Text>}\n                    </Button>\n                }\n\n            </Animated.View>\n        )\n    }\n    return (\n        <View style={{ padding: 15 }}>\n            <ActionButtons />\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Actions);","import React from 'react';\n\n//Views\nimport { View, ScrollView, Dimensions } from 'react-native';\nimport { CardNormal,TextBanner } from '../../../components'\n\n// Services\nimport { translate } from '../../../translations';\n\n\nexport default ({ items }) => {\n     let { width } = Dimensions.get(\"screen\")\n     return (\n          <View style={{ padding: 15, marginTop: 20 }}>\n               <TextBanner text={translate(\"main.select_for_you\")}/>\n               <ScrollView contentContainerStyle={{ paddingHorizontal: 5, marginTop: 15 }} showsHorizontalScrollIndicator={false} horizontal={true}>\n                    {items.map((trg, index) => (\n                         <View key={index} style={{ width: width / 2, paddingHorizontal: 5 }}>\n                              <CardNormal data={trg} />\n                         </View>\n                    ))}\n               </ScrollView>\n          </View>\n     )\n}","import React from 'react';\n\n// Views\nimport { View, Dimensions } from 'react-native';\nimport { Layout, Text } from '@ui-kitten/components';\nimport { HeaderNav } from '../../components'\nimport { ItemImages, ItemPanel, ItemDetails, DeepDetails, Actions, RelatedItems } from './components'\n\n\n// Services\nimport { apis } from '../../services'\nimport { useFocusEffect } from '@react-navigation/native';\n\n\n// Stores\nimport { connect } from 'react-redux';\n\n\n// -------- Item --------- //\nlet Item = (props) => {\n     // Global props\n     let { height } = Dimensions.get(\"screen\")\n     let { route, navigation } = props;\n     let { itemID } = route.params\n     let [isLoad, setIsLoad] = React.useState(true)\n     let [item, setItem] = React.useState({})\n     let [itemStorageCount, setItemStorageCount] = React.useState(0)\n     let [relatedItems, setRelatedItems] = React.useState([])\n\n     // ------- Methods -------- //\n     let install = () => {\n          setIsLoad(true)\n          let onSuccess = (res) => {\n               setItem(res.item);\n               setItemStorageCount(res.allItemCounts);\n               setRelatedItems(res.relatedItems);\n               setIsLoad(false);\n          };\n          let onError = (err) => {\n               console.log(\"Item Index Error :\", err);\n          };\n          apis.main.showItem(itemID, onSuccess, onError);\n     };\n\n     useFocusEffect(\n          React.useCallback(() => {\n               install()\n          }, [itemID])\n     );\n\n     // ----------- Render() --------- //\n     return (\n          <Layout style={{ flex: 1 }} level=\"1\">\n               <HeaderNav hasCart={false} />\n               {!isLoad &&\n                    <View style={{ flex: 1 }}>\n                         <ItemImages item={item} />\n                         <ItemPanel >\n                              <ItemDetails item={item} />\n                              <DeepDetails item={item} />\n                              <Actions data={item} />\n                              <RelatedItems items={relatedItems} />\n                              <View style={{ height: 50 }}></View>\n                         </ItemPanel>\n                    </View>\n               }\n\n          </Layout>\n     )\n}\n\n\nconst mapStateToProps = (state) => {\n     return {\n\n     }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n     return {\n\n     }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","import React from 'react';\n\n// Views\nimport { View, ScrollView } from 'react-native';\nimport { Layout,Spinner } from '@ui-kitten/components'\nimport { CardNormal,HeaderNav,TextBanner } from '../../components'\nimport Toast from 'react-native-toast-message'\n\n\n// Services\nimport { translate } from '../../translations'\nimport { apis } from '../../services'\n\n\n// --------- Items Show -------- //\nexport default (props) => {\n\n    // Global Props\n    let [items, setItems] = React.useState([])\n    let { route } = props\n    let { type } = route.params\n    let [page, setPage] = React.useState(1)\n\n\n    let install = () => {\n        let success = (res) => {\n            setItems(res.items)\n            setPage(2)\n        }\n        let error = err => {\n            console.log(\"error load show all\", err, \"\\n\", err.response.data)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'error'\n            })\n        }\n\n        let _data = {\n            type: type,\n            page: page\n        }\n        apis.main.indexAllItems(_data, success, error)\n    }\n\n    let [isLoadMore, setIsLoadMore] = React.useState(false)\n    let loadMore = () => {\n        let success = (res) => {\n            setItems([...items, ...res.items])\n            setPage(page + 1)\n            setTimeout(() => {\n                setIsLoadMore(false)\n            }, 2000);\n        }\n        let error = err => {\n            console.log(\"error load show all\", err, \"\\n\", err.response.data)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'error'\n            })\n        }\n\n        let _data = {\n            type: type,\n            page: page\n        }\n        if (isLoadMore == false) {\n            setIsLoadMore(true)\n            apis.main.indexAllItems(_data, success, error)\n        }\n    }\n\n    React.useEffect(() => {\n        install()\n    }, [])\n\n    const isCloseToBottom = ({ layoutMeasurement, contentOffset, contentSize }) => {\n        const paddingToBottom = 20;\n        return layoutMeasurement.height + contentOffset.y >=\n            contentSize.height - paddingToBottom;\n    };\n\n    let TitleFixer = () => {\n        if (type == \"selectForYou\") {\n            return (\n                <TextBanner text={translate(\"main.select_for_you\")} />\n            )\n        }\n        if (type == \"newItems\") {\n            return (\n                <TextBanner text={translate(\"main.new_items\")} />\n            )\n        }\n        return null\n    }\n    return (\n        <Layout level=\"3\" style={{ flex: 1 }}>\n            <HeaderNav />\n            <ScrollView onScroll={({ nativeEvent }) => {\n                if (isCloseToBottom(nativeEvent)) {\n                    loadMore()\n                }\n            }}\n                scrollEventThrottle={400} contentContainerStyle={{ padding: 5, width: '100%', marginTop: 20 }}>\n                {TitleFixer()}\n                <View style={{ flexDirection: 'row', alignItems: 'center', flexWrap: 'wrap', justifyContent: 'center', marginTop: 10, width: '100%' }}>\n                    {items.map((trg, index) => (\n                        <View style={{ width: '50%', padding: 1 }} key={index}>\n                            <CardNormal data={trg} />\n                        </View>\n                    ))}\n                </View>\n            </ScrollView>\n            {isLoadMore &&\n                <View style={{ position: 'absolute', bottom: 0, left: 0, padding: 15, justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                    <Spinner />\n                </View>\n            }\n        </Layout>\n    )\n}","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport {\r\n  Icon,\r\n  Text,\r\n  TopNavigation,\r\n  TopNavigationAction,\r\n  useTheme\r\n} from \"@ui-kitten/components\";\r\nimport { translate } from \"../../../translations\";\r\nimport {MaterialIcons,Ionicons} from '@expo/vector-icons'\r\n\r\nexport default () => {\r\n  const BackIcon = (props) => <Icon {...props} name=\"archive-outline\" />;\r\n  let theme = useTheme()\r\n  const BackAction = () => (\r\n    <View style={{marginHorizontal:5}}>\r\n      <Ionicons name=\"clipboard-outline\" style={{fontSize:22}} color={\"black\"} />\r\n    </View>\r\n  );\r\n\r\n  const RightContent = () => (\r\n    <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\r\n    <View style={{flexDirection:'row',alignItems:'center'}}>\r\n    <Text style={{ color: theme['color-success-500'],fontFamily:'openSansBold',fontSize:22,marginHorizontal:1 }}>\r\n        3\r\n    </Text>\r\n    <View style={{paddingTop:2}}>\r\n    <MaterialIcons name=\"pending-actions\" style={{fontSize:22}} color={\"black\"} />\r\n\r\n    </View>\r\n    </View>\r\n    <View style={{width:3}}></View>\r\n      <Text style={{paddingTop:2,fontSize:8,color:theme['text-hint-color'],marginBottom:2}}>قيد التنفيذ</Text>\r\n    </View>\r\n  )\r\n\r\n  return (\r\n    <TopNavigation accessoryRight={RightContent} accessoryLeft={BackAction} title=\"طلباتي\" />\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {View,TouchableOpacity} from 'react-native';\r\nimport {Text} from '@ui-kitten/components'\r\nimport {useNavigation} from '@react-navigation/native'\r\nimport { translate } from '../../../translations';\r\nexport default ({data}) => {\r\n    let navigation = useNavigation()\r\n    let ListView = ({ title, value, bold = false }) => (\r\n        <View\r\n          style={{\r\n            paddingVertical: 2,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            borderBottomColor:\"#7e7e7e\",\r\n            borderBottomWidth: bold ? 0 : 0.5,\r\n          }}\r\n        >\r\n          <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\",fontSize:12 }}>\r\n            {title}\r\n          </Text>\r\n          <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\",fontFamily:'CairoBold',fontSize:12 }}>\r\n            {value}\r\n          </Text>\r\n        </View>\r\n      );\r\n     return (\r\n        <TouchableOpacity onPress={() => {navigation.navigate(\"OrderShow\",{orderID:data.ID})}} style={{backgroundColor:'white',paddingHorizontal:15,paddingTop:25,marginTop:15,borderRadius:10}}>\r\n            <ListView title={translate(\"order.date\")} value={data.CreatedAt} bold={true}></ListView>\r\n            <ListView title={translate(\"order.bill_id\")} value={data.ID}></ListView>\r\n            <ListView title={translate(\"order.status\")} value={\"مكتمل\"}></ListView>\r\n            <ListView title={translate(\"order.bill_total\")} value={data.total.toFixed(2) + \" \" + translate(\"jod\")}></ListView>\r\n            <ListView title={translate(\"order.note\")} value={data.note == \"\" ? \"ـــــ\":data.note}></ListView>\r\n        </TouchableOpacity>\r\n     )\r\n}","import React from \"react\";\n\n\n// Views\nimport { View, ScrollView, TouchableOpacity } from \"react-native\";\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\nimport { AntDesign } from '@expo/vector-icons'\nimport HeaderNav from \"./Components/HeaderNav\";\nimport DetailCard from '../../components/Cards/DetailCard'\nimport OrderBox from \"./Components/OrderBox\";\nimport { TextBanner } from '../../components'\n\n\n// Services\nimport { translate } from \"../../translations\";\n\n// Stores\nimport { connect } from \"react-redux\";\n\n\n// My Orders\nlet MyOrders = (props) => {\n  let { orders } = props.user\n  let { navigation } = props\n  let theme = useTheme();\n\n  let OrdersFilter = () => {\n    /**\n     * @return\n     * paymentTotal\n     * ordersTotal\n     * successOrdersTotal\n     */\n\n    let paymentTotal = 0;\n    let successOrdersTotal = 0;\n    let ordersTotal = orders.length\n    orders.forEach((trg, index) => {\n      if (trg.status == 1) {\n        successOrdersTotal = successOrdersTotal + 1;\n      }\n      paymentTotal = paymentTotal + trg.total\n    })\n    paymentTotal = paymentTotal.toFixed(2)\n    return {\n      paymentTotal,\n      successOrdersTotal,\n      ordersTotal\n    }\n  }\n\n  let Details = () => (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 10,\n        paddingHorizontal: 5,\n      }}\n    >\n    <View style={{ flex: 1 }}>\n        <DetailCard value={OrdersFilter().ordersTotal} title={translate(\"order.order_total\")} />\n      </View>\n      <View style={{ width: 0.50,height:'35%',backgroundColor:theme['color-info-200']   }}></View>\n      <View style={{ flex: 1 }}>\n        <DetailCard value={OrdersFilter().successOrdersTotal} title={translate(\"order.ended_order\")} />\n      </View>\n      <View style={{ width: 0.50,height:'35%',backgroundColor:theme['color-info-200']  }}></View>\n      <View style={{ flex: 1 }}>\n        <DetailCard value={18} title={\"عدد المنتجات\"} />\n      </View>\n      \n    </View>\n  );\n  let MoreDetails = () => (\n    <View\n      style={{\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 30,\n        paddingHorizontal: 5,\n        paddingBottom:10\n      }}\n    >\n      <View style={{ flex: 1 }}>\n        <DetailCard value={OrdersFilter().paymentTotal} valueSubTitle={translate(\"jod\")} title={\"القيمة الأصلية\"} />\n      </View>\n      <View style={{ width: 0.50,height:'35%',backgroundColor:theme['color-info-200'] }}></View>\n      <View style={{ flex: 1 }}>\n        <DetailCard value={OrdersFilter().paymentTotal} valueSubTitle={translate(\"jod\")} title={\"قيمة المشتريات\"} />\n      </View>\n      <View style={{ width: 0.50,height:'35%',backgroundColor:theme['color-info-200']  }}></View>\n      <View style={{ flex: 1 }}>\n        <DetailCard value={OrdersFilter().paymentTotal} valueSubTitle={\"20%\"} valueSubTitleStyle={{color:theme['color-primary-500']}} title={\"قيمة التوفير\"} />\n      </View>\n    </View>\n  )\n\n  let HasOrders = () => (\n    <View style={{ margin: 10,marginTop:40 }}>\n      <TextBanner text={translate(\"order.order_list\")} />\n      {orders.map((trg, index) => (\n        <OrderBox key={index} data={trg} />\n      ))}\n    </View>\n  )\n\n  let NoOrders = () => (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <AntDesign name=\"meh\" style={{ fontSize: 64, color: theme['text-hint-color'] }} />\n      <Text style={{ textAlign: 'center', fontSize: 18, color: theme['text-hint-color'] }}>\n        {translate(\"order.no_old_orders\")}\n      </Text>\n    </View>\n  )\n\n\n  let [pendingOrdersList, setPendingOrdersList] = React.useState([])\n  let PendingOrders = () => {\n    let _pendingOrders = []\n    orders.forEach((_order, index) => {\n      if (_order.status !== 3) {\n        _pendingOrders.push(_order)\n      }\n    })\n\n    setPendingOrdersList(_pendingOrders)\n  }\n\n\n  React.useEffect(() => {\n    PendingOrders()\n  }, [])\n\n  return (\n    <Layout style={{ flex: 1 }} level=\"1\">\n      <HeaderNav />\n      <View style={{height:10}}></View>\n      <Details />\n        <MoreDetails />\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {pendingOrdersList.length > 0 &&\n          <View style={{ padding: 15,marginBottom:5 }}>\n          <View style={{height:15}}></View>\n          <TextBanner text=\"طلبات معلقة\"></TextBanner>\n            {pendingOrdersList.map((trg, index) => (\n              <View key={index} style={{ padding: 15, paddingBottom: 5, marginTop: 5, backgroundColor: 'white',borderColor:theme['color-info-100'],borderWidth:1,borderRadius:5 }}>\n                <View style={{ flexDirection: 'row', alignItems: 'center',justifyContent:'space-between' }}>\n                  <DetailCard value={trg.total.toFixed(2)} valueSubTitle={translate(\"jod\")} valueStyle={{color:'black'}} title=\"مجموع الفاتورة\" />\n                  <DetailCard value={2}  title=\"عدد المواد\" />\n                  <DetailCard value={\"48\"} valueSubTitle={\"ساعه\"}  title=\"التوصيل خلال\" />\n                </View>\n                <TouchableOpacity onPress={() => { navigation.navigate(\"OrderShow\", { orderID: trg.ID }) }} style={{ flexDirection: 'row', paddingTop: 10, justifyContent: 'center', alignItems: 'center' }}>\n                  <Text style={{ fontSize: 8,textDecorationLine:'underline',textDecorationColor:theme['text-primary-color'],textDecorationStyle:'solid', fontFamily: 'CairoBold', color: theme['text-primary-color'] }}>التفاصيل</Text>\n                </TouchableOpacity>\n              </View>\n            ))}\n          </View>\n        }\n        \n        {orders.length > 0 &&\n          <HasOrders />\n        }\n        {orders.length == 0 &&\n          <NoOrders />\n        }\n        <View style={{ height: 75 }}></View>\n      </ScrollView>\n\n    </Layout>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyOrders);","import React from 'react';\r\nimport {View,StyleSheet} from 'react-native';\r\nimport {Text,useTheme} from '@ui-kitten/components'\r\nimport { translate } from '../../../translations';\r\nimport {TranslationsMethods} from '../../../services'\r\nexport default ({order}) => {\r\n    let theme = useTheme()\r\n    let styles = StyleSheet.create({\r\n        orderDetailsBox:{\r\n            backgroundColor:'white',\r\n            padding:15,\r\n            flexDirection:'row',\r\n            alignItems:'center',\r\n            justifyContent:'space-between'\r\n        },\r\n        flex1:{\r\n            flex:1\r\n        },\r\n        orderDetailsText:{\r\n            color:theme['text-hint-color'],\r\n            fontFamily:TranslationsMethods.ReturnFont(\"Bold\")\r\n        }\r\n    })\r\n     return (\r\n        <View style={styles.orderDetailsBox}>\r\n                <View>\r\n                    <Text style={styles.orderDetailsText}>#{order.ID}</Text>\r\n                </View>\r\n                <View >\r\n                    <Text style={styles.orderDetailsText}>{order.payment_method}</Text>\r\n                </View>\r\n                <View >\r\n                    <Text style={styles.orderDetailsText}>{\"القيمة\"}: {order.total} {translate(\"jod\")}</Text>\r\n                </View>\r\n            </View>\r\n     )\r\n}","import React from \"react\";\r\nimport { View, Image, StyleSheet } from \"react-native\";\r\nimport { Layout, Text, useTheme } from \"@ui-kitten/components\";\r\nimport {env} from '../../../constants'\r\nimport {translate} from '../../../translations'\r\nexport default ({data}) => {\r\n  let theme = useTheme();\r\n  let styles = StyleSheet.create({\r\n    box: {\r\n      width: \"100%\",\r\n      marginTop: 5,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 10,\r\n      flexDirection: \"row\",\r\n    },\r\n    imageContainer: {\r\n      borderRadius: 5,\r\n      padding: 2,\r\n    },\r\n    imageBox: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n    detailsBox: {\r\n      padding: 10,\r\n    },\r\n  });\r\n  return (\r\n    <View style={styles.box}>\r\n      <View style={{ flex: 1 }}>\r\n        <View level=\"3\" style={styles.detailsBox}>\r\n          <Image\r\n            source={{uri:env.server + env.itemImageSource + data.item.image}}\r\n            style={styles.imageBox}\r\n            resizeMode=\"center\"\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={{ flex: 2 }}>\r\n        <View style={styles.detailsBox}>\r\n          <View >\r\n            <Text style={{ textAlign: \"left\",color:'black' }}>{data.item.title}</Text>\r\n            <Text\r\n              style={{\r\n                fontSize: 12,\r\n                color: theme[\"text-hint-color\"],\r\n                textAlign: \"left\",\r\n              }}\r\n            >\r\n              {data.item.description}\r\n            </Text>\r\n          </View>\r\n          <View\r\n            style={{\r\n              flexDirection: \"row\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <View>\r\n              <Text>{data.total.toFixed(2) + ' ' + translate(\"jod\")}</Text>\r\n            </View>\r\n            <View>\r\n              <Text>x{data.qty}</Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {View,StyleSheet} from 'react-native';\r\nimport {Text,Layout,useTheme,} from '@ui-kitten/components'\r\nimport ItemBox from './ItemBox'\r\nimport { translate } from '../../../translations';\r\nimport {TranslationsMethods} from '../../../services'\r\nexport default ({orderItems}) => {\r\n    let theme = useTheme()\r\n    let styles = StyleSheet.create({\r\n        box:{\r\n            padding:15\r\n        },\r\n        title:{\r\n            fontSize:14,fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),\r\n            textAlign:'left'\r\n        }\r\n    })\r\n     return (\r\n        <View style={styles.box}>\r\n            <Text style={styles.title}>{translate(\"order.items\")}</Text>\r\n            {orderItems.map((trg,index) => (\r\n                <ItemBox key={index} data={trg} />\r\n            ))}\r\n        </View>\r\n     )\r\n}","import React from 'react';\r\nimport {View,StyleSheet} from 'react-native';\r\nimport {Layout,Text,Icon,useTheme} from '@ui-kitten/components'\r\nimport { translate } from '../../../translations';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport {TranslationsMethods} from '../../../services'\r\nexport default ({order}) => {\r\n    let theme = useTheme()\r\n    let styles = StyleSheet.create({\r\n        box:{\r\n            marginTop:10,\r\n            padding:15\r\n        },\r\n        title:{\r\n            fontSize:14,fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),\r\n            textAlign:'left'\r\n        },\r\n        detailBox:{\r\n            width:'100%',height:50,\r\n            flexDirection:'row',\r\n            justifyContent:'center',\r\n            alignItems:'center'\r\n        }\r\n    })\r\n    let height = 50\r\n\r\n    let DiverBox = ({status = 'display'}) => (\r\n        <View style={styles.detailBox}>\r\n            <View style={{height:height,width:height,justifyContent:'center',alignItems:'center'}}>\r\n                <View style={{height:'100%',width:1,backgroundColor:status == 'active' ?theme['color-primary-500']:theme['color-info-300']}}></View>\r\n            </View>\r\n            <View style={{width:50}}></View>\r\n            <View style={{width:150}}>\r\n            </View>\r\n        </View>\r\n    )\r\n    let DetailBox = ({icon,value,value2,status = 'display'}) => (\r\n        <View style={styles.detailBox}>\r\n            <View style={{height:height,width:height,borderRadius:height / 2,overflow:'hidden'}}>\r\n      <LinearGradient colors={status == 'active'?[theme['color-success-500'], theme['color-primary-500']]:[theme['color-info-100'],theme['color-info-200']]} style={{height:height,width:height,justifyContent:'center',alignItems:'center'}} >\r\n                <Icon name={icon} fill=\"white\" style={{width:height / 2,height:height /2}}/>\r\n                </LinearGradient>\r\n            </View>\r\n            <View style={{width:50}}></View>\r\n            <View style={{width:150}}>\r\n                <Text style={{color:status == 'active' ?theme['text-primary-color']:theme['text-hint-color'],fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),fontSize:16,textAlign:'left'}}>{value}</Text>\r\n                {status == 'active' &&\r\n                <Text style={{color:theme['text-hint-color'],fontSize:12,textAlign:'left'}}>{value2}</Text>\r\n                }\r\n            </View>\r\n        </View>\r\n    )\r\n     return (\r\n        <View style={styles.box}>\r\n            <Text style={styles.title}>{translate(\"order.order_status\")}</Text>\r\n            <View style={{flexDirection:'column',marginTop:15}}>\r\n                <DetailBox status={order.status >= 0 ?'active':'display'} icon={'shopping-cart-outline'} value={translate(\"order.order_set\")} value2={translate(\"order.order_set_done\")}/>\r\n                <DiverBox status={order.status >= 1 ?'active':'display'}/>\r\n                <DetailBox status={order.status >= 1 ?'active':'display'} icon={'checkmark-square-outline'} value={translate(\"order.order_approve\")} value2={translate(\"order.order_approve_done\")}/>\r\n                <DiverBox status={order.status >= 2 ?'active':'display'}/>\r\n                <DetailBox status={order.status >= 2 ?'active':'display'} icon={'car-outline'} value={translate(\"order.order_delivery\")} value2={translate(\"order.order_delivery_done\")}/>\r\n                <DiverBox status={order.status >= 3 ?'active':'display'} />\r\n                <DetailBox status={order.status >= 3 ?'active':'display'} icon={'checkmark-outline'} value={translate(\"order.order_end\")} value2={translate(\"order.order_end_done\")}/>\r\n            </View>\r\n        </View>\r\n     )\r\n}","import React from \"react\";\r\nimport { ScrollView,View } from \"react-native\";\r\nimport { Layout } from \"@ui-kitten/components\";\r\nimport { OrderDetails, ItemsShow, StatusDetails } from \"./Components\";\r\nimport {apis} from '../../services'\r\nimport {HeaderNav} from '../../components'\r\n\r\n\r\n\r\nexport default (props) => {\r\n  let { route } = props;\r\n  let { orderID } = route.params;\r\n\r\n  let [order, setOrder] = React.useState({});\r\n  let [orderItems, setOrderItems] = React.useState([]);\r\n\r\n  let Install = () => {\r\n    let success = res => {\r\n      setOrder(res.order),\r\n      setOrderItems(res.orderItems)\r\n    }\r\n    let error = err => {\r\n      console.log(\"Install Order Error\",err,\"\\n\",err.response.data)\r\n    }\r\n\r\n    apis.orders.showOrder(orderID,success,error)\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    Install();\r\n  },[])\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }} level=\"1\">\r\n      <HeaderNav hasCart={false} />\r\n      <OrderDetails order={order} />\r\n      <ScrollView showsVerticalScrollIndicator={false}>\r\n        <ItemsShow orderItems={orderItems} />\r\n        <StatusDetails order={order} />\r\n        <View style={{height:100}}></View>\r\n      </ScrollView>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from \"react\";\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from \"@ui-kitten/components\";\nimport {Ionicons} from '@expo/vector-icons'\nimport {View} from 'react-native'\nimport { translate } from \"../../translations\"\n\nexport default () => {\n  const BackIcon = (props) => <Icon {...props} name=\"heart-outline\" />;\n\n  const BackAction = () => (\n    <View style={{marginHorizontal:5}}>\n      <Ionicons name={\"heart-outline\"} style={{fontSize:22}} color=\"black\" />\n    </View>\n  );\n\n\n  return (\n    <TopNavigation accessoryLeft={BackAction} title={translate(\"wishlist.title\")} />\n  );\n};\n","import React from \"react\";\r\n\r\n\r\n// Views\r\nimport { View, ScrollView, } from \"react-native\";\r\nimport { Layout, Icon,Button, Text, useTheme } from \"@ui-kitten/components\";\r\nimport { CardNormal } from '../../components'\r\nimport HeaderNav from './HeaderNav'\r\nimport Toast from \"react-native-toast-message\";\r\nimport DetailCard from '../../components/Cards/DetailCard'\r\nimport {Ionicons} from '@expo/vector-icons'\r\n\r\n// Services\r\nimport { apis, WishList, Basket } from \"../../services\";\r\nimport { translate } from \"../../translations\";\r\nimport { useFocusEffect } from '@react-navigation/native'\r\n\r\n\r\n// Stores\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n// ------- Wish List ------------ //\r\nlet Wishlist = (props) => {\r\n  let { items } = props;\r\n  let { wishListItems } = items;\r\n  let [itemsList, setItemsList] = React.useState([]);\r\n  let theme = useTheme()\r\n\r\n  let install = () => {\r\n    let success = (res) => {\r\n      setItemsList(res.items);\r\n    };\r\n    let error = (err) => {\r\n      console.log(\"Install Index WishList Error\", err, \"\\n\", err.response.data);\r\n    };\r\n\r\n    if (wishListItems.length > 0) {\r\n      apis.main.indexItemsWithIDS({ ids: wishListItems }, success, error);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      install()\r\n    }, [])\r\n  );\r\n\r\n\r\n  let AddAllToBasket = async () => {\r\n    itemsList.forEach((trg) => {\r\n      Basket.AddToBasket(trg, 1)\r\n    })\r\n    Toast.show({\r\n      text1:'تمت العملية بنجاح',\r\n      text2:'تم اضافة جميع المواد الى السلة',\r\n      visibilityTime:3000\r\n    })\r\n    await WishList.RemoveAllItems()\r\n    setItemsList([])\r\n  }\r\n\r\n  let BillTotal = () => {\r\n    let total = 0\r\n    itemsList.forEach((trg) => {\r\n      total = total + trg.price\r\n    })\r\n    return total.toFixed(2);\r\n  }\r\n  let TotalOriginalPrice = () => {\r\n    let total = 0\r\n    itemsList.forEach((trg) => {\r\n      total = total + trg.original_price\r\n    })\r\n    return total.toFixed(2);\r\n  }\r\n\r\n  let ProvideTotal = () => {\r\n    let TotalOriginal = TotalOriginalPrice()\r\n    let _BillTotal = BillTotal()\r\n    let provide = TotalOriginal - _BillTotal\r\n    return provide.toFixed(2)\r\n  }\r\n\r\n  let PTotal = () => {\r\n    let TotalOriginal = TotalOriginalPrice()\r\n    let _BillTotal = BillTotal()\r\n\r\n    let provide = TotalOriginal - _BillTotal\r\n\r\n    let p = provide / TotalOriginal\r\n    p = p * 100\r\n\r\n    return p.toFixed(0);\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }} level=\"1\">\r\n      <HeaderNav  />\r\n      {itemsList.length > 0 &&\r\n        <View style={{ padding: 5, paddingTop: 0, paddingHorizontal: 30, backgroundColor: \"white\" }}>\r\n          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\r\n          <View style={{flex:1}}>\r\n            <DetailCard title=\"مجموع المواد\" value={itemsList.length} />\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <DetailCard title=\"السعر الأصلي\" valueSubTitle={\"دينار\"} valueStyle={{textDecorationStyle:'solid',textDecorationColor:theme['color-primary-500'],textDecorationLine:'line-through'}} value={TotalOriginalPrice()} />\r\n          </View>\r\n          <View style={{flex:1}}>\r\n            <DetailCard title=\"قيمة التوفير\"  valueSubTitle={\"دينار\"} value={ProvideTotal()} />\r\n          </View>\r\n          </View>\r\n          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'center', paddingTop: 10,paddingBottom:8 }}>\r\n            <DetailCard value={BillTotal()} title=\"قيمة المواد\" valueSubTitle={\"دينار\"} valueStyle={{color:'black'}} size=\"x-large\" />\r\n          </View>\r\n          <View style={{paddingTop:5,paddingHorizontal:43,paddingBottom:10}}>\r\n            <Button size=\"tiny\" onPress={AddAllToBasket} status=\"info\">اضافة الكل الى السلة</Button>\r\n          </View>\r\n        </View>\r\n      }\r\n      {itemsList.length == 0 &&\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', padding: 16 }}>\r\n          <Ionicons name=\"heart-outline\" style={{fontSize:24}} color=\"black\" />\r\n          <Text style={{ textAlign: 'center', fontSize: 16, color: theme['text-hint-color'] }}>{translate(\"wishlist.no_items\")}</Text>\r\n          <Text style={{ textAlign: 'center', fontSize: 12, color: theme['text-hint-color'] }}>{translate(\"wishlist.add_some_items\")}</Text>\r\n        </View>\r\n      }\r\n      {itemsList.length > 0 &&\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n          <View style={{ flexDirection: \"row\", alignItems: \"center\", paddingTop: 20, justifyContent: 'center', flexWrap: 'wrap' }}>\r\n            {itemsList.map((trg, index) => (\r\n              <View style={{ width: \"49%\", marginHorizontal: 1, marginTop: 15 }} key={index}>\r\n                <CardNormal data={trg} />\r\n              </View>\r\n            ))}\r\n          </View>\r\n          <View style={{height:100}}></View>\r\n        </ScrollView>\r\n      }\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);\r\n","import React from \"react\";\r\nimport { View, ScrollView} from \"react-native\";\r\nimport { Layout, Text, Icon, Input,useTheme } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport { CardNormal} from \"../../components\";\r\nimport { apis } from \"../../services\";\r\nimport {HeaderNav} from '../../components'\r\nimport {MaterialCommunityIcons,AntDesign} from '@expo/vector-icons'\r\nimport { translate } from \"../../translations\";\r\nlet Search = () => {\r\n  let [status, setStatus] = React.useState(\"Hold\");\r\n  let [results, setResults] = React.useState([]);\r\n  let [text, setText] = React.useState(\"\");\r\n  let theme = useTheme()\r\n\r\n  let MakeSearch = () => {\r\n    setStatus(\"Searching\");\r\n    let success = (res) => {\r\n      setResults(res.items);\r\n      setStatus(\"Done\");\r\n    };\r\n    let error = (err) => {\r\n      console.log(\"search Err: \", err, \"\\n\", err.response.data);\r\n    };\r\n    apis.main.search(text, success, error);\r\n  };\r\n\r\n\r\n  let searchIcon = (props) => <Icon {...props} name=\"search-outline\" />;\r\n\r\n  let HoldContent = () => (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <MaterialCommunityIcons name=\"layers-search-outline\" style={{fontSize:64,color:theme['text-hint-color']}} />\r\n      <Text style={{color:theme['text-hint-color'],fontSize:16,marginTop:5,textAlign:'center'}}>{translate(\"search.make_search\")}</Text>\r\n    </View>\r\n  );\r\n\r\n  let SearchingHolder = () => (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n    <MaterialCommunityIcons name=\"layers-search-outline\" style={{fontSize:64,color:theme['text-hint-color']}} />\r\n      <Text style={{color:theme['text-hint-color'],fontSize:16,marginTop:5,textAlign:'center'}}>{translate(\"search.searching\")}</Text>\r\n    </View>\r\n  );\r\n\r\n  let NoResults = () => (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n    <AntDesign name=\"meh\" style={{fontSize:64,color:theme['text-hint-color']}} />\r\n      <Text style={{color:theme['text-hint-color'],fontSize:16,marginTop:5,textAlign:'center'}}>{translate(\"search.no_result\")}</Text>\r\n    </View>\r\n  );\r\n\r\n  let ResultsContent = () => (\r\n    <ScrollView  contentContainerStyle={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\r\n      {results.map((trg, index) => (\r\n        <View style={{ width: \"50%\",padding:5 }} key={index}>\r\n          <CardNormal data={trg} />\r\n        </View>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n\r\n  let DisplayContent = () => {\r\n    if (status == \"Hold\") {\r\n      return <HoldContent />;\r\n    }\r\n    if (status == \"Searching\") {\r\n      return <SearchingHolder />;\r\n    }\r\n\r\n    if (status == \"Done\") {\r\n      if (results.length == 0) {\r\n        return <NoResults />;\r\n      } else {\r\n        return <ResultsContent />;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }} level=\"3\">\r\n      <HeaderNav />\r\n      <View style={{ backgroundColor: \"white\", paddingHorizontal: \"5%\" }}>\r\n        <Input\r\n          placeholder={translate(\"main.iam_search_in\")}\r\n          accessoryLeft={searchIcon}\r\n          style={{ borderRadius: 50 }}\r\n          textStyle={{ textAlign: \"right\" }}\r\n          returnKeyType=\"search\"\r\n          value={text}\r\n          onChangeText={(val) => {\r\n            setText(val);\r\n          }}\r\n          onEndEditing={MakeSearch}\r\n        />\r\n      </View>\r\n      <View style={{ flex: 1, padding: 10 }}>{DisplayContent()}</View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React from 'react';\nimport { View, TouchableOpacity, } from 'react-native';\nimport { Text, Input, useTheme, Button,Icon } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport { TextBanner } from '../../../components'\nimport {OrdersActions} from '../../../stores'\nimport {translate} from '../../../translations'\nimport Toast from 'react-native-toast-message'\nimport * as Location from 'expo-location';\nlet Shipping = (props) => {\n    let [ship, setShip] = React.useState({\n        name: '',\n        phone: ''\n    })\n\n    let [load,setLoad] = React.useState(false)\n    let {setSelectedAddress} = props\n    let {address} = props.orders\n    let {addresses,user} = props.user\n\n    let install = () => {\n        setShip({\n            name:user.name,\n            phone:user.phone\n        })\n        if(addresses.length >= 1) {\n            let lastAddress = addresses[addresses.length - 1]\n            setSelectedAddress(lastAddress)\n        }\n    }\n\n    React.useEffect(() => {\n        install()\n    },[])\n    let theme = useTheme()\n    let TakeMyLocation = async () => {\n        setLoad(true)\n        let { status } = await Location.requestPermissionsAsync();\n        if (status !== 'granted') {\n          Toast.show({\n            text1: translate(\"error\"),\n            text2: translate(\"addresses.location_error\"),\n            type: 'danger'\n          })\n          setLoad(false)\n          return;\n        }\n    \n        let location = await Location.getCurrentPositionAsync({});\n        setLoad(false)\n        setSelectedAddress({...address,ID:0,lat:location.coords.latitude,long:location.coords.longitude})\n        Toast.show({\n          text1: translate(\"success\"),\n          text2: translate(\"addresses.location_success\")\n        })\n      }\n    return (\n        <View >\n            <TextBanner text={'المعلومات'} />\n            <View style={{ padding: 10 }}>\n                <Input\n                    placeholder=\"الأسم\"\n                    label=\"الأسم\"\n                    value={ship.name}\n                    textStyle={{ textAlign: \"right\" }}\n                    onChangeText={(val) => { setShip({ ...ship, name: val }) }}\n                />\n                <Input\n                    placeholder=\"رقم الهاتف\"\n                    label=\"رقم الهاتف\"\n                    value={ship.phone}\n                    textStyle={{ textAlign: \"right\" }}\n                    onChangeText={(val) => { setShip({ ...ship, phone: val }) }}\n                />\n                <View style={{ paddingVertical: 10, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-end' }}>\n                    <Text style={{ fontFamily: 'CairoBold', textAlign: 'left' }}>العنوان</Text>\n                    <TouchableOpacity onPress={props.openBottomSheet}>\n                        <Text style={{ fontSize: 12, color: theme['text-hint-color'] }}>تغير العنوان</Text>\n                    </TouchableOpacity>\n                </View>\n                <View style={{ flexDirection: 'row', alignItems: 'center',paddingTop:10 }}>\n                    <View style={{ flex: 1 }}>\n                        <Input\n                            value={address.city}\n                            textStyle={{ textAlign: 'right' }}\n                            placeholder=\"المدينة\"\n                            onChangeText={(val) => setSelectedAddress({ ...address, city: val,ID:0 })}\n                        />\n                    </View>\n                    <View style={{ width: 5 }}></View>\n                    <View style={{ flex: 1 }}>\n                        <Input\n                            value={address.area}\n                            textStyle={{ textAlign: 'right' }}\n                            placeholder=\"المنطقة\"\n                            onChangeText={(val) => setSelectedAddress({ ...address, area: val,ID:0 })}\n                        />\n                    </View>\n                </View>\n                <View style={{paddingTop:5}}></View>\n                <Input\n                    value={address.address}\n                    textStyle={{ textAlign: 'right' }}\n                    placeholder=\"العنوان\"\n                    onChangeText={(val) => setSelectedAddress({ ...address, address: val,ID:0 })}\n                />\n                <View style={{paddingTop:5}}></View>\n                {address.lat !== 0 ?\n                <Button status=\"primary\" onPress={() => {TakeMyLocation()}} disabled={load ? true:false} accessoryLeft={(props) => (<Icon {...props} name=\"checkmark-circle\" />)} size=\"large\">تمت اضافة الموقع</Button>\n                :\n                <Button status=\"info\" onPress={() => {TakeMyLocation()}} disabled={load ? true:false} size=\"large\">اضافة الموقع الحالي</Button>\n                }\n                \n                <View style={{flexDirection:'row',paddingTop:10}}>\n                    <View style={{flex:1,}}>\n                    <Input\n                        value={address.apt}\n                        textStyle={{ textAlign: 'right' }}\n                        placeholder=\"الشقة\\المنزل\"\n                        onChangeText={(val) => setSelectedAddress({ ...address, address: val,ID:0 })}\n                    />\n                    </View>\n                    <View style={{ width: 5 }}></View>\n                    <View style={{flex:1,}}>\n                    <Input\n                        value={address.floor}\n                        textStyle={{ textAlign: 'right' }}\n                        placeholder=\"الطابق\"\n                        onChangeText={(val) => setSelectedAddress({ ...address, address: val,ID:0 })}\n                    />\n                    </View>\n                </View>\n                <View style={{ marginTop: 5 }}>\n                    <Input\n                        value={address.note}\n                        textStyle={{ textAlign: 'right' }}\n                        placeholder=\"ملاحظة\"\n                        onChangeText={(val) => setSelectedAddress({ ...address, note: val,ID:0 })}\n                    />\n                </View>\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user:state.user,\n        orders:state.orders\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedAddress:item => dispatch(OrdersActions.setSelectedAddress(item))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shipping);","import React from 'react';\nimport { View,Dimensions,TouchableOpacity } from 'react-native';\nimport { Layout,Text } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport {colors} from '../../../constants'\nimport {OrdersActions} from '../../../stores'\n\nlet AddressesContainer = (props) => {\n    let {addresses} = props.user\n    let {width,height} = Dimensions.get(\"screen\")\n    let {setSelectedAddress,closeBottomSheet} = props\n    let {address} = props.orders\n    let AddressBox = (props) => (\n        <TouchableOpacity onPress={() => {setSelectedAddress(props.address);closeBottomSheet()}} style={{borderRadius:5,borderWidth:1,borderColor:colors.moreWhite,marginTop:5}}>\n            <View style={{flexDirection:'row'}}>\n                <View style={{flex:1,borderColor:colors.moreWhite,borderWidth:1,justifyContent:'center',padding:5,alignItems:'center'}}>\n                    <View style={{flexDirection:'column'}}>\n                        <Text style={{fontSize:14,fontFamily:'openSansBold',textAlign:'center'}}>{props.address.city}</Text>\n                        <Text style={{fontSize:10,fontFamily:'OpenSans',textAlign:'center'}}>المدينة</Text>\n                    </View>\n                </View>\n                <View style={{flex:1,borderColor:colors.moreWhite,borderWidth:1,justifyContent:'center',padding:5,alignItems:'center'}}>\n                    <View style={{flexDirection:'column'}}>\n                        <Text style={{fontSize:14,fontFamily:'openSansBold',textAlign:'center'}}>{props.address.area}</Text>\n                        <Text style={{fontSize:10,fontFamily:'OpenSans',textAlign:'center'}}>المنطقة</Text>\n                    </View>\n                </View>\n            </View>\n            <View style={{flexDirection:'row'}}>\n                <View style={{flex:1,borderColor:colors.moreWhite,borderWidth:1,justifyContent:'center',padding:5,alignItems:'center'}}>\n                    <View style={{flexDirection:'column'}}>\n                        <Text style={{fontSize:14,fontFamily:'openSansBold',textAlign:'center'}}>{props.address.address}</Text>\n                        <Text style={{fontSize:10,fontFamily:'OpenSans',textAlign:'center'}}>العنوان</Text>\n                    </View>\n                </View>\n                <View style={{flex:1,borderColor:colors.moreWhite,borderWidth:1,justifyContent:'center',padding:5,alignItems:'center'}}>\n                    <View style={{flexDirection:'column'}}>\n                        <Text style={{fontSize:14,fontFamily:'openSansBold',textAlign:'center'}}>{props.address.note}</Text>\n                        <Text style={{fontSize:10,fontFamily:'OpenSans',textAlign:'center'}}>ملاحظة</Text>\n                    </View>\n                </View>\n            </View>\n        </TouchableOpacity>\n    )\n     return(\n        <Layout level=\"1\" style={{height:height / 1.25,padding:15,borderColor:'black',borderWidth:1,borderTopRightRadius:15,borderTopLeftRadius:15}}>\n        <View style={{flexDirection:'row',justifyContent:'center',alignItems:'center'}}>\n            <View style={{width:50,height:1,backgroundColor:'black'}}></View>\n        </View>\n            <Text style={{fontFamily:'CairoBold',textAlign:'left',marginBottom:15}}>أختر عنوان</Text>\n            {addresses.map((trg,index) => (\n                <AddressBox key={index} address={trg} />\n            ))}\n        </Layout>\n     )\n}\n\n\nconst mapStateToProps = (state) => {\n     return {\n         user:state.user,\n         orders:state.orders\n     }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n     return {\n         setSelectedAddress:item => dispatch(OrdersActions.setSelectedAddress(item))\n     }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddressesContainer);","import React from 'react';\nimport { View, TouchableOpacity } from 'react-native';\nimport { Text, useTheme } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport { TextBanner } from '../../../components'\nimport { translate } from \"../../../translations\";\nimport Toast from 'react-native-toast-message'\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { TranslationsMethods } from '../../../services'\nlet PaymentMethod = () => {\n\n    let theme = useTheme()\n\n    let PaymentCard = ({ paymentType, status, type,icon }) => (\n        <TouchableOpacity onPress={() => { PressPaymentType(type) }} style={{ backgroundColor: status == 'success' ? theme['color-success-400'] : 'white', paddingVertical: 10, marginTop: 5, paddingHorizontal: 16, borderRadius: 5, borderColor: status == 'success' ? theme['color-success-600'] : theme['color-basic-400'], borderWidth: 1, flexDirection: 'row', justifyContent: 'space-between' }}>\n            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                <MaterialCommunityIcons name={icon} size={24} color=\"black\" />\n                <Text style={{ textAlign: 'left', fontSize: 14, fontFamily: TranslationsMethods.ReturnFont(\"Bold\") }}>{paymentType}</Text>\n            </View>\n            <View>\n                {status == 'success' &&\n                    <MaterialIcons name=\"done-outline\" size={24} color=\"black\" />\n                }\n            </View>\n        </TouchableOpacity>\n    )\n    let [selectedPaymentType, setSelectedPaymentType] = React.useState(0)\n    let PressPaymentType = (type) => {\n        if (type == 1) {\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"newOrder.not_include\"),\n                type: 'error'\n            })\n        }\n    }\n    return (\n        <View>\n            <TextBanner text=\"طريقة الدفع\" />\n            <View style={{ padding: 15 }}>\n                <PaymentCard icon={'cash-marker'} status={selectedPaymentType == 0 ? 'success' : 'basic'} type={0} paymentType={translate('newOrder.on_delivery')} />\n                <PaymentCard icon={'credit-card-marker-outline'} status={selectedPaymentType == 1 ? 'success' : 'basic'} type={1} paymentType={\"الدفع Visa / Master Card عند التوصيل\"} />\n                <PaymentCard icon={'credit-card-outline'} status={selectedPaymentType == 2 ? 'success' : 'basic'} type={1} paymentType={translate(\"newOrder.visa\")} />\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentMethod);","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Layout, Text, Button, Input } from \"@ui-kitten/components\";\nimport { connect } from \"react-redux\";\nimport { TextBanner } from \"../../../components\";\nimport { apis } from '../../../services'\nimport { OrdersActions, UserActions } from '../../../stores'\nimport Toast from 'react-native-toast-message'\nimport { translate } from '../../../translations'\nimport { colors } from \"../../../constants\";\nimport { useNavigation } from '@react-navigation/native'\nlet Pay = (props) => {\n\n    let { orderItems, address, orderDiscountCode } = props.orders;\n    let { setOrderDiscountCode } = props\n    let { user, orders } = props.user\n    let [load, setLoad] = React.useState(false)\n\n    let navigation = useNavigation()\n\n    // Discount Code Methods\n    let [discountCode, setDiscountCode] = React.useState()\n\n    let GetTotal = () => {\n        let total = 0;\n        orderItems.forEach((trg, index) => {\n            trg.items.forEach((item) => {\n                let itemTotal = item.item.price * item.qty\n                total = total + itemTotal\n            })\n        })\n\n        total = total.toFixed(2)\n\n        if (orderDiscountCode) {\n            let fixedDiscountValue = orderDiscountCode.value * 0.01\n            let discountValue = total * fixedDiscountValue\n            total = total - discountValue\n        }\n        return total\n    }\n\n    let ReturnTotalBeforeTax = () => {\n        let total = GetTotal()\n        let tax = total * 0.16\n        total = total - tax\n\n        return total.toFixed(2);\n    }\n\n    let Store = () => {\n        setLoad(true)\n        let total = GetTotal()\n        total = parseFloat(total)\n        console.log(\"Store Total\", total)\n        let Order = {\n            user_id: user.ID,\n            total: total,\n            address_id: address.ID,\n            type: 'Application',\n            discount_id: orderDiscountCode ? orderDiscountCode.ID : 0,\n            note: '',\n            payment_method: 'paid on delivery'\n        }\n        let _orderItemsList = []\n        orderItems.forEach((trg, index) => {\n            trg.items.forEach((item) => {\n                _orderItemsList.push({ item_id: item.item.ID, qty: item.qty, total: item.item.price * item.qty })\n            })\n        })\n\n        let onSuccess = (res) => {\n            props.resetOrders()\n            props.setOrders([...orders, res.order])\n            setLoad(false)\n            navigation.navigate(\"CheckoutDone\")\n        }\n\n        let onError = (err) => {\n            console.log(\"Error Store Order:\", err, \"\\n\",)\n            setLoad(false)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'error'\n            })\n        }\n        apis.orders.storeOrder({ order: Order, order_items: _orderItemsList, address: address }, onSuccess, onError)\n    }\n\n    let checkDiscountValid = () => {\n        let _data = {\n            user_id: user.ID,\n            code: discountCode\n        }\n\n        let success = (res) => {\n            let status = res.status\n            if (status == 0) {\n                Toast.show({\n                    text1: translate(\"newOrder.code_error\"),\n                    text2: translate(\"newOrder.code_error_2\"),\n                    type: 'error'\n                })\n                return;\n            }\n\n            if (status == 1) {\n                setOrderDiscountCode(res.code)\n                Toast.show({\n                    text1: translate(\"success\"),\n                    text2: translate(\"newOrder.code_success\")\n                })\n            }\n\n            if (status == 2) {\n                Toast.show({\n                    text1: translate(\"error\"),\n                    text2: translate(\"newOrder.code_error_used\"),\n                    type: 'error'\n                })\n            }\n        }\n\n        let error = err => {\n            console.log(\"error check code valid \", err, \"\\n\", err.response.data)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'error'\n            })\n        }\n\n        apis.orders.checkDiscountCode(_data, success, error)\n    }\n\n\n\n    let ReturnTotal = () => {\n        let total = 0;\n        // All Total\n        orderItems.forEach((trg, index) => {\n            trg.items.forEach((item) => {\n                let itemTotal = item.item.price * item.qty\n                total = total + itemTotal\n            })\n        })\n\n        total = total.toFixed(2) // Total \n        \n        let TaxValue = total / 1.16 // مجموع الفاتورة قبل الخصم\n        let TotalBeforeTax = total - TaxValue // قيمة الضريبة \n        \n\n\n\n        if (orderDiscountCode) {\n            // let fixedDiscountValue = orderDiscountCode.value * 0.01\n            // let discountValue = TaxValue * fixedDiscountValue\n            // let totalAfterDiscount = TaxValue - discountValue\n            // let FullTotal = totalAfterDiscount + TaxValue\n\n            let fixedDiscountValue = orderDiscountCode.value * 0.01\n            let discountValue = TaxValue * fixedDiscountValue\n            let totalAfterDiscount = TaxValue - discountValue\n            \n            // xs\n            let TaxValueFull = totalAfterDiscount * 0.16\n            let TaxValueWithDiscount = totalAfterDiscount * 0.16 + totalAfterDiscount\n\n            return (\n                <View>\n                    \n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                        <View>\n                            <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}> الخصم</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                            <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{orderDiscountCode.value}</Text>\n                            <Text style={{ fontSize: 8 }}>%</Text>\n                        </View>\n                    </View>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                        <View>\n                            <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}>مجموع الفاتورة</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                            <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{totalAfterDiscount.toFixed(3)}</Text>\n                            <Text style={{ fontSize: 8 }}>{translate(\"jod\")}</Text>\n                        </View>\n                    </View>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                        <View>\n                            <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}> الضريبة</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                            <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{TaxValueFull.toFixed(3)}</Text>\n                            <Text style={{ fontSize: 8 }}>دينار</Text>\n                        </View>\n                    </View>\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                        <View>\n                            <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}>قيمة الفاتورة</Text>\n                        </View>\n                        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                            <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{TaxValueWithDiscount.toFixed(2)}</Text>\n                            <Text style={{ fontSize: 8 }}>{translate(\"jod\")}</Text>\n                        </View>\n                    </View>\n                </View>\n\n            )\n        }\n        return (\n            <View>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                    <View>\n                        <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}>مجموع الفاتورة</Text>\n                    </View>\n                    <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                        <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{TaxValue.toFixed(3)}</Text>\n                        <Text style={{ fontSize: 8 }}>{translate(\"jod\")}</Text>\n                    </View>\n                </View>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                    <View>\n                        <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}> الضريبة</Text>\n                    </View>\n                    <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                        <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{TotalBeforeTax.toFixed(3)}</Text>\n                        <Text style={{ fontSize: 8 }}>دينار</Text>\n                    </View>\n                </View>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', padding: 15, borderRadius: 2, borderColor: colors.moreWhite, borderWidth: 1 }}>\n                    <View>\n                        <Text style={{ fontFamily: 'CairoBold', fontSize: 14 }}>قيمة الفاتورة</Text>\n                    </View>\n                    <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n                        <Text style={{ fontSize: 14, fontFamily: \"openSansBold\" }}>{total}</Text>\n                        <Text style={{ fontSize: 8 }}>{translate(\"jod\")}</Text>\n                    </View>\n                </View>\n            </View>\n\n        )\n    }\n\n    return (\n        <View>\n            <TextBanner text=\"الفاتورة\" />\n            <View style={{ flexDirection: 'row', alignItems: 'center', paddingHorizontal: 10 }}>\n                <View style={{ flex: 3 }}>\n                    <Input label={translate(\"newOrder.add_discount_code\")} placeholder={translate(\"newOrder.code\")} textStyle={{ textAlign: 'right' }} value={discountCode} onChangeText={(val) => { setDiscountCode(val) }} />\n                </View>\n                <View style={{ width: 3 }}></View>\n                <View style={{ flex: 1 }}>\n                    <Button onPress={checkDiscountValid} status=\"info\" size=\"small\" style={{ top: 11 }}>{translate(\"newOrder.add\")}</Button>\n                </View>\n            </View>\n            <View style={{ paddingTop: 15 }}>\n                {ReturnTotal()}\n            </View>\n            <View style={{ paddingVertical: 25,paddingHorizontal:15}}>\n                <Button onPress={Store} disabled={load ? true : false} status=\"info\">التأكيد والمتابعة</Button>\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.orders,\n        user: state.user\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setOrderDiscountCode: item => dispatch(OrdersActions.setOrderDiscountCode(item)),\n        resetOrders: () => dispatch(OrdersActions.resetOrders()),\n        setOrders: item => dispatch(UserActions.setOrders(item))\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pay);","import React from 'react';\r\nimport { View,ScrollView,Dimensions } from 'react-native';\r\nimport { Layout,Text,Divider } from '@ui-kitten/components';\r\nimport { connect } from 'react-redux';\r\nimport {Header,Shipping,AddressesContainer,PaymentMethod,Pay} from './components'\r\nimport {HeaderNav} from '../../components'\r\nimport BottomSheet from \"reanimated-bottom-sheet\";\r\nlet Checkout = () => {\r\n     let {height} = Dimensions.get(\"screen\")\r\n     let bottomSheetRef = React.useRef(null)\r\n    \r\n     let openBottomSheet = () => {\r\n          bottomSheetRef.current.snapTo(0)\r\n      }\r\n      let closeBottomSheet = () => {\r\n          bottomSheetRef.current.snapTo(2)\r\n      }\r\n\r\n\r\n      let AddressesDialog = () => (\r\n           <AddressesContainer closeBottomSheet={closeBottomSheet} />\r\n      )\r\n\r\n     return(\r\n         <Layout level=\"1\" style={{flex:1}}>\r\n            <HeaderNav hasCart={false} />\r\n               <ScrollView showsVerticalScrollIndicator={false} >\r\n                    <Shipping openBottomSheet={openBottomSheet} closeBottomSheet={closeBottomSheet}/>\r\n                    <View style={{padding:15,paddingHorizontal:35}}>\r\n                         <Divider />\r\n                    </View>\r\n                    <PaymentMethod />\r\n                    <View style={{padding:15,paddingHorizontal:35}}>\r\n                         <Divider />\r\n                    </View>\r\n                    <Pay />\r\n               </ScrollView>\r\n               <BottomSheet\r\n                ref={bottomSheetRef}\r\n                initialSnap={2}\r\n                snapPoints={[height / 1.25, height / 1.25, 0]}\r\n                borderRadius={15}\r\n                renderContent={AddressesDialog}\r\n                enabledInnerScrolling={true}\r\n            />\r\n         </Layout>\r\n     )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n         \r\n     }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n     return {\r\n         \r\n     }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);","import React from 'react';\nimport {View,} from 'react-native';\nimport {Layout,Text,Button} from '@ui-kitten/components'\nimport { translate } from '../../translations';\nimport {TranslationsMethods} from '../../services'\nexport default (props) => {\n     return (\n        <Layout style={{flex:1,justifyContent:'center',alignItems:'center'}} level=\"2\">\n            <Text style={{textAlign:'center', fontSize:24,fontFamily:TranslationsMethods.ReturnFont(\"Bold\")}}>{translate(\"success\")}</Text>\n            <View style={{padding:10}}>\n                <Text style={{textAlign:'center',fontSize:12}}>{translate(\"newOrder.order_success_1\")}</Text>\n                <Text style={{textAlign:'center',fontSize:12}}>{translate(\"newOrder.order_success_2\")}</Text>\n            </View>\n            <View style={{marginTop:10,width:'61.6%'}}>\n                <Button status=\"primary\" size=\"small\" onPress={() => {props.navigation.navigate(\"BottomTapNavigation\")}} style={{backgroundColor:'black',borderColor:'black'}}>{translate(\"newOrder.main\")}</Button>\n            </View>\n        </Layout>\n     )\n}","import React from \"react\";\r\n\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n} from \"@react-navigation/stack\";\r\n\r\n\r\nimport {Orders,OrderShow} from '../views'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport {Animations} from '../constants'\r\n\r\n/** Render() */\r\nexport default function OrdersNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"Orders\"}\r\n    >\r\n     <Stack.Screen name=\"Orders\" component={Orders} />\r\n     <Stack.Screen name=\"OrderShow\" component={OrderShow} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from 'react';\nimport { View, Dimensions } from 'react-native';\nimport { Layout, Text, Input,Button } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Toast from 'react-native-toast-message'\nimport {UserActions} from '../../../stores'\nimport {apis,TranslationsMethods} from '../../../services'\nimport {translate} from '../../../translations'\nlet EditUser = (props) => {\n    let { width, height } = Dimensions.get(\"screen\")\n    let { control, handleSubmit, errors } = useForm();\n    let {user} = props.user;\n    let _Store = (data) => {\n        let _data = {...data,ID:user.ID}\n\n        let success = (res) => {\n            Toast.show({\n                text1:translate(\"success\"),\n                text2:translate(\"auth.edit_success\"),\n                visibilityTime:2000\n            })\n            props.closeBottomSheet()\n            props.setUser(res.user)\n        }\n\n        let error = err => {\n            console.log(\"Error Update User:\",err,\"\\n\",err.response.data)\n            Toast.show({\n                text1:translate(\"error\"),\n                text2:translate(\"network_error\"),\n                type:'error'\n            })\n        }\n\n        apis.auth.update(_data,success,error)\n\n    }\n    return (\n        <View style={{ height: height / 1.25, width: '100%', backgroundColor: 'white' }}>\n            <View style={{ padding: 15 }}>\n                <Text style={{ textAlign: 'left', fontSize: 18, fontFamily: TranslationsMethods.ReturnFont(\"Bold\")}}>{translate(\"auth.edit_user\")}</Text>\n                <View style={{ marginTop: 30 }}>\n                    <Controller\n                        control={control}\n                        name=\"name\"\n                        render={({ onChange, onBlur, value }) => (\n                            <Input\n                                onBlur={onBlur}\n                                value={value}\n                                onChangeText={(value) => onChange(value)}\n                                placeholder={translate(\"auth.name\")}\n                                textStyle={{ textAlign: \"right\" }}\n                                placeholderTextColor=\"black\"\n                                style={{ width: \"100%\", borderRadius: 50,marginBottom:5 }}\n                                status={errors.name ? \"danger\" : \"default\"}\n                                caption={errors.name ? translate(\"field_required\") : \"\"}\n                            />\n                        )}\n                        defaultValue={user.name}\n                        rules={{ required: true }}\n                    />\n                    <Controller\n                        control={control}\n                        name=\"phone\"\n                        render={({ onChange, onBlur, value }) => (\n                            <Input\n                                onBlur={onBlur}\n                                value={value}\n                                keyboardType=\"phone-pad\"\n                                onChangeText={(value) => onChange(value)}\n                                placeholder={translate(\"auth.phone\")}\n                                textStyle={{ textAlign: \"right\" }}\n                                placeholderTextColor=\"black\"\n                                style={{ width: \"100%\", borderRadius: 50,marginBottom:5 }}\n                                status={errors.phone ? \"danger\" : \"default\"}\n                                caption={errors.phone ? translate(\"field_required\") : \"\"}\n                            />\n                        )}\n                        defaultValue={user.phone}\n                        rules={{ required: true }}\n                    />\n                    <Controller\n                        control={control}\n                        name=\"password\"\n                        render={({ onChange, onBlur, value }) => (\n                            <Input\n                                onBlur={onBlur}\n                                value={value}\n                                secureTextEntry={true}\n                                onChangeText={(value) => onChange(value)}\n                                placeholder={translate(\"auth.password\")}\n                                textStyle={{ textAlign: \"right\" }}\n                                placeholderTextColor=\"black\"\n                                style={{ width: \"100%\", borderRadius: 50,marginBottom:10 }}\n                                caption={translate(\"auth.keep_empty\")}\n                            />\n                        )}\n                        defaultValue=\"\"\n                    />\n                    <View style={{marginTop:20,paddingHorizontal:43}}>\n                        <Button status=\"info\" size=\"small\" onPress={handleSubmit(_Store)}>{translate(\"auth.save\")}</Button>\n                    </View>\n                </View>\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user:state.user\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setUser:item => dispatch(UserActions.setUser(item))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React from 'react';\nimport { View, Dimensions } from 'react-native';\nimport { Layout, Text, Button, Toggle } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport Toast from 'react-native-toast-message'\nimport {apis,TranslationsMethods} from '../../../services'\nimport {UserActions} from '../../../stores'\nimport {translate} from '../../../translations'\nlet EditUser = (props) => {\n    let { width, height } = Dimensions.get(\"screen\")\n    let { user,notificationToken } = props.user;\n\n    let [allNotification, setAllNotification] = React.useState(true)\n    let [orderNotification, setOrderNotification] = React.useState(true)\n\n    let _Save = () => {\n        let _data = {\n            ...notificationToken,\n            all_notification:allNotification,\n            orders_notification:orderNotification\n        }\n\n        let success = (res) => {\n            // If need to do something \n        }\n\n        let error = err => {\n            console.log(\"Error update Notification Token:\",err,\"\\n\",err.response.data)\n        }\n\n        apis.main.UpdateNotificationToken(_data,success,error)\n        Toast.show({\n            text1: translate(\"success\"),\n            text2: translate(\"settings_saved\"),\n            visibilityTime: 2000,\n        })\n        props.closeBottomSheet();\n    }\n\n    React.useEffect(() => {\n        setAllNotification(notificationToken.all_notification)\n        setOrderNotification(notificationToken.orders_notification)\n    },[])\n\n    return (\n        <View style={{ height: height / 1.25, width: '100%', backgroundColor: 'white' }}>\n            <View style={{ padding: 15 }}>\n                <Text style={{ textAlign: 'left', fontSize: 18, fontFamily: TranslationsMethods.ReturnFont(\"Bold\")}}>{translate(\"notification.notification_settings\")}</Text>\n                <View style={{ marginTop: 30, width: '100%' }}>\n                    <View style={{ flexDirection: 'row' }}>\n                        <Toggle checked={allNotification} onChange={(val) => { setAllNotification(val) }}>\n                            {translate(\"notification.all_notification\")}\n                        </Toggle>\n                    </View>\n                    <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                        <Toggle checked={orderNotification} onChange={(val) => { setOrderNotification(val) }}>\n                            {translate(\"notification.order_notification\")}\n                        </Toggle>\n                    </View>\n\n                    <View style={{ marginTop: 15 }}>\n                        <Button onPress={_Save}>{translate(\"save\")}</Button>\n                    </View>\n                </View>\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React from 'react';\nimport { View, Dimensions,StyleSheet,TouchableOpacity } from 'react-native';\nimport { Icon,Layout, Text, Button, Toggle,CheckBox } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport {changeLanguage, translate} from '../../../translations'\nimport {TranslationsMethods} from '../../../services'\nlet EditUser = (props) => {\n    let {height } = Dimensions.get(\"screen\")\n    let {lang} = props.settings.locale\n\n\n    React.useEffect(() => {\n\n        console.log(lang)\n    },[])\n\n    let ToggleView = () => {\n        let styles = StyleSheet.create({\n            box:{\n                \n                borderColor:'#f7f7f7',\n                borderWidth:1,\n                paddingVertical:2,\n                paddingHorizontal:10,\n                height:'100%'\n            }\n        })\n\n        return (\n            <View style={{flexDirection:'row',alignItems:'center',justifyContent:'center'}}>\n                <TouchableOpacity onPress={() => {\n                    if(lang !== \"en\") {\n                        changeLanguage(\"en\",false)\n                    }\n                }} style={{...styles.box,borderTopLeftRadius:5,borderBottomLeftRadius:5,backgroundColor:lang == \"en\"?\"black\":\"white\"}}>\n                    <Text style={{fontSize:12,fontFamily:'CairoBold',color:lang == \"en\"?\"white\":\"black\"}}>EN</Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => {\n                    if(lang !== \"ar\") {\n                        changeLanguage(\"ar\",true)\n                    }\n                }}  style={{...styles.box,borderTopRightRadius:5,borderBottomRightRadius:5,backgroundColor:lang == \"ar\"?\"black\":\"white\"}}>\n                    <Text style={{fontSize:12,fontFamily:'CairoBold',color:lang == \"ar\"?\"white\":\"black\"}}>AR</Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    return (\n        <View style={{paddingHorizontal:10,borderRadius:5,paddingVertical:15,flexDirection:'row',alignItems:'center',justifyContent:'space-between',backgroundColor:'white',marginTop:2}}>\n            <View style={{flexDirection:'row',alignItems:'center'}}>\n                <Icon name={'globe-outline'} style={{width:20,height:20}} fill=\"black\" />\n                <View style={{width:5}}></View>\n                <Text style={{fontSize:12}}>اللغة</Text>\n            </View>\n            <View>\n            <ToggleView ></ToggleView>\n            </View>\n        </View>\n    )\n\n    return (\n        <View style={{ height: height / 1.25, width: '100%', backgroundColor: 'white' }}>\n            <View style={{ padding: 15 }}>\n                <Text style={{ textAlign: 'left', fontSize: 18, fontFamily: TranslationsMethods.ReturnFont(\"Bold\") }}>{translate(\"language\")}</Text>\n                <View style={{ marginTop: 30, width: '100%' }}>\n                    <View style={{ flexDirection: 'row' }}>\n                        <CheckBox checked={lang == \"ar\" ?true:false} onChange={() => {\n                            if(lang !== \"ar\") {\n                                changeLanguage(\"ar\",true)\n                            }\n                        }}>\n                            العربية\n                        </CheckBox>\n                    </View>\n                    <View style={{ flexDirection: 'row', marginTop: 15 }}>\n                        <CheckBox checked={lang == \"en\" ?true:false} onChange={() => {\n                            if(lang !== \"en\") {\n                                changeLanguage(\"en\",false)\n                            }\n                        }}>\n                            English\n                        </CheckBox>\n                    </View>\n                </View>\n            </View>\n        </View>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        settings:state.settings\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);","import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  Icon,\n  Text,\n  TopNavigation,\n  TopNavigationAction,\n} from \"@ui-kitten/components\";\nimport { translate } from \"../../../../translations\";\nimport {MaterialIcons,Ionicons} from '@expo/vector-icons'\n\nexport default () => {\n  const BackIcon = (props) => <Icon {...props} name=\"settings-2-outline\" />;\n\n  const BackAction = () => (\n    <View style={{marginHorizontal:5}}>\n      <Ionicons name=\"person-outline\" style={{fontSize:22}} color={\"black\"} />\n    </View>\n  );\n\n\n  return (\n    <View style={{padding:15}}>\n      <View style={{flexDirection:'row',alignItems:'center'}}>\n      <Ionicons name=\"person-outline\" style={{fontSize:22}} color={\"black\"} />\n        <View style={{width:10}}></View>\n        <Text style={{fontSize:18}}>الأعدادات</Text>\n      </View>\n    </View>\n  );\n};\n","import React from 'react';\r\nimport { View,ScrollView,TouchableOpacity,Dimensions } from 'react-native';\r\nimport { Layout,Text,TopNavigation,Icon,Divider } from '@ui-kitten/components';\r\nimport { connect } from 'react-redux';\r\nimport BottomSheet from \"reanimated-bottom-sheet\";\r\n\r\n// Settings Content\r\nimport {EditUser,Notification,Language} from '../Contents'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { StorageToken } from '../../../constants';\r\nimport {UserActions} from '../../../stores'\r\nimport {translate} from '../../../translations'\r\nimport {TranslationsMethods} from '../../../services'\r\nimport HeaderNav from './components/HeaderNav'\r\nlet SettingsMain = (props) => {\r\n    let {user,auth} = props.user;\r\n    let {navigation} = props;\r\n\r\n    let [type,setType] = React.useState(\"\")\r\n\r\n    let {width,height} = Dimensions.get(\"screen\")\r\n\r\n\r\n    let ListItem = ({icon,title,onPress}) => (\r\n        <TouchableOpacity onPress={onPress} style={{paddingHorizontal:10,borderRadius:5,paddingVertical:15,flexDirection:'row',alignItems:'center',justifyContent:'space-between',backgroundColor:'white',marginTop:2}}>\r\n            <View style={{flexDirection:'row',alignItems:'center'}}>\r\n                <Icon name={icon} style={{width:20,height:20}} fill=\"black\" />\r\n                <View style={{width:5}}></View>\r\n                <Text style={{fontSize:12}}>{title}</Text>\r\n            </View>\r\n            <View>\r\n                <Icon name={TranslationsMethods.ReturnIconArrowSettings()} style={{width:20,height:20}} fill=\"black\" />\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n\r\n    let bottomSheetRef = React.useRef(null)\r\n    let openBottomSheet = () => {\r\n        bottomSheetRef.current.snapTo(0)\r\n    }\r\n    let closeBottomSheet = () => {\r\n        bottomSheetRef.current.snapTo(2)\r\n    }\r\n\r\n    let ShowBottomContent = () => {\r\n        if(type == \"EditUser\") {\r\n            return (\r\n                <EditUser closeBottomSheet={closeBottomSheet} />\r\n            )\r\n        }\r\n\r\n        if(type == \"Notification\") {\r\n            return (\r\n                <Notification closeBottomSheet={closeBottomSheet} />\r\n            )\r\n        }\r\n\r\n        if(type == \"Language\") {\r\n            return (\r\n                <Language closeBottomSheet={closeBottomSheet} />\r\n            )\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    let Logout = async() => {\r\n        await AsyncStorage.removeItem(StorageToken.userToken)\r\n        await AsyncStorage.removeItem(StorageToken.wishList)\r\n        await AsyncStorage.removeItem(StorageToken.firstTime)\r\n\r\n        navigation.navigate(\"Loading\")\r\n    }\r\n     return(\r\n         <Layout style={{flex:1}} level=\"1\">\r\n            <HeaderNav />\r\n            <ScrollView contentContainerStyle={{padding:5,marginTop:5}}>\r\n                <Text style={{fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),textAlign:'left',marginHorizontal:5,fontSize:14}}>{translate(\"settings.account_edit\")}</Text>\r\n                <View style={{marginTop:10}}></View>\r\n                {auth &&\r\n                <>\r\n                <ListItem icon=\"person-outline\" title={translate(\"settings.account_edit_user\")} onPress={() => {setType(\"EditUser\");openBottomSheet()}} />\r\n                <ListItem onPress={() => {navigation.navigate(\"Addresses\")}} icon=\"map-outline\" title={translate(\"settings.addresses\")}  />\r\n                <ListItem icon=\"bell-outline\" title={translate(\"settings.notification\")} onPress={() => {setType(\"Notification\");openBottomSheet()}} />\r\n                </>\r\n                }\r\n                {!auth &&\r\n                    <ListItem onPress={() => {navigation.navigate(\"IntroNavigation\")}} icon=\"log-in-outline\" title={translate(\"settings.login\")} />\r\n                }\r\n                <View style={{marginTop:30}}></View>\r\n                <Text style={{fontFamily:TranslationsMethods.ReturnFont(\"Bold\"),textAlign:'left',marginHorizontal:5,fontSize:14}}>{translate(\"settings.general_settings\")}</Text>\r\n                <View style={{marginTop:10}}></View>\r\n                <Language />\r\n                {/* <ListItem icon=\"share-outline\" title={\"مشاركة\"} onPress={() => {setType(\"Language\");openBottomSheet()}} /> */}\r\n                {/* <ListItem icon=\"inbox-outline\" title={\"اتصل بنا\"} onPress={() => {}} /> */}\r\n                {auth && \r\n                    <ListItem icon=\"log-out-outline\" title={translate(\"settings.logout\")} onPress={Logout} />\r\n                }\r\n            </ScrollView>\r\n\r\n            <BottomSheet\r\n                ref={bottomSheetRef}\r\n                initialSnap={2}\r\n                snapPoints={[height / 1.25, height / 1.25, 0]}\r\n                borderRadius={15}\r\n                renderContent={ShowBottomContent}\r\n                enabledInnerScrolling={true}\r\n            />\r\n         </Layout>\r\n     )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n     return {\r\n         user:state.user\r\n     }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n     return {\r\n         setLogout:item => dispatch(UserActions.setLogout(item))\r\n     }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsMain);","import React from 'react';\nimport {View,TouchableOpacity,StyleSheet} from 'react-native';\nimport {Text,useTheme} from '@ui-kitten/components'\nimport {translate} from '../../../translations'\nimport { colors } from '../../../constants';\nexport default (props) => {\n    let {data,removeAddress} = props;\n    let theme = useTheme()\n    let ListView = ({ title, value, bold = false }) => (\n        <View\n          style={{\n            paddingVertical: 10,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            borderBottomColor:theme['color-info-200'],\n            borderBottomWidth: bold ? 0 : 0.5,\n          }}\n        >\n          <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\n            {title}\n          </Text>\n          <Text category=\"s1\" style={{ fontWeight: bold ? \"bold\" : \"500\" }}>\n            {value}\n          </Text>\n        </View>\n      );\n     return (\n        <View\n      style={{\n        marginTop: 15,\n        padding: 15,\n        marginVertical: 10,\n        borderRadius: 10,\n        borderColor:theme['color-info-200'],\n        borderWidth: 1,\n        backgroundColor:'white',\n        marginHorizontal:10\n      }}\n    >\n      <ListView\n        title={translate(\"addresses.city\")}\n        value={data.city}\n      />\n      <ListView\n        title={translate(\"addresses.area\")}\n        value={data.area}\n      />\n      <ListView\n        title={translate(\"addresses.address\")}\n        value={data.address}\n      />\n      <ListView\n        title={translate(\"addresses.note\")}\n        value={data.note}\n      />\n      <View\n          style={{\n            paddingVertical: 10,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            borderBottomColor:theme['text-hint-color'],\n            borderBottomWidth: 0\n          }}\n        >\n        <TouchableOpacity onPress={() => {removeAddress(data.ID)}}>\n        <Text category=\"s1\" style={{ fontWeight: \"bold\",color:theme['text-danger-color'] }}>\n           {translate(\"addresses.remove\")}\n          </Text>\n        </TouchableOpacity>\n          <Text category=\"s1\" style={{ fontWeight: \"bold\",}}>\n          </Text>\n        </View>\n    </View>\n     )\n}","import React from \"react\";\r\nimport {\r\n  View,\r\n  InputAccessoryView,\r\n  Dimensions,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { Icon, Text, Input, Button, Layout, Spinner } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Toast from 'react-native-toast-message'\r\nimport * as Location from 'expo-location';\r\n\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { apis } from '../../../services'\r\nimport { UserActions } from '../../../stores'\r\nimport {translate} from '../../../translations'\r\nlet AddAddress = ({ user, closeBottomSheet, setAddresses }) => {\r\n  let { control, handleSubmit, errors, reset } = useForm();\r\n  let cityRef = React.useRef();\r\n  let areaRef = React.useRef();\r\n  let addressRef = React.useRef()\r\n  let noteRef = React.useRef()\r\n\r\n  let [lat, setLat] = React.useState(0)\r\n  let [long, setLong] = React.useState(0)\r\n  let [load, setLoad] = React.useState(false)\r\n\r\n\r\n  // Store New Address\r\n  let Store = (data) => {\r\n    setLoad(true)\r\n    data = { ...data, user_id: user.user.ID, lat: lat, long: long }\r\n    let onSuccess = (res) => {\r\n      setAddresses([...user.addresses, res.address])\r\n      Toast.show({\r\n        text1: translate(\"success\") ,\r\n        text2: translate(\"add_success\"),\r\n        visibilityTime: 1000,\r\n        type: 'success'\r\n      })\r\n\r\n      setLoad(false)\r\n      reset()\r\n      closeBottomSheet()\r\n    }\r\n    let onError = (err) => {\r\n      console.log(\"Add Address Error\", err, \"\\n\", err.response.data)\r\n      Toast.show({\r\n        text1: translate(\"error\"),\r\n        text2: translate(\"network_error\"),\r\n        visibilityTime: 2000,\r\n        type: 'error'\r\n      })\r\n      setLoad(false)\r\n    }\r\n    apis.address.storeAddress(data, onSuccess, onError)\r\n  };\r\n\r\n\r\n  let TakeMyLocation = async () => {\r\n    setLoad(true)\r\n    let { status } = await Location.requestPermissionsAsync();\r\n    if (status !== 'granted') {\r\n      Toast.show({\r\n        text1: translate(\"error\"),\r\n        text2: translate(\"addresses.location_error\"),\r\n        type: 'error'\r\n      })\r\n      setLoad(false)\r\n      return;\r\n    }\r\n\r\n    let location = await Location.getCurrentPositionAsync({});\r\n    setLoad(false)\r\n    setLat(location.coords.latitude)\r\n    setLong(location.coords.longitude)\r\n    Toast.show({\r\n      text1: translate(\"success\"),\r\n      text2: translate(\"addresses.location_success\")\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={{ height: \"100%\", backgroundColor: \"white\", padding: 15 }}>\r\n      <KeyboardAwareScrollView\r\n        keyboardShouldPersistTaps=\"handled\"\r\n        keyboardDismissMode=\"none\"\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <Text\r\n          style={{\r\n            textAlign: \"left\",\r\n            color: \"black\",\r\n            fontSize: 18,\r\n            fontFamily: \"CairoBold\",\r\n          }}\r\n        >\r\n          {translate(\"addresses.add_new_address\")}\r\n        </Text>\r\n        <View style={{ marginTop: \"5%\" }}></View>\r\n        <Controller\r\n          control={control}\r\n          name=\"city\"\r\n          render={({ onChange, onBlur, value }) => (\r\n            <Input\r\n              onBlur={onBlur}\r\n              value={value}\r\n              autoCorrect={false}\r\n              onChangeText={(value) => onChange(value)}\r\n              placeholder={translate(\"addresses.city\")}\r\n              textStyle={{ textAlign: \"right\" }}\r\n              placeholderTextColor=\"black\"\r\n              status={errors.city ? \"danger\" : \"default\"}\r\n              caption={errors.city ? translate(\"field_required\"): \"\"}\r\n              inputAccessoryViewID=\"cityAccessory\"\r\n              ref={cityRef}\r\n            />\r\n          )}\r\n          defaultValue=\"\"\r\n          rules={{ required: true }}\r\n        />\r\n        <InputAccessoryView nativeID=\"cityAccessory\">\r\n          <Layout level=\"3\" style={styles.accessory}>\r\n            <View style={{ width: 5 }}></View>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                areaRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-downward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n          </Layout>\r\n        </InputAccessoryView>\r\n        <Controller\r\n          control={control}\r\n          name=\"area\"\r\n          render={({ onChange, onBlur, value }) => (\r\n            <Input\r\n              onBlur={onBlur}\r\n              value={value}\r\n              autoCorrect={false}\r\n              onChangeText={(value) => onChange(value)}\r\n              placeholder={translate(\"addresses.area\")}\r\n              ref={areaRef}\r\n              textStyle={{ textAlign: \"right\" }}\r\n              placeholderTextColor=\"black\"\r\n              status={errors.area ? \"danger\" : \"default\"}\r\n              caption={errors.area ? translate(\"field_required\") : \"\"}\r\n              inputAccessoryViewID=\"areaID\"\r\n            />\r\n          )}\r\n          defaultValue=\"\"\r\n          rules={{ required: true }}\r\n        />\r\n        <InputAccessoryView nativeID=\"areaID\">\r\n          <Layout level=\"3\" style={styles.accessory}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                cityRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-upward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ width: 5 }}></View>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                addressRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-downward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n          </Layout>\r\n        </InputAccessoryView>\r\n        <Controller\r\n          control={control}\r\n          name=\"address\"\r\n          render={({ onChange, onBlur, value }) => (\r\n            <Input\r\n              onBlur={onBlur}\r\n              value={value}\r\n              onChangeText={(value) => onChange(value)}\r\n              placeholder={translate(\"addresses.address\")}\r\n              textStyle={{ textAlign: \"right\" }}\r\n              placeholderTextColor=\"black\"\r\n              status={errors.address ? \"danger\" : \"default\"}\r\n              caption={errors.address ? translate(\"field_required\") : \"\"}\r\n              inputAccessoryViewID=\"addressID\"\r\n              autoCorrect={false}\r\n              ref={addressRef}\r\n            />\r\n          )}\r\n          defaultValue=\"\"\r\n          rules={{ required: false }}\r\n        />\r\n        <InputAccessoryView nativeID=\"addressID\">\r\n          <Layout level=\"3\" style={styles.accessory}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                areaRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-upward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ width: 5 }}></View>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                noteRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-downward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n          </Layout>\r\n        </InputAccessoryView>\r\n        <Controller\r\n          control={control}\r\n          name=\"note\"\r\n          render={({ onChange, onBlur, value }) => (\r\n            <Input\r\n              onBlur={onBlur}\r\n              value={value}\r\n              onChangeText={(value) => onChange(value)}\r\n              placeholder={translate(\"addresses.note\")}\r\n              textStyle={{ textAlign: \"right\" }}\r\n              placeholderTextColor=\"black\"\r\n              autoCorrect={false}\r\n              ref={noteRef}\r\n              inputAccessoryViewID=\"noteID\"\r\n            />\r\n          )}\r\n          defaultValue=\"\"\r\n          rules={{ required: false }}\r\n        />\r\n        <InputAccessoryView nativeID=\"noteID\">\r\n          <Layout level=\"3\" style={styles.accessory}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                addressRef.current.focus();\r\n              }}\r\n            >\r\n              <Icon\r\n                name=\"arrow-ios-upward-outline\"\r\n                style={{ width: 38, height: 38 }}\r\n                fill=\"black\"\r\n              />\r\n            </TouchableOpacity>\r\n\r\n            <View style={{ width: 5 }}></View>\r\n          </Layout>\r\n        </InputAccessoryView>\r\n\r\n        <View style={{ marginVertical: 15, flexDirection: 'row' }}>\r\n          <Button accessoryLeft={(props) => (<Icon {...props} name=\"navigation-2-outline\" />)} onPress={TakeMyLocation} status=\"primary\">{translate(\"addresses.take_location\")}</Button>\r\n        </View>\r\n\r\n        <Button\r\n          style={{ marginTop: 30 }}\r\n          status=\"info\"\r\n          onPress={handleSubmit(Store)}\r\n        >\r\n          {translate(\"addresses.add\")}\r\n        </Button>\r\n      </KeyboardAwareScrollView>\r\n      {load &&\r\n        <View style={{ position: 'absolute', width: '100%', height: '100%', backgroundColor: 'rgba(0,0,0,0.01)', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Spinner status=\"primary\" />\r\n        </View>\r\n      }\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  accessory: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: 48,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 8,\r\n    zIndex: 104,\r\n    borderTopRightRadius: 5,\r\n    borderTopLeftRadius: 5,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAddresses: item => dispatch(UserActions.setAddresses(item))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddAddress);\r\n","import React from 'react';\nimport { View, ScrollView, Dimensions } from 'react-native';\nimport { Layout, Text, TopNavigation, Button } from '@ui-kitten/components';\nimport { connect } from 'react-redux';\nimport AddressBox from './AddressBox'\nimport AddAddress from './AddAddress'\nimport Toast from 'react-native-toast-message'\n\nimport BottomSheet from \"reanimated-bottom-sheet\";\nimport { UserActions } from '../../../stores'\nimport { apis } from '../../../services';\nimport { translate } from '../../../translations';\nimport { Headers } from '../../../components'\n\nlet Addresses = (props) => {\n\n    let { addresses } = props.user\n\n    let { height, width } = Dimensions.get(\"screen\")\n\n    let ShowAddAddressContent = () => (\n        <AddAddress closeBottomSheet={closeBottomSheet} />\n    );\n\n\n\n    let BottomSheetRef = React.useRef(null);\n    let closeBottomSheet = () => {\n        BottomSheetRef.current.snapTo(2);\n    };\n    let openBottomSheet = () => {\n        BottomSheetRef.current.snapTo(0);\n    };\n\n\n    let removeAddress = (id) => {\n        let success = (res) => {\n            let _addresses = addresses\n            _addresses.forEach((trg, index) => {\n                if (id == trg.ID) {\n                    _addresses.splice(index, 1)\n                }\n            })\n            props.setAddresses(_addresses)\n            Toast.show({\n                text1: translate(\"success\"),\n                text2: translate(\"addresses.address_deleted\"),\n                visibilityTime: 1500\n            })\n        }\n\n        let error = (err) => {\n            console.log(\"Remove Address error:\", err, \"\\n\", err.response.data)\n            Toast.show({\n                text1: translate(\"error\"),\n                text2: translate(\"network_error\"),\n                type: 'danger'\n            })\n        }\n\n        apis.address.removeAddress(id, success, error)\n    }\n\n    return (\n        <Layout level=\"1\" style={{ flex: 1 }}>\n            <Headers.HeaderNav />\n            <View style={{ paddingHorizontal: 43 }}>\n                <Button size=\"small\" status=\"info\" onPress={openBottomSheet}>+ {translate(\"addresses.add_new_address\")}</Button>\n            </View>\n            <ScrollView showsVerticalScrollIndicator={false}>\n                {addresses.map((trg, index) => (\n                    <AddressBox removeAddress={removeAddress} data={trg} key={index} />\n                ))}\n                <View style={{ height: 100 }}></View>\n            </ScrollView>\n            <BottomSheet\n                ref={BottomSheetRef}\n                initialSnap={2}\n                snapPoints={[height / 1.25, height / 1.25, 0]}\n                borderRadius={15}\n                renderContent={ShowAddAddressContent}\n                enabledInnerScrolling={true}\n            />\n        </Layout>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setAddresses: item => dispatch(UserActions.setAddresses(item))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Addresses);","import React from \"react\";\r\n\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n} from \"@react-navigation/stack\";\r\n\r\n\r\nimport {SettingsMain,Addresses} from '../views/Settings'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport {Animations} from '../constants'\r\n\r\n/** Render() */\r\nexport default function OrdersNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"SettingsMain\"}\r\n    >\r\n     <Stack.Screen name=\"SettingsMain\" component={SettingsMain} />\r\n     <Stack.Screen name=\"Addresses\" component={Addresses} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","import React from \"react\";\n\n\n/** Navigation Components */\nimport {\n  createStackNavigator,\n} from \"@react-navigation/stack\";\n\n\n/** Screens */\n\nimport { AdShow,Category,Item,ItemsShow,Search,Checkout,CheckoutDone,Home } from '../views'\n/** Stack Creator */\nconst Stack = createStackNavigator();\n\n// ------- Constants -------//\nimport { Animations } from '../constants'\n\n\n/** Render() */\nexport default function MainNavigation(props) {\n  // variables\n  const snapPoints = React.useMemo(() => [0, '90%'], []);\n  return [\n    <Stack.Navigator\n      key={\"Screens\"}\n      screenOptions={Animations.screenOptions}\n      headerMode=\"float\"\n      animation=\"fade\"\n      initialRouteName={\"Home\"}\n    >\n      <Stack.Screen name=\"Home\" component={Home} />\n      <Stack.Screen name=\"AdShow\" component={AdShow} />\n      <Stack.Screen name=\"Category\" component={Category} />\n      <Stack.Screen name=\"ItemsShow\" component={ItemsShow} />\n      <Stack.Screen name=\"Search\" component={Search} />\n    \n    </Stack.Navigator>\n  ];\n}\n","import React from \"react\";\r\n\r\n\r\n// Views\r\nimport { Feather,MaterialCommunityIcons,Ionicons,Foundation } from \"@expo/vector-icons\";\r\nimport { Home,Wishlist,Settings } from \"../views\";\r\nimport OrdersNavigation from './OrdersNavigation'\r\nimport SettingsNavigation from './SettingsNavigation'\r\n\r\n// Services\r\nimport { useTheme } from \"@ui-kitten/components\";\r\nimport { AnimatedTabBarNavigator } from \"react-native-animated-nav-tab-bar\";\r\nimport {TranslationsMethods} from '../services'\r\nimport HomeNavigation from './HomeNavigation'\r\n// Stores\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Tab = AnimatedTabBarNavigator();\r\n\r\nlet BottomTapNavigation = (props) => {\r\n  let theme = useTheme();\r\n  let { auth } = props.user;\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName;\r\n\r\n          if (route.name === TranslationsMethods.ReturnBottomTitle(\"HomeNavigation\")) {\r\n            return (\r\n              <Ionicons name={\"ios-home-outline\"} size={size} color={color} />\r\n            )\r\n          } \r\n          else if(route.name === TranslationsMethods.ReturnBottomTitle(\"MyOrders\")) {\r\n            return (\r\n              <Ionicons name=\"reader-outline\" size={size + 1} color={color}></Ionicons>\r\n            )\r\n          }else if(route.name === TranslationsMethods.ReturnBottomTitle(\"Wishlist\")) {\r\n            return (\r\n              <Ionicons name=\"heart-outline\" size={size + 3} color={color}></Ionicons>\r\n            )\r\n          }else if(route.name === TranslationsMethods.ReturnBottomTitle(\"Settings\")) {\r\n            return (\r\n              <Ionicons name=\"person-outline\" size={size + 1} color={color}></Ionicons>\r\n            )\r\n          }\r\n\r\n          // You can return any component that you like here!\r\n          return (\r\n              <Feather name={iconName} size={size} color={color} />\r\n          );\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: 'white',\r\n        inactiveTintColor: \"gray\",\r\n        showLabel: false,\r\n        \r\n      }}\r\n      appearance={{\r\n        floating:true,\r\n        activeTabBackgrounds:theme['color-info-500']\r\n      }}\r\n      initialRouteName={TranslationsMethods.ReturnBottomTitle(\"HomeNavigation\")}\r\n    >\r\n      <Tab.Screen name={TranslationsMethods.ReturnBottomTitle(\"HomeNavigation\")} component={HomeNavigation} />\r\n      <Tab.Screen name={TranslationsMethods.ReturnBottomTitle(\"MyOrders\")} component={OrdersNavigation} />\r\n      <Tab.Screen name={TranslationsMethods.ReturnBottomTitle(\"Wishlist\")} component={Wishlist} />\r\n      <Tab.Screen name={TranslationsMethods.ReturnBottomTitle(\"Settings\")} component={SettingsNavigation} />\r\n    </Tab.Navigator>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BottomTapNavigation);\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Layout, Text, Button, Input, useTheme } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StorageToken } from \"../../constants\";\r\nimport { UserActions } from \"../../stores\";\r\nimport { apis } from \"../../services\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {translate} from '../../translations'\r\nlet InternalLogin = (props) => {\r\n  let { width, height } = Dimensions.get(\"window\");\r\n  let { control, handleSubmit, errors } = useForm();\r\n  let { setUser } = props;\r\n  let theme = useTheme()\r\n\r\n  let _Login = (data) => {\r\n    let loginSuccess = async (res) => {\r\n      // Set User And Token\r\n      setUser(res.user);\r\n      let token = res.token;\r\n      await AsyncStorage.setItem(StorageToken.userToken, token);\r\n      await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n      Toast.show({\r\n        text1: translate(\"success\"),\r\n        text2: translate(\"auth.login_success\"),\r\n        type: \"success\",\r\n        onHide: () => {\r\n          props.navigation.navigate(\"Checkout\");\r\n        },\r\n        visibilityTime: 2000,\r\n      });\r\n    };\r\n\r\n    let loginError = (err) => {\r\n      console.log(\"login error:\", err, \"\\n\", err.response.data);\r\n      let error = {\r\n        text1: translate(\"error\"),\r\n        text2: translate(\"network_error\"),\r\n      };\r\n      let message = err.response.data.message;\r\n      if (message == \"record not found\") {\r\n        error.text1 = translate(\"error\");\r\n        error.text2 = translate(\"auth.no_user\");\r\n      }\r\n      if (\r\n        message ==\r\n        \"crypto/bcrypt: hashedPassword is not the hash of the given password\"\r\n      ) {\r\n        error.text1 = translate(\"error\");\r\n        error.text2 = translate(\"auth.register_error\");\r\n      }\r\n      Toast.show({\r\n        text1: error.text1,\r\n        text2: error.text2,\r\n        type: \"error\",\r\n        autoHide: true,\r\n      });\r\n    };\r\n\r\n    apis.auth.login(data, loginSuccess, loginError);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <View style={{ flex: 1, flexDirection: \"column\" }}>\r\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../assets/logo/logo.png\")}\r\n              style={{ width: width / 3, height: width / 3 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n            <View style={{ marginTop: \"5%\", paddingHorizontal: \"10%\" }}>\r\n              <Controller\r\n                control={control}\r\n                name=\"phone\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    keyboardType=\"phone-pad\"\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder={translate(\"auth.phone\")}\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.phone ? \"danger\" : \"default\"}\r\n                    caption={errors.phone ? translate(\"field_required\") : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"password\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder={translate(\"auth.password\")}\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.password ? \"danger\" : \"default\"}\r\n                    caption={errors.password ? translate(\"field_required\") : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: \"5%\", width: \"50%\" }}>\r\n              <Button\r\n                onPress={handleSubmit(_Login)}\r\n                status=\"primary\"\r\n                style={{ borderRadius: 50 }}\r\n              >\r\n                {translate(\"auth.login\")}\r\n              </Button>\r\n            </View>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"15%\",\r\n                width: \"100%\",\r\n                marginTop: \"5%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{ height: 0.5, backgroundColor: \"#f7f7f7\" }}\r\n                ></View>\r\n              </View>\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              ></View>\r\n            </View>\r\n            <View style={{ marginTop: 15, flexDirection: \"row\" }}>\r\n              <Text> {translate(\"auth.not_have\")}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"InternalRegister\");\r\n                }}\r\n              >\r\n                <Text style={{ fontFamily: \"CairoBold\" }}> {translate(\"auth.register\")}</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(UserActions.setUser(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InternalLogin);\r\n","import React from \"react\";\r\nimport {\r\n  View,\r\n  ImageBackground,\r\n  Image,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Layout, Text, Button, Input, useTheme } from \"@ui-kitten/components\";\r\nimport { connect } from \"react-redux\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { StorageToken } from \"../../constants\";\r\nimport { UserActions } from \"../../stores\";\r\nimport { apis } from \"../../services\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport {translate} from '../../translations'\r\nlet InternalRegister = (props) => {\r\n  let { control, handleSubmit, errors } = useForm();\r\n  let { width, height } = Dimensions.get(\"window\");\r\n  let { setUser } = props;\r\n  let theme = useTheme();\r\n  let [localUser, setLocalUser] = React.useState({\r\n    phone: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    role_id: 1000,\r\n  });\r\n\r\n  let _Register = (data) => {\r\n    let registerSuccess = async (res) => {\r\n      // Set User And Token\r\n      setUser(res.user);\r\n      let token = res.token;\r\n      await AsyncStorage.setItem(StorageToken.userToken, token);\r\n      await AsyncStorage.setItem(StorageToken.firstTime, \"false\");\r\n      Toast.show({\r\n           text1:translate(\"success\"),\r\n           text2:translate(\"register_success\"),\r\n           type:'success',\r\n           onHide:() => {\r\n               props.navigation.navigate(\"Checkout\");\r\n           },\r\n           visibilityTime:2000\r\n      })\r\n    };\r\n\r\n    let registerError = (err) => {\r\n     //  console.log(\"Register error:\", err, \"\\n\", err.response.data);\r\n      let error = { text1: translate(\"error\"), text2: translate(\"network_error\") };\r\n      let message = err.response.data.error;\r\n      if(message.includes(\"Error 1062:\")) {\r\n           error.text1 = translate(\"error\")\r\n           error.text2 = translate(\"auth.same\")\r\n      }\r\n      Toast.show({\r\n        text1: error.text1,\r\n        text2: error.text2,\r\n        type: \"error\",\r\n        autoHide: true,\r\n      });\r\n    };\r\n\r\n    apis.auth.register(data, registerSuccess, registerError);\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ flex: 1 }}>\r\n      <View\r\n        style={{ flex: 1, flexDirection: \"column\" }}\r\n      >\r\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\r\n          <View\r\n            style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n          >\r\n            <Image\r\n              source={require(\"../../assets/logo/logo.png\")}\r\n              style={{ width: width / 3, height: width / 3 }}\r\n              resizeMode=\"cover\"\r\n            />\r\n            <View style={{ marginTop: \"5%\", paddingHorizontal: \"10%\" }}>\r\n            <Controller\r\n                control={control}\r\n                name=\"name\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder={translate(\"auth.name\")}\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.name ? \"danger\" : \"default\"}\r\n                    caption={errors.name ? translate(\"field_required\") : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            <Controller\r\n                control={control}\r\n                name=\"phone\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    keyboardType=\"phone-pad\"\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder={translate(\"auth.phone\")}\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.phone ? \"danger\" : \"default\"}\r\n                    caption={errors.phone ? translate(\"field_required\") : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"password\"\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Input\r\n                    onBlur={onBlur}\r\n                    value={value}\r\n                    secureTextEntry={true}\r\n                    onChangeText={(value) => onChange(value)}\r\n                    placeholder={translate(\"auth.password\")}\r\n                    textStyle={{ textAlign: \"right\" }}\r\n                    placeholderTextColor=\"black\"\r\n                    style={{ width: \"100%\", borderRadius: 50 }}\r\n                    status={errors.password ? \"danger\" : \"default\"}\r\n                    caption={errors.password ? translate(\"field_required\") : \"\"}\r\n                  />\r\n                )}\r\n                defaultValue=\"\"\r\n                rules={{ required: true }}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: \"5%\", width: \"50%\" }}>\r\n              <Button\r\n                onPress={handleSubmit(_Register)}\r\n                status=\"primary\"\r\n                style={{ borderRadius: 50 }}\r\n              >\r\n                {translate(\"auth.register\")}\r\n              </Button>\r\n            </View>\r\n            <View\r\n              style={{\r\n                position: \"relative\",\r\n                height: \"15%\",\r\n                width: \"100%\",\r\n                marginTop: \"5%\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  position: \"absolute\",\r\n                  left: 0,\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <View\r\n                  style={{ height: 0.5, backgroundColor: \"#f7f7f7\" }}\r\n                ></View>\r\n              </View>\r\n            </View>\r\n            <View style={{ marginTop: 15, flexDirection: \"row\" }}>\r\n              <Text>{translate(\"auth.have_account\")}</Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  props.navigation.navigate(\"InternalLogin\");\r\n                }}\r\n              >\r\n                <Text style={{ fontFamily: \"CairoBold\" }}> {translate(\"auth.login\")}</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setUser: (item) => dispatch(UserActions.setUser(item)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InternalRegister);\r\n","import React from \"react\";\n\n// Views\nimport { View, StyleSheet, Dimensions, TouchableOpacity } from \"react-native\";\nimport { Layout, Text, Button, useTheme } from \"@ui-kitten/components\";\nimport { AntDesign, Ionicons, Feather } from '@expo/vector-icons'\nimport { CardCheckout,Badge } from '../../components'\nimport DetailCard from '../../components/Cards/DetailCard'\nimport {ScrollView} from 'react-native-gesture-handler'\n\n\n// Services\nimport { useNavigation } from '@react-navigation/native';\nimport { translate } from '../../translations'\nimport {BasketClass} from '../../services'\n\n// Stores\nimport { connect } from \"react-redux\";\nimport { OrdersActions } from '../../stores'\nlet CheckoutWithBottom = (props) => {\n    let { width } = Dimensions.get(\"screen\");\n    let { closePanel, orders, user } = props;\n    let navigation = useNavigation()\n\n    let { orderItems } = orders\n    let theme = useTheme();\n\n\n    let EmptyContent = () => (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n            <AntDesign name=\"meh\" style={{ fontSize: 64, color: theme['text-hint-color'] }} />\n            <Text style={{ color: theme['text-hint-color'], marginTop: 15, fontSize: 14, textAlign: 'center' }}>{translate(\"main.basket_empty\")}</Text>\n        </View>\n    )\n\n\n    let CategoryTotal = (items) => {\n        let total = 0\n        items.forEach((trg) => {\n            let itemTotal = trg.item.price * trg.qty\n            total = total + itemTotal\n        })\n\n        return total.toFixed(2)\n    }\n\n    let CategoryTitleView = ({ title, items, color = theme['color-primary-500'] }) => (\n        <View style={{ flexDirection: 'row', alignItems: 'center', paddingVertical: 5 }}>\n            <View style={{ height: '100%', width: 4, backgroundColor: color, borderRadius: 1 }}></View>\n            <View style={{ width: 5 }}></View>\n            <View style={{flexDirection:'row'}}>\n            <Text style={{ fontFamily: 'CairoBold' }}>{title}</Text>\n            <View style={{ paddingHorizontal: 2,position:'absolute',right:-15,top:-2 }}>\n                {/* <Text style={{ color: theme['text-hint-color'], fontSize: 12 }}>({items.length})</Text> */}\n                <Badge size=\"small\" count={items.length} />\n            </View>\n            </View>\n\n            <View style={{ paddingHorizontal: 7 }}>\n                <Text style={{ color: theme['text-hint-color'], fontSize: 12 }}>({CategoryTotal(items) + ' ' + translate(\"jod\")})</Text>\n            </View>\n        </View>\n    )\n\n    let BillTotal = () => {\n        let total = 0\n        orderItems.forEach((trg) => {\n            trg.items.forEach((item) => {\n                let ItemTotal = item.item.price * item.qty\n                total = total + ItemTotal\n            })\n        })\n\n        return total.toFixed(2);\n    }\n\n\n    let ItemsCount = () => {\n        let length = 0\n        orderItems.forEach((trg) => {\n            trg.items.forEach((item) => {\n                length = length + item.qty\n            })\n        })\n\n        return length;\n    }\n\n\n    let TotalOriginalPrice = () => {\n        let total = 0\n        orderItems.forEach((trg) => {\n            trg.items.forEach((item) => {\n                let ItemTotal = item.item.original_price * item.qty\n                total = total + ItemTotal\n            })\n        })\n\n        return total.toFixed(2);\n    }\n\n\n    let ProvideTotal = () => {\n        let TotalOriginal = TotalOriginalPrice()\n        let _BillTotal = BillTotal()\n\n\n        let provide = TotalOriginal - _BillTotal\n\n        return provide.toFixed(2)\n    }\n\n    let PTotal = () => {\n        let TotalOriginal = TotalOriginalPrice()\n        let _BillTotal = BillTotal()\n\n        let provide = TotalOriginal - _BillTotal\n\n        let p = provide / TotalOriginal\n        p = p * 100\n\n        return p.toFixed(0);\n    }\n\n    let ActionsBox = () => (\n        <View>\n            <View style={{ justifyContent: 'center', backgroundColor: 'white', alignItems: 'center' }}>\n                <DetailCard size=\"x-large\" value={BillTotal()} valueSubTitle={translate(\"jod\")} valueStyle={{ color: 'black' }} title={'مجموع الفاتورة'} />\n            </View>\n            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around' }}>\n                <DetailCard value={ItemsCount()} title={'مجموع المواد'}></DetailCard>\n                <DetailCard value={TotalOriginalPrice()} valueStyle={{ textDecorationStyle: 'solid', textDecorationColor: theme['text-hint-color'], textDecorationLine: 'line-through' }} title={'السعر الاصلي'}></DetailCard>\n            </View>\n            <View style={{ paddingTop: 10, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around' }}>\n            <DetailCard value={ProvideTotal()} valueSubTitle={PTotal() + '%'} title={'قيمة التوفير'}></DetailCard>\n            <DetailCard value={\"48\"} valueSubTitle={\"ساعه\"} title={'التوصيل خلال'}></DetailCard>\n            </View>\n            <View style={{ paddingTop: 10, paddingBottom: 5, paddingHorizontal: 43 }}>\n                <Button size=\"small\" status=\"info\" onPress={() => { \n                    BasketClass.closeBottom()\n                    navigation.navigate(user.auth ? \"Checkout\" : \"InternalLogin\") \n                    }}>تنفيذ العملية</Button>\n            </View>\n        </View>\n    )\n    return (\n        <Layout level=\"1\" style={styles.container}>\n            <View\n                style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    paddingTop:2,\n                }}\n            >\n                <View style={{ flexDirection: \"row\", alignItems: \"flex-start\" }}>\n                    <Ionicons\n                        name=\"ios-cart-outline\"\n                        style={{ color: \"black\", fontSize: 24 }}\n                    />\n                    <View style={{ width: 1 }}></View>\n                    <Text style={{ color: \"black\", fontSize: 20,fontFamily:'openSansBold' }}>{translate(\"main.basket\")}</Text>\n                </View>\n                <TouchableOpacity\n                    onPress={() => {\n                        BasketClass.closeBottom()\n                    }}\n                >\n                    <Feather\n                        name=\"minus-square\"\n                        style={{ color: theme[\"color-danger-500\"], fontSize: 20 }}\n                    />\n                </TouchableOpacity>\n            </View>\n            {orderItems.length == 0 &&\n                <EmptyContent />\n            }\n            {orderItems.length > 0 &&\n                <View style={{ flex: 1 }}>\n                    <View\n                        style={{\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <ActionsBox />\n                    </View>\n                    <View >\n                        <ScrollView showsVerticalScrollIndicator={false}>\n                            <View style={{ flexDirection: \"row\", flexWrap: \"wrap\" }}>\n                                {orderItems.map((trg) => (\n                                    <View key={trg.category} style={{ paddingBottom: '3%', paddingTop: '5%', width: '100%' }}>\n                                        <CategoryTitleView color={trg.category == \"أدوات منزلية\" ? theme['color-warning-500'] : theme['color-primary-500']} title={trg.category} items={trg.items} />\n                                        <ScrollView contentContainerStyle={{ paddingTop: 5 }} showsHorizontalScrollIndicator={false} horizontal={true}>\n                                            {trg.items.map((item, index) => (\n                                                <View key={index} style={{ width: width / 2, marginHorizontal: 2 }}>\n                                                    <CardCheckout item={item} />\n                                                </View>\n                                            ))}\n                                        </ScrollView>\n                                    </View>\n                                ))}\n                            </View>\n                            <View style={{ height: width / 2 }}></View>\n                        </ScrollView>\n                    </View>\n                </View>\n            }\n        </Layout>\n    );\n};\n\nlet styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 1,\n        paddingHorizontal: 10,\n        borderColor: \"#f7f7f7\",\n        borderWidth: 0.5,\n        zIndex: 104,\n    },\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        orders: state.orders,\n        user: state.user\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setOrderItems: item => dispatch(OrdersActions.setOrderItems(item))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutWithBottom);\n","import React from \"react\";\r\n\r\nimport {View,Dimensions} from 'react-native'\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n} from \"@react-navigation/stack\";\r\n\r\n\r\n/** Screens */\r\nimport BottomTapNavigation from './BottomTapNavigation'\r\nimport { AdShow,Category,Item,ItemsShow,Search,Checkout,CheckoutDone } from '../views'\r\nimport {InternalRegister,InternalLogin} from '../views/InternalAuth'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport { Animations } from '../constants'\r\n\r\n// Basket Screen Call\r\nimport { BasketClass } from '../services'\r\nimport BottomSheet from \"reanimated-bottom-sheet\";\r\nimport CheckoutWithBottom from '../views/Home/CheckoutWithBottom'\r\n\r\n\r\n/** Render() */\r\nexport default function MainNavigation(props) {\r\n  let height = Dimensions.get(\"screen\").height\r\n  // variables\r\n  const snapPoints = React.useMemo(() => [0, height  /1.5,0], []);\r\n  let ShowCheckoutbutton = () => (\r\n    <View style={{backgroundColor:'white',height:height / 1.5,width:'100%'}}>\r\n      <CheckoutWithBottom />\r\n    </View>\r\n  )\r\n  return [\r\n    <Stack.Navigator\r\n      key={\"Screens\"}\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"BottomTapNavigation\"}\r\n    >\r\n      <Stack.Screen name=\"BottomTapNavigation\" component={BottomTapNavigation} />\r\n      {/* <Stack.Screen name=\"AdShow\" component={AdShow} /> */}\r\n      {/* <Stack.Screen name=\"Category\" component={Category} /> */}\r\n      <Stack.Screen name=\"Item\" component={Item} />\r\n      {/* <Stack.Screen name=\"ItemsShow\" component={ItemsShow} /> */}\r\n      {/* <Stack.Screen name=\"Search\" component={Search} /> */}\r\n      <Stack.Screen name=\"Checkout\" component={Checkout} />\r\n      <Stack.Screen name=\"CheckoutDone\" component={CheckoutDone} />\r\n      <Stack.Screen name=\"InternalRegister\" component={InternalRegister} />\r\n      <Stack.Screen name=\"InternalLogin\" component={InternalLogin} />\r\n    </Stack.Navigator>,\r\n    <BottomSheet\r\n      key={\"BottomSheet\"}\r\n      ref={(ref) => BasketClass.setRef(ref)}\r\n      initialSnap={0}\r\n      snapPoints={snapPoints}\r\n      renderContent={ShowCheckoutbutton}\r\n      enabledInnerScrolling={true}\r\n    >\r\n    </BottomSheet>\r\n  ];\r\n}\r\n","import React from \"react\";\r\n\r\n\r\n/** Navigation Components */\r\nimport {\r\n  createStackNavigator,\r\n} from \"@react-navigation/stack\";\r\n\r\n\r\n// Intros\r\nimport {Intro} from '../views'\r\n\r\n/** Stack Creator */\r\nconst Stack = createStackNavigator();\r\n\r\n// ------- Constants -------//\r\nimport {Animations} from '../constants'\r\n\r\n/** Render() */\r\nexport default function IntroNavigation(props) {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={Animations.screenOptions}\r\n      headerMode=\"float\"\r\n      animation=\"fade\"\r\n      initialRouteName={\"IntroMain\"}\r\n    >\r\n     <Stack.Screen name=\"IntroMain\" component={Intro.IntroMain} />\r\n     <Stack.Screen name=\"IntroLogin\" component={Intro.Login} />\r\n     <Stack.Screen name=\"IntroRegister\" component={Intro.Register} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n","/**\r\n * Router.js\r\n * Call Navigation And Other Stuffs\r\n * Make By Ahmed Altommy\r\n * #Main Navigation Handler.\r\n */\r\n\r\nimport { Platform, SafeAreaView, View } from \"react-native\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport { Animations } from \"./constants\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport React from \"react\";\r\n\r\n\r\n// Navigation Screens\r\nimport {Loading} from './views' // App Loader\r\nimport MainNavigation from \"./navigation/MainNavigation\"; // Call Main Navigation after complete Intro or loading\r\nimport IntroNavigation from \"./navigation/IntroNavigation\"; // Intro with first time has open the app \r\n\r\nconst Stack = createStackNavigator(); // Create the stack\r\n\r\n\r\n// Theme And Components\r\nimport { ApplicationProvider, IconRegistry, } from \"@ui-kitten/components\"; // UI Application Provider\r\nimport { EvaIconsPack } from \"@ui-kitten/eva-icons\"; // Icons Pack\r\nimport { default as mapping } from \"./assets/theme/mapping.json\"; // Register mapping -> Has FontFamily and other props\r\nimport { default as theme } from \"./assets/theme/theme.json\"; // There for the application\r\nimport * as eva from \"@eva-design/eva\"; //Design System\r\nexport default () => {\r\n\r\n  \r\n  let RouterComponents = () => (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={Animations.screenOptionsHome}\r\n        initialRouteName={\"Loading\"}\r\n        headerMode=\"float\"\r\n        animation=\"fade\"\r\n      >\r\n        <Stack.Screen name=\"Loading\" component={Loading} />\r\n        <Stack.Screen name=\"MainNavigation\" component={MainNavigation} />\r\n        <Stack.Screen name=\"IntroNavigation\" component={IntroNavigation} />\r\n      </Stack.Navigator>\r\n     \r\n    </NavigationContainer>\r\n  );\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <IconRegistry icons={EvaIconsPack} />\r\n      <ApplicationProvider {...eva} theme={{ ...eva.light, ...theme }} customMapping={mapping} >\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n          <StatusBar style=\"inverted\" backgroundColor={theme['color-info-500']} />\r\n          <RouterComponents />\r\n        </SafeAreaView>\r\n      </ApplicationProvider>\r\n    </View>\r\n  );\r\n};\r\n","/**\r\n * Register Toast and Stores And Routers Section\r\n * Make By Ahmed Altommy\r\n * #Main App Bootstrap.\r\n */\r\n\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\n\r\nimport { StyleSheet } from \"react-native\";\r\nimport Toast from 'react-native-toast-message';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport Router from \"./Router\";\r\nimport store from \"./stores/store\";\r\n\r\nexport default function Root(props) {\r\n    return (\r\n      <Provider store={store} style={styles.container}>\r\n        <Router />\r\n        <Toast ref={(ref) => Toast.setRef(ref)} />\r\n      </Provider>\r\n    );\r\n}\r\n\r\n// ---------- Styles --------- //\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});","/**\r\n * App JS \r\n * Load All Assets Before Call any Screens\r\n * Make By Ahmed Altommy\r\n * #Main App Bootstrap.\r\n */\r\n\r\nimport * as SplashScreen from \"expo-splash-screen\";\r\nimport Root from './src/Root.js'\r\nimport { FontsLoader, LocaleLoader } from \"./src/services\";\r\n\r\nimport React from \"react\";\r\n\r\n\r\nexport default function App(props) {\r\n  // Constants\r\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false); // Async Loading\r\n\r\n  // Install\r\n  let install = async () => {\r\n    try {\r\n      // Splash Screen\r\n      await SplashScreen.preventAutoHideAsync();\r\n\r\n      // Load Fonts\r\n      await FontsLoader();\r\n\r\n      // Locale Loader\r\n      await LocaleLoader();\r\n\r\n      // End\r\n    } catch (error) {\r\n      // On Error\r\n      console.log(error);\r\n    } finally {\r\n      // When Complete\r\n      await SplashScreen.hideAsync();\r\n      setLoadingComplete(true);\r\n\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // Call Install Function\r\n    install();\r\n  }, []);\r\n\r\n  // --------------- Return -------------- //\r\n\r\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <Root />\r\n    );\r\n  }\r\n}","module.exports = __webpack_public_path__ + \"static/media/raccoon.19cba228.png\";","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/OpenSans-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Cairo-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Cairo-Bold.ttf\";","module.exports = __webpack_public_path__ + \"static/media/loading.b4038c74.png\";"],"sourceRoot":""}